"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4585],{39567:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var s=t(85893),o=t(11151);const i={id:"posts-indexer",title:"Posts \uc778\ub371\uc11c",sidebar_label:"Posts \uc778\ub371\uc11c"},r=void 0,c={id:"bos/tutorial/indexer-tutorials/posts-indexer",title:"Posts \uc778\ub371\uc11c",description:"NEAR QueryAPI is currently under development. Users who want to test-drive this solution need to be added to the allowlist before creating or forking QueryAPI indexers.",source:"@site/i18n/ko/docusaurus-plugin-content-docs/current/bos/tutorial/indexer-tutorials/posts-indexer.md",sourceDirName:"bos/tutorial/indexer-tutorials",slug:"/bos/tutorial/indexer-tutorials/posts-indexer",permalink:"/ko/bos/tutorial/indexer-tutorials/posts-indexer",draft:!1,unlisted:!1,editUrl:"https://github.com/near/docs/edit/master/website/../docs/bos/tutorial/indexer-tutorials/posts-indexer.md",tags:[],version:"current",lastUpdatedBy:"Github Actions",lastUpdatedAt:1704996595,formattedLastUpdatedAt:"2024\ub144 1\uc6d4 11\uc77c",frontMatter:{id:"posts-indexer",title:"Posts \uc778\ub371\uc11c",sidebar_label:"Posts \uc778\ub371\uc11c"},sidebar:"tutorials",previous:{title:"Base64 \ub9e4\uac1c\ubcc0\uc218, \ub9c8\ubb34\ub9ac",permalink:"/ko/tutorials/crosswords/intermediate/base64vecu8"},next:{title:"Hype \uc778\ub371\uc11c",permalink:"/ko/bos/tutorial/indexer-tutorials/hype-indexer"}},a={},d=[{value:"\uac1c\uc694",id:"\uac1c\uc694",level:2},{value:"\ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc2a4\ud0a4\ub9c8 \uc815\uc758",id:"\ub370\uc774\ud130\ubca0\uc774\uc2a4-\uc2a4\ud0a4\ub9c8-\uc815\uc758",level:2},{value:"\uc778\ub371\uc2f1 \ub85c\uc9c1 \uc815\uc758",id:"\uc778\ub371\uc2f1-\ub85c\uc9c1-\uc815\uc758",level:2},{value:"\ube14\ub85d\uccb4\uc778 \ud2b8\ub79c\uc7ad\uc158 \ud544\ud130\ub9c1",id:"\ube14\ub85d\uccb4\uc778-\ud2b8\ub79c\uc7ad\uc158-\ud544\ud130\ub9c1",level:3},{value:"\ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \ub370\uc774\ud130 \uc800\uc7a5",id:"\ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0-\ub370\uc774\ud130-\uc800\uc7a5",level:3},{value:"Querying data from the indexer",id:"querying-data-from-the-indexer",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.admonition,{type:"info",children:[(0,s.jsx)(n.p,{children:"NEAR QueryAPI is currently under development. Users who want to test-drive this solution need to be added to the allowlist before creating or forking QueryAPI indexers."}),(0,s.jsxs)(n.p,{children:["You can request access through ",(0,s.jsx)(n.a,{href:"http://bit.ly/near-queryapi-beta",children:"this link"}),"."]})]}),"\n",(0,s.jsx)(n.h2,{id:"\uac1c\uc694",children:"\uac1c\uc694"}),"\n",(0,s.jsxs)(n.p,{children:["\uc774 \uc778\ub371\uc11c\ub294 \uc0ac\uc6a9\uc790\uac00 GraphQL \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0\uc11c \uc0dd\uc131\ud55c \uc0ac\uc804 \uc815\uc758\ub41c ",(0,s.jsx)(n.code,{children:"posts"})," \ud14c\uc774\ube14\uc5d0 \ube14\ub85d\uccb4\uc778\uc5d0\uc11c \ubc1c\uacac\ub41c \ubaa8\ub4e0 \uc0c8 \uac8c\uc2dc\ubb3c\uc5d0 \ub300\ud574 \uc0c8 \ud589\uc744 \ub9cc\ub4ed\ub2c8\ub2e4. \uc774\ub294 \ud14c\uc774\ube14\uc744 \uc9c0\uc815\ud558\uace0, \ud2b9\uc815 \ud2b8\ub79c\uc7ad\uc158 \uc720\ud615\uc5d0 \ub300\ud55c \ube14\ub85d\uccb4\uc778 \ud2b8\ub79c\uc7ad\uc158 \ub370\uc774\ud130\ub97c \ud544\ud130\ub9c1\ud558\uba70, \ub370\uc774\ud130\ub97c \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \uc800\uc7a5\ud558\ub294 \ubc29\ubc95\uc744 \ubcf4\uc5ec\uc8fc\ub294 \uac04\ub2e8\ud55c \uc608\uc785\ub2c8\ub2e4."]}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["This indexer can be found by ",(0,s.jsx)(n.a,{href:"https://near.org/dataplatform.near/widget/QueryApi.App?selectedIndexerPath=bucanero.near/posts-example",children:"following this link"}),"."]})}),"\n",(0,s.jsx)(n.h2,{id:"\ub370\uc774\ud130\ubca0\uc774\uc2a4-\uc2a4\ud0a4\ub9c8-\uc815\uc758",children:"\ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc2a4\ud0a4\ub9c8 \uc815\uc758"}),"\n",(0,s.jsxs)(n.p,{children:["\uc778\ub371\uc11c\ub97c \ub9cc\ub4dc\ub294 \uccab \ubc88\uc9f8 \ub2e8\uacc4\ub294 \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc2a4\ud0a4\ub9c8\ub97c \uc815\uc758\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc774 \uc791\uc5c5\uc740 \ucf54\ub4dc \uc5d0\ub514\ud130\uc5d0\uc11c ",(0,s.jsx)(n.code,{children:"schema.sql"})," \ud30c\uc77c\uc744 \ud3b8\uc9d1\ud558\uc5ec \uc218\ud589\ud569\ub2c8\ub2e4. \uc774 \uc778\ub371\uc11c\uc758 \uc2a4\ud0a4\ub9c8\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:'CREATE TABLE\n  "posts" (\n    "id" SERIAL NOT NULL,\n    "account_id" VARCHAR NOT NULL,\n    "block_height" DECIMAL(58, 0) NOT NULL,\n    "receipt_id" VARCHAR NOT NULL,\n    "content" TEXT NOT NULL,\n    "block_timestamp" DECIMAL(20, 0) NOT NULL,\n    CONSTRAINT "posts_pkey" PRIMARY KEY ("id")\n  );\n'})}),"\n",(0,s.jsxs)(n.p,{children:["\uc774 \uc2a4\ud0a4\ub9c8\ub294 \uc5f4\uc774 \uc788\ub294 ",(0,s.jsx)(n.code,{children:"posts"}),"\ub77c\ub294 \ud14c\uc774\ube14\uc744 \uc815\uc758\ud569\ub2c8\ub2e4:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"id"}),": a unique identifier for each row in the table"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"account_id"}),": the account ID of the user who created the post"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"block_height"}),": the height of the block in which the post was created"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"receipt_id"}),": the receipt ID of the transaction that created the post"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"content"}),": the content of the post"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"block_timestamp"}),": the timestamp of the block in which the post was created"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"\uc778\ub371\uc2f1-\ub85c\uc9c1-\uc815\uc758",children:"\uc778\ub371\uc2f1 \ub85c\uc9c1 \uc815\uc758"}),"\n",(0,s.jsxs)(n.p,{children:["\ub2e4\uc74c\uc740 \uc778\ub371\uc2f1 \ub85c\uc9c1\uc744 \uc815\uc758\ud560 \ucc28\ub840\uc785\ub2c8\ub2e4. \uc774 \uc791\uc5c5\uc740 \ucf54\ub4dc \uc5d0\ub514\ud130\uc5d0\uc11c ",(0,s.jsx)(n.code,{children:"indexingLogic.js"})," \ud30c\uc77c\uc744 \ud3b8\uc9d1\ud558\uc5ec \uc218\ud589\ud569\ub2c8\ub2e4. \uc774 \uc778\ub371\uc11c\uc758 \ub85c\uc9c1\uc740 \ub450 \ubd80\ubd84\uc73c\ub85c \ub098\ub20c \uc218 \uc788\uc2b5\ub2c8\ub2e4:"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"\ud2b9\uc815 \ud2b8\ub79c\uc7ad\uc158 \uc720\ud615\uc5d0 \ub300\ud55c \ube14\ub85d\uccb4\uc778 \ud2b8\ub79c\uc7ad\uc158 \ud544\ud130\ub9c1"}),"\n",(0,s.jsx)(n.li,{children:"\ud544\ud130\ub9c1\ub41c \ud2b8\ub79c\uc7ad\uc158\uc758 \ub370\uc774\ud130\ub97c \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \uc800\uc7a5"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"\ube14\ub85d\uccb4\uc778-\ud2b8\ub79c\uc7ad\uc158-\ud544\ud130\ub9c1",children:"\ube14\ub85d\uccb4\uc778 \ud2b8\ub79c\uc7ad\uc158 \ud544\ud130\ub9c1"}),"\n",(0,s.jsxs)(n.p,{children:["\ub85c\uc9c1\uc758 \uccab \ubc88\uc9f8 \ubd80\ubd84\uc740 \ud2b9\uc815 \uc720\ud615\uc758 \ud2b8\ub79c\uc7ad\uc158\uc5d0 \ub300\ud55c \ube14\ub85d\uccb4\uc778 \ud2b8\ub79c\uc7ad\uc158\uc744 \ud544\ud130\ub9c1\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc774 \uc791\uc5c5\uc740 ",(0,s.jsx)(n.code,{children:"getBlock"})," \ud568\uc218\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc218\ud589\ub429\ub2c8\ub2e4. \uc774 \ud568\uc218\ub294 \ube14\ub85d\uacfc \ucee8\ud14d\uc2a4\ud2b8\ub97c \uc0ac\uc6a9\ud558\uc5ec Promise\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. \ube14\ub85d\uc740 Near \ud504\ub85c\ud1a0\ucf5c \ube14\ub85d\uc774\uace0, \ucee8\ud14d\uc2a4\ud2b8\ub294 \uc0c1\ud0dc\ub97c \uac80\uc0c9\ud558\uace0 \ucee4\ubc0b\ud558\ub294 \ud5ec\ud37c \uba54\uc11c\ub4dc \uc9d1\ud569\uc785\ub2c8\ub2e4. ",(0,s.jsx)(n.code,{children:"getBlock"})," \ud568\uc218\ub294 \ube14\ub85d\uccb4\uc778\uc758 \ubaa8\ub4e0 \ube14\ub85d\uc5d0 \ub300\ud574 \ud638\ucd9c\ub429\ub2c8\ub2e4."]}),"\n",(0,s.jsxs)(n.p,{children:["\uc774 \uc778\ub371\uc11c\uc758 ",(0,s.jsx)(n.code,{children:"getBlock"})," \ud568\uc218\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'import { Block } from "@near-lake/primitives";\n\nasync function getBlock(block: Block, context) {\n  function base64decode(encodedValue) {\n    let buff = Buffer.from(encodedValue, "base64");\n    return JSON.parse(buff.toString("utf-8"));\n  }\n\n  const SOCIAL_DB = "social.near";\n\n  const nearSocialPosts = block\n    .actions()\n    .filter((action) => action.receiverId === SOCIAL_DB)\n    .flatMap((action) =>\n      action.operations\n        .map((operation) => operation["FunctionCall"])\n        .filter((operation) => operation?.method_name === "set")\n        .map((functionCallOperation) => ({\n          ...functionCallOperation,\n          args: base64decode(functionCallOperation.args),\n          receiptId: action.receiptId,\n        }))\n        .filter((functionCall) => {\n          const accountId = Object.keys(functionCall.args.data)[0];\n          return (\n            Object.keys(functionCall.args.data[accountId]).includes("post") ||\n            Object.keys(functionCall.args.data[accountId]).includes("index")\n          );\n        })\n    );\n\n  ... // Further logic for saving nearSocialPosts to the database\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["\uc774 \ud568\uc218\ub294 \uba3c\uc800 base64 \uc778\ucf54\ub529 \ub370\uc774\ud130\ub97c \ub514\ucf54\ub529\ud558\ub294 ",(0,s.jsx)(n.code,{children:"base64decode"}),"\ub77c\ub294 \ud5ec\ud37c \ud568\uc218\ub97c \uc815\uc758\ud569\ub2c8\ub2e4. It then defines a constant called ",(0,s.jsx)(n.code,{children:"SOCIAL_DB"})," that is the name of the smart contract that stores the posts in NEAR. \uadf8\ub7f0 \ub2e4\uc74c \ud2b9\uc815 \uc720\ud615\uc758 \ud2b8\ub79c\uc7ad\uc158\uc5d0 \ub300\ud55c \ube14\ub85d\uccb4\uc778 \ud2b8\ub79c\uc7ad\uc158\uc744 \ud544\ud130\ub9c1\ud569\ub2c8\ub2e4. \uc774\uac83\uc740 \ub2e4\uc74c\uacfc \uac19\uc774 \uc218\ud589\ub429\ub2c8\ub2e4:"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"receiverId"}),"\uac00 ",(0,s.jsx)(n.code,{children:"SOCIAL_DB"})," \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc778 \ud2b8\ub79c\uc7ad\uc158\uc5d0 \ub300\ud55c \ube14\ub85d\uccb4\uc778 \ud2b8\ub79c\uc7ad\uc158 \ud544\ud130\ub9c1"]}),"\n",(0,s.jsxs)(n.li,{children:["\ud544\ud130\ub9c1\ub41c \ud2b8\ub79c\uc7ad\uc158\uc758 \uc791\uc5c5\uc744 ",(0,s.jsx)(n.code,{children:"FunctionCall"})," \uc791\uc5c5\uc5d0 \ub9f5\ud551"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"FunctionCall"})," \uc791\uc5c5\uc744 ",(0,s.jsx)(n.code,{children:"method_name"}),"\uc774 ",(0,s.jsx)(n.code,{children:"set"}),"\uc778 \uc791\uc5c5\uc5d0 \ub300\ud574 \ud544\ud130\ub9c1"]}),"\n",(0,s.jsxs)(n.li,{children:["\ud544\ud130\ub9c1\ub41c ",(0,s.jsx)(n.code,{children:"FunctionCall"})," \uc791\uc5c5\uc744 ",(0,s.jsx)(n.code,{children:"FunctionCall"})," \uc791\uc5c5, ",(0,s.jsx)(n.code,{children:"FunctionCall"})," \uc791\uc5c5\uc758 \ub514\ucf54\ub529\ub41c ",(0,s.jsx)(n.code,{children:"args"}),", \ud2b8\ub79c\uc7ad\uc158\uc758 ",(0,s.jsx)(n.code,{children:"receiptId"}),"\ub97c \ud3ec\ud568\ud558\ub294 \uac1d\uccb4\uc640 \ub9f5\ud551"]}),"\n",(0,s.jsxs)(n.li,{children:["\ub9f5\ud551\ub41c \uac1d\uccb4\ub97c ",(0,s.jsx)(n.code,{children:"args"}),"\uac00 ",(0,s.jsx)(n.code,{children:"post"})," \ub610\ub294 ",(0,s.jsx)(n.code,{children:"index"})," \ud0a4\ub97c \ud3ec\ud568\ud558\ub294 \uac1d\uccb4\uc5d0 \ub300\ud574 \ud544\ud130\ub9c1"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["\uc774 \ud568\uc218\ub294 ",(0,s.jsx)(n.code,{children:"FunctionCall"})," \uc791\uc5c5, ",(0,s.jsx)(n.code,{children:"FunctionCall"})," \uc791\uc5c5\uc758 \ub514\ucf54\ub529\ub41c ",(0,s.jsx)(n.code,{children:"args"}),", \ud2b8\ub79c\uc7ad\uc158\uc758 ",(0,s.jsx)(n.code,{children:"receiptId"}),"\ub97c \ud3ec\ud568\ud558\ub294 \uac1d\uccb4\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. \uc774 \ubc30\uc5f4\uc740 ",(0,s.jsx)(n.code,{children:"nearSocialPosts"}),"\ub77c\uace0 \ubd88\ub9bd\ub2c8\ub2e4."]}),"\n",(0,s.jsx)(n.h3,{id:"\ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0-\ub370\uc774\ud130-\uc800\uc7a5",children:"\ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \ub370\uc774\ud130 \uc800\uc7a5"}),"\n",(0,s.jsxs)(n.p,{children:["\ub85c\uc9c1\uc758 \ub450 \ubc88\uc9f8 \ubd80\ubd84\uc740 \ud544\ud130\ub9c1\ub41c \ud2b8\ub79c\uc7ad\uc158\uc758 \ub370\uc774\ud130\ub97c \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \uc800\uc7a5\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. This is done by using the ",(0,s.jsx)(n.a,{href:"/ko/bos/queryapi/context-object#insert",children:(0,s.jsx)(n.code,{children:"context.db.Posts.insert()"})})," function. The ",(0,s.jsx)(n.code,{children:"context.db.Posts.insert()"})," function will be called for every filtered transaction as defined by the ",(0,s.jsx)(n.code,{children:".map()"})," function called on the array of ",(0,s.jsx)(n.code,{children:"nearSocialPosts"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"The function for this indexer looks like this:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'  ... // Logic for filtering blockchain transactions, defining nearSocialPosts\n\n  if (nearSocialPosts.length > 0) {\n    const blockHeight = block.blockHeight;\n    const blockTimestamp = Number(block.header().timestampNanosec);\n    await Promise.all(\n      nearSocialPosts.map(async (postAction) => {\n        const accountId = Object.keys(postAction.args.data)[0];\n        console.log(`ACCOUNT_ID: ${accountId}`);\n\n        // create a post if indeed a post\n        if (\n          postAction.args.data[accountId].post &&\n          Object.keys(postAction.args.data[accountId].post).includes("main")\n        ) {\n          try {\n            console.log("Creating a post...");\n            const postData = {\n                account_id: accountId,\n                block_height: blockHeight,\n                block_timestamp: blockTimestamp,\n                receipt_id: postAction.receiptId,\n                content: postAction.args.data[accountId].post.main,\n            };\n            await context.db.Posts.insert(postData);\n            console.log(`Post by ${accountId} has been added to the database`);\n          } catch (e) {\n            console.error(`Error creating a post by ${accountId}: ${e}`);\n          }\n        }\n      })\n    );\n  }\n'})}),"\n",(0,s.jsx)(n.h2,{id:"querying-data-from-the-indexer",children:"Querying data from the indexer"}),"\n",(0,s.jsx)(n.p,{children:"The final step is querying the indexer using the public GraphQL API. This can be done by writing a GraphQL query using the GraphiQL tab in the code editor."}),"\n",(0,s.jsxs)(n.p,{children:["For example, here's a query that fetches ",(0,s.jsx)(n.code,{children:"posts"})," from the ",(0,s.jsx)(n.em,{children:"Posts Indexer"}),", ordered by ",(0,s.jsx)(n.code,{children:"block_height"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-graphql",children:"query MyQuery {\n  <user-name>_near_posts_indexer_posts(order_by: {block_height: desc}) {\n    content\n    block_height\n    account_id\n  }\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Once you have defined your query, you can use the GraphiQL Code Exporter to auto-generate a JavaScript or NEAR Widget code snippet. The exporter will create a helper method ",(0,s.jsx)(n.code,{children:"fetchGraphQL"})," which will allow you to fetch data from the indexer's GraphQL API. It takes three parameters:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"operationsDoc"}),": A string containing the queries you would like to execute."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"operationName"}),": The specific query you want to run."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"variables"}),": Any variables to pass in that your query supports, such as ",(0,s.jsx)(n.code,{children:"offset"})," and ",(0,s.jsx)(n.code,{children:"limit"})," for pagination."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Next, you can call the ",(0,s.jsx)(n.code,{children:"fetchGraphQL"})," function with the appropriate parameters and process the results."]}),"\n",(0,s.jsxs)(n.p,{children:["Here's the complete code snippet for a NEAR component using the ",(0,s.jsx)(n.em,{children:"Posts Indexer"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'const QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql/`;\n\nState.init({\ndata: []\n});\n\nconst query = `query MyPostsQuery {\n    <user-name>_near_posts_indexer_posts(order_by: {block_height: desc}) {\n      content\n      block_height\n      account_id\n    }\n  }`\n\nfunction fetchGraphQL(operationsDoc, operationName, variables) {\n      return asyncFetch(\n        QUERYAPI_ENDPOINT,\n        {\n          method: "POST",\n          headers: { "x-hasura-role": `<user-name>_near` },\n          body: JSON.stringify({\n            query: operationsDoc,\n            variables: variables,\n            operationName: operationName,\n          }),\n        }\n      );\n    }\n\nfetchGraphQL(query, "MyPostsQuery", {}).then((result) => {\n  if (result.status === 200) {\n    if (result.body.data) {\n      const data = result.body.data.<user-name>_near_posts_indexer_posts;\n      State.update({ data })\n      console.log(data);\n    }\n  }\n});\n\nconst renderData = (a) => {\n  return (\n    <div key={JSON.stringify(a)}>\n        {JSON.stringify(a)}\n    </div>\n  );\n};\n\nconst renderedData = state.data.map(renderData);\nreturn (\n  {renderedData}\n);\n'})}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["To view a more complex example, see this widget which fetches posts with proper pagination: ",(0,s.jsx)(n.a,{href:"https://near.org/edit/roshaan.near/widget/query-api-feed-infinite",children:"Posts Widget powered By QueryAPI"}),"."]})})]})}function h(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>c,a:()=>r});var s=t(67294);const o={},i=s.createContext(o);function r(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);