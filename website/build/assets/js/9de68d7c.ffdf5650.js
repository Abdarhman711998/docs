"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2799],{64136:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=t(85893),a=t(11151),o=t(77229);const i={id:"enumeration",title:"Enumeration",sidebar_label:"Enumeration"},s=void 0,l={id:"tutorials/nfts/enumeration",title:"Enumeration",description:"In the previous tutorials, you looked at ways to integrate the minting functionality into a skeleton smart contract. In order to get your NFTs to show in the wallet, you also had to deploy a patch fix that implemented one of the enumeration methods. In this tutorial, you'll expand on and finish the rest of the enumeration methods as per the standard",source:"@site/../docs/3.tutorials/nfts/3-enumeration.md",sourceDirName:"3.tutorials/nfts",slug:"/tutorials/nfts/enumeration",permalink:"/tutorials/nfts/enumeration",draft:!1,unlisted:!1,editUrl:"https://github.com/near/docs/edit/master/website/../docs/3.tutorials/nfts/3-enumeration.md",tags:[],version:"current",lastUpdatedBy:"Guille",lastUpdatedAt:1714487707e3,sidebarPosition:3,frontMatter:{id:"enumeration",title:"Enumeration",sidebar_label:"Enumeration"},sidebar:"tutorials",previous:{title:"Upgrade a Contract",permalink:"/tutorials/nfts/upgrade-contract"},next:{title:"Transfers",permalink:"/tutorials/nfts/core"}},u={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Modifications to the contract",id:"modifications-to-the-contract",level:2},{value:"Redeploying the contract",id:"redeploying-contract",level:2},{value:"Enumerating tokens",id:"enumerating-tokens",level:2},{value:"NFT tokens",id:"nft-tokens",level:3},{value:"Tokens by owner",id:"tokens-by-owner",level:3},{value:"Conclusion",id:"conclusion",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.a)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["In the previous tutorials, you looked at ways to integrate the minting functionality into a skeleton smart contract. In order to get your NFTs to show in the wallet, you also had to deploy a patch fix that implemented one of the enumeration methods. In this tutorial, you'll expand on and finish the rest of the enumeration methods as per the ",(0,r.jsx)(n.a,{href:"https://nomicon.io/Standards/Tokens/NonFungibleToken/Enumeration",children:"standard"})]}),"\n",(0,r.jsx)(n.p,{children:"Now you'll extend the NFT smart contract and add a couple of enumeration methods that can be used to return the contract's state."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,r.jsxs)(n.p,{children:["As mentioned in the ",(0,r.jsx)(n.a,{href:"/tutorials/nfts/upgrade-contract/",children:"Upgrade a Contract"})," tutorial, you can deploy patches and fixes to smart contracts. This time, you'll use that knowledge to implement the ",(0,r.jsx)(n.code,{children:"nft_total_supply"}),", ",(0,r.jsx)(n.code,{children:"nft_tokens"})," and ",(0,r.jsx)(n.code,{children:"nft_supply_for_owner"})," enumeration functions."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"modifications-to-the-contract",children:"Modifications to the contract"}),"\n",(0,r.jsxs)(n.p,{children:["Let's start by opening the  ",(0,r.jsx)(n.code,{children:"src/enumeration.rs"})," file and locating the empty ",(0,r.jsx)(n.code,{children:"nft_total_supply"})," function."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"nft_total_supply"})}),"\n",(0,r.jsxs)(n.p,{children:["This function should return the total number of NFTs stored on the contract. You can easily achieve this functionality by simply returning the length of the ",(0,r.jsx)(n.code,{children:"nft_metadata_by_id"})," data structure."]}),"\n",(0,r.jsx)(o.Ey,{language:"rust",start:"5",end:"9",url:"https://github.com/near-examples/nft-tutorial/blob/main/nft-contract-basic/src/enumeration.rs"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"nft_token"})}),"\n",(0,r.jsxs)(n.p,{children:["This function should return a paginated list of ",(0,r.jsx)(n.code,{children:"JsonTokens"})," that are stored on the contract regardless of their owners.\nIf the user provides a ",(0,r.jsx)(n.code,{children:"from_index"})," parameter, you should use that as the starting point for which to start iterating through tokens; otherwise it should start from the beginning. Likewise, if the user provides a ",(0,r.jsx)(n.code,{children:"limit"})," parameter, the function shall stop after reaching either the limit or the end of the list."]}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsxs)(n.p,{children:["Rust has useful methods for pagination, allowing you to skip to a starting index and taking the first ",(0,r.jsx)(n.code,{children:"n"})," elements of an iterator."]})}),"\n",(0,r.jsx)(o.Ey,{language:"rust",start:"11",end:"26",url:"https://github.com/near-examples/nft-tutorial/blob/main/nft-contract-basic/src/enumeration.rs"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"nft_supply_for_owner"})}),"\n",(0,r.jsxs)(n.p,{children:["This function should look for all the non-fungible tokens for a user-defined owner, and return the length of the resulting set.\nIf there isn't a set of tokens for the provided ",(0,r.jsx)(n.code,{children:"AccountID"}),", then the function shall return ",(0,r.jsx)(n.code,{children:"0"}),"."]}),"\n",(0,r.jsx)(o.Ey,{language:"rust",start:"28",end:"43",url:"https://github.com/near-examples/nft-tutorial/blob/main/nft-contract-basic/src/enumeration.rs"}),"\n",(0,r.jsx)(n.p,{children:"Next, you can use the CLI to query these new methods and validate that they work correctly."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"redeploying-contract",children:"Redeploying the contract"}),"\n",(0,r.jsxs)(n.p,{children:["Now that you've implemented the necessary logic for ",(0,r.jsx)(n.code,{children:"nft_tokens_for_owner"}),", it's time to build and re-deploy the contract to your account. Using the cargo-near, deploy the contract as you did in the previous tutorials:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"cargo near deploy $NFT_CONTRACT_ID without-init-call network-config testnet sign-with-keychain send\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"enumerating-tokens",children:"Enumerating tokens"}),"\n",(0,r.jsx)(n.p,{children:"Once the updated contract has been redeployed, you can test and see if these new functions work as expected."}),"\n",(0,r.jsx)(n.h3,{id:"nft-tokens",children:"NFT tokens"}),"\n",(0,r.jsx)(n.p,{children:"Let's query for a list of non-fungible tokens on the contract. Use the following command to query for the information of up to 50 NFTs starting from the 10th item:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'near view $NFT_CONTRACT_ID nft_tokens \'{"from_index": "10", "limit": 50}\'\n'})}),"\n",(0,r.jsx)(n.p,{children:"This command should return an output similar to the following:"}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)("summary",{children:"Example response: "}),(0,r.jsx)("p",{children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:"[]\n"})})})]}),"\n",(0,r.jsx)("hr",{class:"subsection"}),"\n",(0,r.jsx)(n.h3,{id:"tokens-by-owner",children:"Tokens by owner"}),"\n",(0,r.jsxs)(n.p,{children:["To get the total supply of NFTs owned by the ",(0,r.jsx)(n.code,{children:"goteam.testnet"})," account, call the ",(0,r.jsx)(n.code,{children:"nft_supply_for_owner"})," function and set the ",(0,r.jsx)(n.code,{children:"account_id"})," parameter:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'near view $NFT_CONTRACT_ID nft_supply_for_owner \'{"account_id": "goteam.testnet"}\'\n'})}),"\n",(0,r.jsx)(n.p,{children:"This should return an output similar to the following:"}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)("summary",{children:"Example response: "}),(0,r.jsx)("p",{children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:"0\n"})})})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,r.jsxs)(n.p,{children:["In this tutorial, you have added two ",(0,r.jsx)(n.a,{href:"/tutorials/nfts/enumeration#modifications-to-the-contract",children:"new enumeration functions"}),", and now you have a basic NFT smart contract with minting and enumeration methods in place. After implementing these modifications, you redeployed the smart contract and tested the functions using the CLI."]}),"\n",(0,r.jsxs)(n.p,{children:["In the ",(0,r.jsx)(n.a,{href:"/tutorials/nfts/core",children:"next tutorial"}),", you'll implement the core functions needed to allow users to transfer the minted tokens."]}),"\n",(0,r.jsxs)(n.admonition,{title:"Versioning for this article",type:"note",children:[(0,r.jsx)(n.p,{children:"At the time of this writing, this example works with the following versions:"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["near-cli: ",(0,r.jsx)(n.code,{children:"4.0.13"})]}),"\n",(0,r.jsxs)(n.li,{children:["cargo-near ",(0,r.jsx)(n.code,{children:"0.6.1"})]}),"\n",(0,r.jsxs)(n.li,{children:["NFT standard: ",(0,r.jsx)(n.a,{href:"https://nomicon.io/Standards/Tokens/NonFungibleToken/Core",children:"NEP171"}),", version ",(0,r.jsx)(n.code,{children:"1.1.0"})]}),"\n",(0,r.jsxs)(n.li,{children:["Enumeration standard: ",(0,r.jsx)(n.a,{href:"https://nomicon.io/Standards/Tokens/NonFungibleToken/Enumeration",children:"NEP181"}),", version ",(0,r.jsx)(n.code,{children:"1.0.0"})]}),"\n"]})]})]})}function h(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},85162:(e,n,t)=>{t.d(n,{Z:()=>i});t(67294);var r=t(36905);const a={tabItem:"tabItem_Ymn6"};var o=t(85893);function i(e){var n=e.children,t=e.hidden,i=e.className;return(0,o.jsx)("div",{role:"tabpanel",className:(0,r.Z)(a.tabItem,i),hidden:t,children:n})}},74866:(e,n,t)=>{t.d(n,{Z:()=>w});var r=t(67294),a=t(36905),o=t(12466),i=t(16550),s=t(20469),l=t(91980),u=t(67392),c=t(50012);function d(e){var n,t;return null!=(n=null==(t=r.Children.toArray(e).filter((function(e){return"\n"!==e})).map((function(e){if(!e||(0,r.isValidElement)(e)&&((n=e.props)&&"object"==typeof n&&"value"in n))return e;var n;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:t.filter(Boolean))?n:[]}function h(e){var n=e.values,t=e.children;return(0,r.useMemo)((function(){var e=null!=n?n:function(e){return d(e).map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes,default:n.default}}))}(t);return function(e){var n=(0,u.l)(e,(function(e,n){return e.value===n.value}));if(n.length>0)throw new Error('Docusaurus error: Duplicate values "'+n.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[n,t])}function f(e){var n=e.value;return e.tabValues.some((function(e){return e.value===n}))}function p(e){var n=e.queryString,t=void 0!==n&&n,a=e.groupId,o=(0,i.k6)(),s=function(e){var n=e.queryString,t=void 0!==n&&n,r=e.groupId;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=r?r:null}({queryString:t,groupId:a});return[(0,l._X)(s),(0,r.useCallback)((function(e){if(s){var n=new URLSearchParams(o.location.search);n.set(s,e),o.replace(Object.assign({},o.location,{search:n.toString()}))}}),[s,o])]}function m(e){var n,t,a,o,i=e.defaultValue,l=e.queryString,u=void 0!==l&&l,d=e.groupId,m=h(e),g=(0,r.useState)((function(){return function(e){var n,t=e.defaultValue,r=e.tabValues;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!f({value:t,tabValues:r}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+t+'" but none of its children has the corresponding value. Available values are: '+r.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return t}var a=null!=(n=r.find((function(e){return e.default})))?n:r[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:i,tabValues:m})})),x=g[0],b=g[1],j=p({queryString:u,groupId:d}),v=j[0],y=j[1],w=(n=function(e){return e?"docusaurus.tab."+e:null}({groupId:d}.groupId),t=(0,c.Nk)(n),a=t[0],o=t[1],[a,(0,r.useCallback)((function(e){n&&o.set(e)}),[n,o])]),k=w[0],T=w[1],_=function(){var e=null!=v?v:k;return f({value:e,tabValues:m})?e:null}();return(0,s.Z)((function(){_&&b(_)}),[_]),{selectedValue:x,selectValue:(0,r.useCallback)((function(e){if(!f({value:e,tabValues:m}))throw new Error("Can't select invalid tab value="+e);b(e),y(e),T(e)}),[y,T,m]),tabValues:m}}var g=t(72389);const x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=t(85893);function j(e){var n=e.className,t=e.block,r=e.selectedValue,i=e.selectValue,s=e.tabValues,l=[],u=(0,o.o5)().blockElementScrollPositionUntilNextRender,c=function(e){var n=e.currentTarget,t=l.indexOf(n),a=s[t].value;a!==r&&(u(n),i(a))},d=function(e){var n,t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":var r,a=l.indexOf(e.currentTarget)+1;t=null!=(r=l[a])?r:l[0];break;case"ArrowLeft":var o,i=l.indexOf(e.currentTarget)-1;t=null!=(o=l[i])?o:l[l.length-1]}null==(n=t)||n.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":t},n),children:s.map((function(e){var n=e.value,t=e.label,o=e.attributes;return(0,b.jsx)("li",Object.assign({role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:function(e){return l.push(e)},onKeyDown:d,onClick:c},o,{className:(0,a.Z)("tabs__item",x.tabItem,null==o?void 0:o.className,{"tabs__item--active":r===n}),children:null!=t?t:n}),n)}))})}function v(e){var n=e.lazy,t=e.children,a=e.selectedValue,o=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){var i=o.find((function(e){return e.props.value===a}));return i?(0,r.cloneElement)(i,{className:"margin-top--md"}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:o.map((function(e,n){return(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==a})}))})}function y(e){var n=m(e);return(0,b.jsxs)("div",{className:(0,a.Z)("tabs-container",x.tabList),children:[(0,b.jsx)(j,Object.assign({},e,n)),(0,b.jsx)(v,Object.assign({},e,n))]})}function w(e){var n=(0,g.Z)();return(0,b.jsx)(y,Object.assign({},e,{children:d(e.children)}),String(n))}},77229:(e,n,t)=>{t.d(n,{Ey:()=>c,O2:()=>l,SQ:()=>u});t(67294);var r=t(74866),a=t(85162),o=t(95665),i=t.n(o),s=t(85893);function l(e){var n=e.children;return Array.isArray(n)||(n=[n]),(0,s.jsx)(r.Z,{className:"language-tabs",groupId:"code-tabs",children:n.map((function(e,n){return(0,s.jsx)(a.Z,{value:e.props.value,label:e.props.value,children:e})}))})}function u(e){var n=e.children,t=e.language;return Array.isArray(n)||(n=[n]),n=n.map((function(e){return function(e,n){var t=e.props,r=(t.children,t.url),a=t.start,o=t.end,i=t.fname;if(e.type===c)return c({url:r,start:a,end:o,language:n,fname:i});return e}(e,t)})),1==n.length?(0,s.jsx)(a.Z,{value:0,label:n[0].props.fname,children:n[0]}):(0,s.jsx)(r.Z,{className:"file-tabs",children:n.map((function(e,n){return(0,s.jsx)(a.Z,{value:n,label:e.props.fname,children:e})}))})}function c(e){var n=e.url,t=e.start,r=e.end,a=e.language,o=e.fname,l=n+"#";return t&&r&&(l+="L"+t+"-L"+r+"#"),(0,s.jsx)(i(),{language:a,fname:o,children:l})}}}]);