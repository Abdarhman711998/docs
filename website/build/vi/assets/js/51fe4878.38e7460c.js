"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[822],{80728:(e,c,n)=>{n.r(c),n.d(c,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>d});var s=n(85893),t=n(11151);const i={id:"account-id",title:"Address (Account ID)"},o=void 0,r={id:"concepts/basics/accounts/account-id",title:"Address (Account ID)",description:"Every NEAR account is identified by a specific address. Based on their name, two types of accounts can be distinguished:",source:"@site/i18n/vi/docusaurus-plugin-content-docs/current/1.concepts/basics/accounts/account-id.md",sourceDirName:"1.concepts/basics/accounts",slug:"/concepts/basics/accounts/account-id",permalink:"/vi/concepts/basics/accounts/account-id",draft:!1,unlisted:!1,editUrl:"https://github.com/near/docs/edit/master/website/../docs/1.concepts/basics/accounts/account-id.md",tags:[],version:"current",frontMatter:{id:"account-id",title:"Address (Account ID)"},sidebar:"concepts",previous:{title:"Account Model",permalink:"/vi/concepts/basics/accounts/model"},next:{title:"C\xe1c RPC Endpoint",permalink:"/vi/concepts/basics/accounts/access-keys"}},a={},d=[{value:"C\xe1c Implicit Account",id:"implicit-accounts",level:2},{value:"Named Accounts",id:"named-accounts",level:2}];function l(e){const c={a:"a",admonition:"admonition",code:"code",h2:"h2",hr:"hr",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(c.p,{children:"Every NEAR account is identified by a specific address. Based on their name, two types of accounts can be distinguished:"}),"\n",(0,s.jsxs)(c.ol,{children:["\n",(0,s.jsxs)(c.li,{children:[(0,s.jsx)(c.strong,{children:"Named accounts"}),", with human readable names such as ",(0,s.jsx)(c.code,{children:"alice.near"}),"."]}),"\n",(0,s.jsxs)(c.li,{children:[(0,s.jsx)(c.strong,{children:"Implicit accounts"}),", referred by 64 chars (e.g. ",(0,s.jsx)(c.code,{children:"98793cd91a3f870fb126f662858[...]"}),")."]}),"\n"]}),"\n",(0,s.jsxs)(c.admonition,{type:"tip",children:[(0,s.jsxs)(c.mdxAdmonitionTitle,{children:["For an account name to be valid, it must adhere to the ",(0,s.jsx)(c.a,{href:"https://nomicon.io/DataStructures/Account#account-id-rules",children:"specification's account ID rules"}),". :::"]}),(0,s.jsx)(c.hr,{}),(0,s.jsx)(c.h2,{id:"implicit-accounts",children:"C\xe1c Implicit Account"}),(0,s.jsx)(c.p,{children:"Implicit accounts are similar to the classic Bitcoin/Ethereum accounts. They are defined by a 64 character address, which corresponds to a unique ED25519 key-pair."}),(0,s.jsx)(c.p,{children:"V\xed d\u1ee5:"}),(0,s.jsxs)(c.ul,{children:["\n",(0,s.jsxs)(c.li,{children:["The public key in base58: ",(0,s.jsx)(c.code,{children:"BGCCDDHfysuuVnaNVtEhhqeT4k9Muyem3Kpgq2U1m9HX"})]}),"\n",(0,s.jsxs)(c.li,{children:["Refers to the implicit account: ",(0,s.jsx)(c.code,{children:"98793cd91a3f870fb126f66285808c7e094afcfc4eda8a970f6648cdf0dbd6de"})]}),"\n"]}),(0,s.jsxs)(c.admonition,{type:"tip",children:[(0,s.jsxs)(c.mdxAdmonitionTitle,{children:["Check our section on how to ",(0,s.jsx)(c.a,{href:"/vi/concepts/basics/accounts/creating-accounts#local-implicit-account",children:"create implicit accounts"})," :::"]}),(0,s.jsx)(c.hr,{}),(0,s.jsx)(c.h2,{id:"named-accounts",children:"Named Accounts"}),(0,s.jsxs)(c.p,{children:["In NEAR, users can register ",(0,s.jsx)(c.strong,{children:"named accounts"})," (e.g. ",(0,s.jsx)(c.code,{children:"bob.near"}),") which are simpler to use and remember."]}),(0,s.jsxs)(c.p,{children:["Moreover, named accounts can create ",(0,s.jsx)(c.strong,{children:"sub-accounts"})," of themselves, helping to better organize related-accounts. In this way, named accounts work as domains, particularly:"]}),(0,s.jsxs)(c.ol,{children:["\n",(0,s.jsxs)(c.li,{children:["Only the ",(0,s.jsx)(c.a,{href:"https://nearblocks.io/address/registrar",children:(0,s.jsx)(c.code,{children:"registrar"})})," account can create short top-level accounts (< 32 char)."]}),"\n",(0,s.jsx)(c.li,{children:"Anyone can create long (>= 32 chars) top-level accounts."}),"\n",(0,s.jsxs)(c.li,{children:["An account can only create ",(0,s.jsx)(c.strong,{children:"immediate"})," sub-accounts of itself."]}),"\n"]}),(0,s.jsx)(c.p,{children:"In other words:"}),(0,s.jsxs)(c.ol,{children:["\n",(0,s.jsxs)(c.li,{children:["Only ",(0,s.jsx)(c.a,{href:"https://nearblocks.io/address/registrar",children:(0,s.jsx)(c.code,{children:"registrar"})})," can create short top-level accounts (e.g. ",(0,s.jsx)(c.code,{children:"near"}),", ",(0,s.jsx)(c.code,{children:"aurora"}),")."]}),"\n",(0,s.jsxs)(c.li,{children:["Anyone can create long top-level accounts, e.g. ",(0,s.jsx)(c.code,{children:"verylongaccountnamethatis32chars"}),"."]}),"\n",(0,s.jsxs)(c.li,{children:[(0,s.jsx)(c.code,{children:"near"})," can create ",(0,s.jsx)(c.code,{children:"bob.near"}),", and ",(0,s.jsx)(c.code,{children:"bob.near"})," can create ",(0,s.jsx)(c.code,{children:"app.bob.near"}),"."]}),"\n",(0,s.jsxs)(c.li,{children:[(0,s.jsx)(c.code,{children:"near"})," ",(0,s.jsx)(c.strong,{children:"cannot"})," create ",(0,s.jsx)(c.code,{children:"app.bob.near"}),", and ",(0,s.jsx)(c.code,{children:"test.near"})," ",(0,s.jsx)(c.strong,{children:"cannot"})," create ",(0,s.jsx)(c.code,{children:"sub.example.near"}),"."]}),"\n"]}),(0,s.jsxs)(c.p,{children:["Currently, ",(0,s.jsx)(c.strong,{children:"mainnet"})," accounts are sub-accounts of ",(0,s.jsx)(c.code,{children:".near"})," (",(0,s.jsx)(c.code,{children:"example.near"}),"), and ",(0,s.jsx)(c.strong,{children:"testnet"})," accounts are sub-accounts of ",(0,s.jsx)(c.code,{children:"testnet"})," (",(0,s.jsx)(c.code,{children:"example.testnet"}),")."]}),(0,s.jsxs)(c.admonition,{type:"info",children:[(0,s.jsxs)(c.mdxAdmonitionTitle,{children:["Accounts have ",(0,s.jsx)(c.strong,{children:"no control"})," over sub-accounts, since they do ",(0,s.jsx)(c.strong,{children:"NOT"})," share ",(0,s.jsx)(c.a,{href:"/vi/concepts/basics/accounts/access-keys",children:"access keys"})," :::"]}),(0,s.jsx)(c.admonition,{type:"tip",children:(0,s.jsxs)(c.mdxAdmonitionTitle,{children:["Check our section on how to ",(0,s.jsx)(c.a,{href:"/vi/concepts/basics/accounts/creating-accounts#local-named-account",children:"create named accounts"})," :::"]})})]})]})]})]})}function h(e={}){const{wrapper:c}={...(0,t.a)(),...e.components};return c?(0,s.jsx)(c,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},11151:(e,c,n)=>{n.d(c,{Z:()=>r,a:()=>o});var s=n(67294);const t={},i=s.createContext(t);function o(e){const c=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(c):{...c,...e}}),[c,e])}function r(e){let c;return c=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(i.Provider,{value:c},e.children)}}}]);