"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"concepts":[{"type":"link","label":"Home","href":"/concepts/welcome","docId":"concepts/welcome","unlisted":false},{"type":"link","label":"\u2b50 What is NEAR?","href":"/concepts/basics/protocol","docId":"concepts/basics/protocol","unlisted":false},{"type":"html","value":"<hr/>"},{"type":"html","value":"<span class=\'menu__link\'><b><small> The NEAR Protocol </small></b></span>"},{"type":"category","label":"Accounts","items":[{"type":"link","label":"Account Model","href":"/concepts/basics/accounts/model","docId":"concepts/basics/accounts/model","unlisted":false},{"type":"link","label":"Address (Account ID)","href":"/concepts/basics/accounts/account-id","docId":"concepts/basics/accounts/account-id","unlisted":false},{"type":"link","label":"Access Keys","href":"/concepts/basics/accounts/access-keys","docId":"concepts/basics/accounts/access-keys","unlisted":false},{"type":"link","label":"Smart Contract","href":"/concepts/basics/accounts/smartcontract","docId":"concepts/basics/accounts/smartcontract","unlisted":false},{"type":"link","label":"State","href":"/concepts/basics/accounts/state","docId":"concepts/basics/accounts/state","unlisted":false},{"type":"html","value":"<hr/>"},{"type":"link","label":"Creating Accounts","href":"/concepts/basics/accounts/creating-accounts","docId":"concepts/basics/accounts/creating-accounts","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Transactions","items":[{"type":"link","label":"Overview","href":"/concepts/basics/transactions/overview","docId":"concepts/basics/transactions/overview","unlisted":false},{"type":"category","label":"Gas","items":[{"type":"link","label":"Gas","href":"/concepts/basics/transactions/gas","docId":"concepts/basics/transactions/gas","unlisted":false},{"type":"link","label":"Gas - Advanced","href":"/concepts/basics/transactions/gas-advanced","docId":"concepts/basics/transactions/gas-advanced","unlisted":false}],"collapsed":true,"collapsible":true}],"collapsed":true,"collapsible":true},{"type":"category","label":"Data Flow","items":[{"type":"link","label":"NEAR Data Flow","href":"/concepts/data-flow/near-data-flow","docId":"concepts/data-flow/near-data-flow","unlisted":false},{"type":"link","label":"Token Transfer","href":"/concepts/data-flow/token-transfer-flow","docId":"concepts/data-flow/token-transfer-flow","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Tokens","items":[{"type":"link","label":"Tokens","href":"/concepts/basics/tokens","docId":"concepts/basics/tokens","unlisted":false},{"type":"link","label":"Avoiding Token Loss","href":"/concepts/basics/token-loss","docId":"concepts/basics/token-loss","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Storage","items":[{"type":"link","label":"Storage on NEAR","href":"/concepts/storage/data-storage","docId":"concepts/storage/data-storage","unlisted":false},{"type":"link","label":"Storage Staking","href":"/concepts/storage/storage-staking","docId":"concepts/storage/storage-staking","unlisted":false},{"type":"link","label":"Alternative Solutions","href":"/concepts/storage/storage-solutions","docId":"concepts/storage/storage-solutions","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Network","items":[{"type":"link","label":"Validators","href":"/concepts/basics/validators","docId":"concepts/basics/validators","unlisted":false},{"type":"link","label":"Networks","href":"/concepts/basics/networks","docId":"concepts/basics/networks","unlisted":false},{"type":"link","label":"Epoch","href":"/concepts/basics/epoch","docId":"concepts/basics/epoch","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"html","value":"<hr/>"},{"type":"html","value":"<span class=\'menu__link\'><b><small> Chain Abstraction \u2728</small></b></span>"},{"type":"link","label":"Introduction","href":"/concepts/abstraction/introduction","docId":"concepts/abstraction/introduction","unlisted":false},{"type":"link","label":"Meta Transactions","href":"/concepts/abstraction/meta-transactions","docId":"concepts/abstraction/meta-transactions","unlisted":false},{"type":"link","label":"Relayers","href":"/concepts/abstraction/relayers","docId":"concepts/abstraction/relayers","unlisted":false},{"type":"category","label":"Chain Signatures","items":[{"type":"link","label":"What are Chain Signatures?","href":"/concepts/abstraction/chain-signatures","docId":"concepts/abstraction/chain-signatures","unlisted":false},{"type":"link","label":"Use cases","href":"/concepts/abstraction/signatures/use-cases","docId":"concepts/abstraction/signatures/use-cases","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"html","value":"<hr/>"},{"type":"html","value":"<span class=\'menu__link\'><b><small> Blockchain Data &amp; Indexing </small></b></span>"},{"type":"link","label":"Data on the Blockchain","href":"/concepts/data-flow/data-storage","docId":"concepts/data-flow/data-storage","unlisted":false},{"type":"category","label":"Data Indexing","items":[{"type":"link","label":"Intro to Indexers","href":"/concepts/advanced/indexers","docId":"concepts/advanced/indexers","unlisted":false},{"type":"link","label":"Indexer Framework","href":"/concepts/advanced/near-indexer-framework","docId":"concepts/advanced/near-indexer-framework","unlisted":false},{"type":"link","label":"Lake Framework","href":"/concepts/advanced/near-lake-framework","docId":"concepts/advanced/near-lake-framework","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"html","value":"<hr/>"},{"type":"html","value":"<span class=\'menu__link\'><b><small> Advanced Topics </small></b></span>"},{"type":"link","label":"Runtime","href":"/concepts/basics/runtime","docId":"concepts/basics/runtime","unlisted":false},{"type":"link","label":"Specification","href":"/concepts/advanced/specification","docId":"concepts/advanced/specification","unlisted":false},{"type":"link","label":"Papers","href":"https://near.org/papers"},{"type":"html","value":"<hr/>"},{"type":"html","value":"<span class=\'menu__link\'><b><small> From Web 2 to Web 3 </small></b></span>"},{"type":"link","label":"Introduction","href":"/concepts/web3/intro","docId":"concepts/web3/intro","unlisted":false},{"type":"link","label":"Blockchain basics","href":"/concepts/web3/basics","docId":"concepts/web3/basics","unlisted":false},{"type":"link","label":"NEAR Protocol","href":"/concepts/web3/near","docId":"concepts/web3/near","unlisted":false},{"type":"link","label":"Economics","href":"/concepts/web3/economics","docId":"concepts/web3/economics","unlisted":false},{"type":"link","label":"NFTs for Web 2.0 Apps","href":"/concepts/web3/nfts","docId":"concepts/web3/nfts","unlisted":false}],"build":[{"type":"link","label":"Home","href":"/develop/welcome","docId":"develop/welcome","unlisted":false},{"type":"html","value":"<hr/>"},{"type":"html","value":"<span class=\'menu__link\'><b><small> Chain Abstraction \u2728 </small></b></span>"},{"type":"link","label":"What is Chain Abstraction?","href":"/abstraction/what-is","docId":"abstraction/what-is","unlisted":false},{"type":"category","label":"Chain Abstraction Services","items":[{"type":"link","label":"Building a Relayer","href":"/develop/relayers/build-relayer","docId":"develop/relayers/build-relayer","unlisted":false},{"type":"link","label":"FastAuth (Email Login)","href":"/tools/fastauth-sdk","docId":"tools/fastauth-sdk","unlisted":false},{"type":"link","label":"Chain Signatures","href":"/abstraction/chain-signatures","docId":"abstraction/chain-signatures","unlisted":false},{"type":"link","label":"Wallet Chain Key Rules","href":"/abstraction/chain-signatures/wallet","docId":"abstraction/chain-signatures/wallet","unlisted":false},{"type":"category","label":"Multichain Gas Relayer","items":[{"type":"link","label":"Multichain Relayer Server","href":"/develop/relayers/multichain-server","docId":"develop/relayers/multichain-server","unlisted":false},{"type":"link","label":"Multichain Gas Station","href":"/develop/relayers/gas-station","docId":"develop/relayers/gas-station","unlisted":false}],"collapsed":true,"collapsible":true}],"collapsed":true,"collapsible":true},{"type":"html","value":"<hr/>"},{"type":"html","value":"<span class=\'menu__link\'><b><small> Smart Contracts </small></b></span>"},{"type":"link","label":"What is a Contract?","href":"/develop/contracts/whatisacontract","docId":"develop/contracts/whatisacontract","unlisted":false},{"type":"category","label":"Building Smart Contracts","items":[{"type":"link","label":"Quickstart \u2728","href":"/develop/contracts/quickstart","docId":"develop/contracts/quickstart","unlisted":false},{"type":"category","label":"Anatomy of a Contract","items":[{"type":"link","label":"Modules, Types & Structs","href":"/develop/contracts/basics","docId":"develop/contracts/basics","unlisted":false},{"type":"link","label":"The Contract Class","href":"/develop/contracts/anatomy","docId":"develop/contracts/anatomy","unlisted":false},{"type":"link","label":"Environment","href":"/develop/contracts/environment/","docId":"develop/contracts/environment/environment","unlisted":false},{"type":"link","label":"State & Data Structures","href":"/develop/contracts/storage","docId":"develop/contracts/storage","unlisted":false},{"type":"link","label":"Transfers & Actions","href":"/develop/contracts/actions","docId":"develop/contracts/actions","unlisted":false},{"type":"link","label":"Cross-Contract Calls","href":"/develop/contracts/crosscontract","docId":"develop/contracts/crosscontract","unlisted":false},{"type":"link","label":"\u2705 Checklist","href":"/develop/contracts/security/checklist","docId":"develop/contracts/security/checklist","unlisted":false},{"type":"html","value":"<hr/>"},{"type":"link","label":"Notes on Serialization","href":"/develop/contracts/serialization","docId":"develop/contracts/serialization","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Test the Contract","items":[{"type":"link","label":"Introduction","href":"/develop/testing/introduction","docId":"develop/testing/introduction","unlisted":false},{"type":"link","label":"Unit Testing","href":"/develop/testing/unit-test","docId":"develop/testing/unit-test","unlisted":false},{"type":"link","label":"Integration Tests","href":"/develop/testing/integration-test","docId":"develop/testing/integration-test","unlisted":false},{"type":"html","value":"<hr/>"},{"type":"link","label":"Local Development","href":"/develop/testing/kurtosis-localnet","docId":"develop/testing/kurtosis-localnet","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Deploy, Update & Lock","items":[{"type":"link","label":"Deploying and Using","href":"/develop/deploy","docId":"develop/deploy","unlisted":false},{"type":"link","label":"Updating Contracts","href":"/develop/upgrade","docId":"develop/upgrade","unlisted":false},{"type":"link","label":"Locking Accounts","href":"/develop/lock","docId":"develop/lock","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Security","items":[{"type":"link","label":"\u2705 Checklist","href":"/develop/contracts/security/checklist","docId":"develop/contracts/security/checklist","unlisted":false},{"type":"link","label":"Million Small Deposits","href":"/develop/contracts/security/storage","docId":"develop/contracts/security/storage","unlisted":false},{"type":"link","label":"Cross-Contract Calls","href":"/develop/contracts/security/callbacks","docId":"develop/contracts/security/callbacks","unlisted":false},{"type":"link","label":"Ensure it is the User (1y\u24c3)","href":"/develop/contracts/security/one-yocto","docId":"develop/contracts/security/one-yocto","unlisted":false},{"type":"link","label":"Sybil Attacks","href":"/develop/contracts/security/sybil","docId":"develop/contracts/security/sybil","unlisted":false},{"type":"link","label":"Front Running","href":"/develop/contracts/security/frontrunning","docId":"develop/contracts/security/frontrunning","unlisted":false},{"type":"link","label":"Reentrancy Attacks","href":"/develop/contracts/security/reentrancy","docId":"develop/contracts/security/reentrancy","unlisted":false},{"type":"link","label":"Random Numbers","href":"/develop/contracts/security/random","docId":"develop/contracts/security/random","unlisted":false},{"type":"html","value":"<hr/>"},{"type":"link","label":"Bug Bounty Program","href":"/develop/contracts/security/bounty","docId":"develop/contracts/security/bounty","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/develop/contracts/security/welcome"},{"type":"html","value":"<hr/>"},{"type":"html","value":"<a class=\'menu__link internal\' href=\'/tutorials/examples/count-near\'> \ud83d\udcd6 Tutorials </a>"}],"collapsed":true,"collapsible":true},{"type":"html","value":"<hr/>"},{"type":"html","value":"<span class=\'menu__link\'><b><small> Multi-Chain Components </small></b></span>"},{"type":"link","label":"What is a Component?","href":"/bos/tutorial/quickstart","docId":"bos/tutorial/quickstart","unlisted":false},{"type":"category","label":"Building Web3 Components","items":[{"type":"link","label":"Choose your Dev Environment","href":"/bos/dev/intro","docId":"bos/dev/intro","unlisted":false},{"type":"category","label":"Anatomy of a Component","items":[{"type":"link","label":"Basics","href":"/bos/api/state","docId":"bos/api/state","unlisted":false},{"type":"link","label":"Web Browser Methods","href":"/bos/api/web-methods","docId":"bos/api/web-methods","unlisted":false},{"type":"link","label":"List of Native Components","href":"/bos/api/builtin-components","docId":"bos/api/builtin-components","unlisted":false},{"type":"link","label":"Interacting with Near","href":"/bos/api/near","docId":"bos/api/near","unlisted":false},{"type":"link","label":"Social Interactions","href":"/bos/api/social","docId":"bos/api/social","unlisted":false},{"type":"link","label":"Social Notifications","href":"/bos/api/notifications","docId":"bos/api/notifications","unlisted":false},{"type":"link","label":"Handling Historical data","href":"/bos/queryapi/bos-components","docId":"bos/queryapi/bos-components","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"link","label":"Using components on WebApps","href":"/bos/tutorial/bos-gateway","docId":"bos/tutorial/bos-gateway","unlisted":false},{"type":"html","value":"<hr/>"},{"type":"html","value":"<a class=\'menu__link internal\' href=\'/bos/dev/bos-loader\'> \ud83d\udcd6 Tutorials </a>"}],"collapsed":true,"collapsible":true},{"type":"html","value":"<hr/>"},{"type":"html","value":"<span class=\'menu__link\'><b><small> Web3 Applications </small></b></span>"},{"type":"link","label":"What are Web3 Apps?","href":"/develop/web3-apps/whatareweb3apps","docId":"develop/web3-apps/whatareweb3apps","unlisted":false},{"type":"category","label":"Building Web3 Applications","items":[{"type":"link","label":"\u2b50 Quickstart a WebApp","href":"/develop/integrate/quickstart-frontend","docId":"develop/integrate/quickstart-frontend","unlisted":false},{"type":"link","label":"Integrating Contracts","href":"/develop/integrate/frontend","docId":"develop/integrate/frontend","unlisted":false},{"type":"link","label":"Integrating Components","href":"/develop/integrate/frontend-components","docId":"develop/integrate/frontend-components","unlisted":false},{"type":"category","label":"Backend","items":[{"type":"link","label":"Authenticate NEAR Users","href":"/develop/integrate/backend-login","docId":"develop/integrate/backend-login","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"html","value":"<hr/>"},{"type":"html","value":"<a class=\'menu__link internal\' href=\'/tutorials/examples/count-near\'> \ud83d\udcd6 Tutorials </a>"}],"collapsed":true,"collapsible":true},{"type":"html","value":"<hr/>"},{"type":"html","value":"<span class=\'menu__link\'><b><small> Primitives (FT, NFT, ...) </small></b></span>"},{"type":"link","label":"What are Primitives?","href":"/primitives/whatareprimitives","docId":"primitives/whatareprimitives","unlisted":false},{"type":"category","label":"Primitives & Standards","items":[{"type":"link","label":"Fungible Tokens (FT)","href":"/primitives/ft","docId":"primitives/ft","unlisted":false},{"type":"link","label":"Non-Fungible Tokens (NFT)","href":"/primitives/nft","docId":"primitives/nft","unlisted":false},{"type":"link","label":"Linkdrops","href":"/primitives/linkdrop","docId":"primitives/linkdrop","unlisted":false},{"type":"link","label":"Price Oracles","href":"/primitives/oracles","docId":"primitives/oracles","unlisted":false},{"type":"link","label":"Autonomous Organizations (DAO)","href":"/primitives/dao","docId":"primitives/dao","unlisted":false},{"type":"link","label":"Decentralized Exchanges (DEX)","href":"/primitives/dex","docId":"primitives/dex","unlisted":false},{"type":"html","value":"<hr/>"},{"type":"html","value":"<a class=\'menu__link internal\' href=\'/tutorials/nfts/minting-nfts\'> \ud83d\udcd6 Tutorials </a>"}],"collapsed":true,"collapsible":true},{"type":"html","value":"<hr/>"},{"type":"html","value":"<span class=\'menu__link\'><b><small> Data Infrastructure </small></b></span>"},{"type":"link","label":"What is Data Infrastructure?","href":"/develop/whataredatasolutions","docId":"develop/whataredatasolutions","unlisted":false},{"type":"category","label":"NEAR Data Infrastructure","items":[{"type":"link","label":"BigQuery","href":"/bos/queryapi/big-query","docId":"bos/queryapi/big-query","unlisted":false},{"type":"category","label":"QueryAPI","items":[{"type":"link","label":"Introduction","href":"/bos/queryapi/intro","docId":"bos/queryapi/intro","unlisted":false},{"type":"link","label":"How it works","href":"/bos/queryapi/how-it-works","docId":"bos/queryapi/how-it-works","unlisted":false},{"type":"link","label":"Limitations","href":"/bos/queryapi/intro#known-limitations"},{"type":"link","label":"Getting Started","href":"/bos/community/indexers","docId":"bos/community/indexers","unlisted":false},{"type":"link","label":"Best Practices","href":"/bos/queryapi/best-practices","docId":"bos/queryapi/best-practices","unlisted":false},{"type":"link","label":"Indexing Functions","href":"/bos/queryapi/index-functions","docId":"bos/queryapi/index-functions","unlisted":false},{"type":"link","label":"Context object","href":"/bos/queryapi/context-object","docId":"bos/queryapi/context-object","unlisted":false},{"type":"link","label":"Access & Query Historical data","href":"/bos/queryapi/query-data","docId":"bos/queryapi/query-data","unlisted":false},{"type":"link","label":"Migrate from Lake framework","href":"/bos/queryapi/migrate-from-near-lake","docId":"bos/queryapi/migrate-from-near-lake","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Lake Framework","items":[{"type":"link","label":"Lake Overview","href":"/tools/near-lake","docId":"tools/near-lake","unlisted":false},{"type":"link","label":"Getting started","href":"/tutorials/indexer/near-lake-state-changes-indexer","docId":"tutorials/indexer/near-lake-state-changes-indexer","unlisted":false},{"type":"link","label":"Migrating to NEAR Lake framework","href":"/tutorials/indexer/migrating-to-near-lake-framework","docId":"tutorials/indexer/migrating-to-near-lake-framework","unlisted":false},{"type":"category","label":"Building Indexers","items":[{"type":"link","label":"Lake Primitive Types","href":"/develop/lake/primitives","docId":"develop/lake/primitives","unlisted":false},{"type":"link","label":"NEAR Lake Primitives","href":"https://near.github.io/near-lake-framework-js/"},{"type":"link","label":"JS basic tutorial","href":"/tutorials/indexer/js-lake-indexer","docId":"tutorials/indexer/js-lake-indexer","unlisted":false},{"type":"link","label":"Python tutorial","href":"/tutorials/indexer/python-lake-indexer","docId":"tutorials/indexer/python-lake-indexer","unlisted":false},{"type":"link","label":"NFT Indexer","href":"/tutorials/indexer/nft-indexer","docId":"tutorials/indexer/nft-indexer","unlisted":false},{"type":"link","label":"NFT indexer for Python","href":"/tutorials/indexer/python-nft-indexer","docId":"tutorials/indexer/python-nft-indexer","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Running NEAR Lake","items":[{"type":"link","label":"Running Lake Indexer","href":"/tutorials/indexer/run-lake-indexer","docId":"tutorials/indexer/run-lake-indexer","unlisted":false},{"type":"link","label":"Start options","href":"/tutorials/indexer/lake-start-options","docId":"tutorials/indexer/lake-start-options","unlisted":false},{"type":"link","label":"Credentials","href":"/tutorials/indexer/credentials","docId":"tutorials/indexer/credentials","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Lake Data Structures","items":[{"type":"link","label":"Table of contents","href":"/develop/lake/structures/toc","docId":"develop/lake/structures/toc","unlisted":false},{"type":"link","label":"Block","href":"/develop/lake/structures/block","docId":"develop/lake/structures/block","unlisted":false},{"type":"link","label":"Chunk","href":"/develop/lake/structures/chunk","docId":"develop/lake/structures/chunk","unlisted":false},{"type":"link","label":"Shard","href":"/develop/lake/structures/shard","docId":"develop/lake/structures/shard","unlisted":false},{"type":"link","label":"Transaction","href":"/develop/lake/structures/transaction","docId":"develop/lake/structures/transaction","unlisted":false},{"type":"link","label":"Receipt","href":"/develop/lake/structures/receipt","docId":"develop/lake/structures/receipt","unlisted":false},{"type":"link","label":"ExecutionOutcome","href":"/develop/lake/structures/execution-outcome","docId":"develop/lake/structures/execution-outcome","unlisted":false},{"type":"link","label":"StateChange","href":"/develop/lake/structures/state-change","docId":"develop/lake/structures/state-change","unlisted":false}],"collapsed":true,"collapsible":true}],"collapsed":true,"collapsible":true}],"collapsed":true,"collapsible":true}],"tutorials":[{"type":"link","label":"Home","href":"/tutorials/welcome","docId":"tutorials/welcome","unlisted":false},{"type":"html","value":"<hr/>"},{"type":"html","value":"<span class=\'menu__link\'><b><small> Examples </small></b></span>"},{"type":"category","label":"Frontend & Smart Contract","items":[{"type":"link","label":"Count on NEAR","href":"/tutorials/examples/count-near","docId":"tutorials/examples/count-near","unlisted":false},{"type":"link","label":"Guest Book","href":"/tutorials/examples/guest-book","docId":"tutorials/examples/guest-book","unlisted":false},{"type":"link","label":"Donation","href":"/tutorials/examples/donation","docId":"tutorials/examples/donation","unlisted":false},{"type":"link","label":"Cross Contract Call","href":"/tutorials/examples/xcc","docId":"tutorials/examples/xcc","unlisted":false},{"type":"link","label":"Coin Flip","href":"/tutorials/examples/coin-flip","docId":"tutorials/examples/coin-flip","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Advanced Contracts","items":[{"type":"link","label":"Factory","href":"/tutorials/examples/factory","docId":"tutorials/examples/factory","unlisted":false},{"type":"link","label":"Complex Cross Contract Call","href":"/tutorials/examples/advanced-xcc","docId":"tutorials/examples/advanced-xcc","unlisted":false},{"type":"link","label":"Self Upgrade & State Migration","href":"/tutorials/examples/update-contract-migrate-state","docId":"tutorials/examples/update-contract-migrate-state","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"link","label":"Frontend & Multiple Contracts","href":"/tutorials/examples/frontend-multiple-contracts","docId":"tutorials/examples/frontend-multiple-contracts","unlisted":false},{"type":"html","value":"<hr/>"},{"type":"html","value":"<span class=\'menu__link\'><b><small> Tutorials </small></b></span>"},{"type":"category","label":"Components","items":[{"type":"link","label":"BOS Loader","href":"/bos/dev/bos-loader","docId":"bos/dev/bos-loader","unlisted":false},{"type":"link","label":"Smart Contract Interaction","href":"/bos/tutorial/interaction","docId":"bos/tutorial/interaction","unlisted":false},{"type":"link","label":"Design Components","href":"/bos/tutorial/ds-components","docId":"bos/tutorial/ds-components","unlisted":false},{"type":"link","label":"Using IFrames","href":"/bos/tutorial/using-iframes","docId":"bos/tutorial/using-iframes","unlisted":false},{"type":"link","label":"Push Notifications","href":"/bos/tutorial/push-notifications","docId":"bos/tutorial/push-notifications","unlisted":false},{"type":"link","label":"WebSockets & QueryAPI","href":"/bos/tutorial/queryapi-websockets","docId":"bos/tutorial/queryapi-websockets","unlisted":false},{"type":"link","label":"NEAR for Ethereum developers","href":"/bos/tutorial/ethers-js","docId":"bos/tutorial/ethers-js","unlisted":false},{"type":"link","label":"Best Practices for Ethereum developers on NEAR","href":"/bos/tutorial/ethers-js-best-practices","docId":"bos/tutorial/ethers-js-best-practices","unlisted":false},{"type":"link","label":"Lido Example","href":"/bos/tutorial/lido","docId":"bos/tutorial/lido","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Fungible Tokens 101 (FT)","items":[{"type":"link","label":"Introduction","href":"/tutorials/fts/introduction","docId":"tutorials/fts/introduction","unlisted":false},{"type":"link","label":"Pre-deployed Contract","href":"/tutorials/fts/predeployed-contract","docId":"tutorials/fts/predeployed-contract","unlisted":false},{"type":"link","label":"Contract Architecture","href":"/tutorials/fts/skeleton","docId":"tutorials/fts/skeleton","unlisted":false},{"type":"link","label":"Defining Your Token","href":"/tutorials/fts/defining-a-token","docId":"tutorials/fts/defining-a-token","unlisted":false},{"type":"link","label":"Circulating Supply","href":"/tutorials/fts/circulating-supply","docId":"tutorials/fts/circulating-supply","unlisted":false},{"type":"link","label":"Registering Accounts","href":"/tutorials/fts/registering-accounts","docId":"tutorials/fts/registering-accounts","unlisted":false},{"type":"link","label":"Transferring FTs","href":"/tutorials/fts/transfers","docId":"tutorials/fts/transfers","unlisted":false},{"type":"link","label":"Adding FTs to a Marketplace","href":"/tutorials/fts/marketplace","docId":"tutorials/fts/marketplace","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Non-Fungible Tokens (NFT)","items":[{"type":"link","label":"Minting NFTs","href":"/tutorials/nfts/minting-nfts","docId":"tutorials/nfts/minting-nfts","unlisted":false},{"type":"link","label":"Minting Front-end","href":"/tutorials/nfts/minting-nft-frontend","docId":"tutorials/nfts/minting-nft-frontend","unlisted":false},{"type":"link","label":"Minecraft NFTs","href":"/tutorials/nfts/minecraft-nfts","docId":"tutorials/nfts/minecraft-nfts","unlisted":false},{"type":"link","label":"Building a Frontend","href":"https://github.com/near-examples/nft-tutorial-frontend"},{"type":"html","value":"<hr/>"},{"type":"category","label":"\ud83c\udf10 Contract: Zero to Hero ","items":[{"type":"link","label":"Introduction","href":"/tutorials/nfts/js/introduction","docId":"tutorials/nfts/js/introduction","unlisted":false},{"type":"link","label":"Pre-deployed Contract","href":"/tutorials/nfts/js/predeployed-contract","docId":"tutorials/nfts/js/predeployed-contract","unlisted":false},{"type":"link","label":"Contract Architecture","href":"/tutorials/nfts/js/skeleton","docId":"tutorials/nfts/js/skeleton","unlisted":false},{"type":"link","label":"Minting","href":"/tutorials/nfts/js/minting","docId":"tutorials/nfts/js/minting","unlisted":false},{"type":"link","label":"Upgrade a Contract","href":"/tutorials/nfts/js/upgrade-contract","docId":"tutorials/nfts/js/upgrade-contract","unlisted":false},{"type":"link","label":"Enumeration","href":"/tutorials/nfts/js/enumeration","docId":"tutorials/nfts/js/enumeration","unlisted":false},{"type":"link","label":"Core","href":"/tutorials/nfts/js/core","docId":"tutorials/nfts/js/core","unlisted":false},{"type":"link","label":"Approvals","href":"/tutorials/nfts/js/approvals","docId":"tutorials/nfts/js/approvals","unlisted":false},{"type":"link","label":"Royalty","href":"/tutorials/nfts/js/royalty","docId":"tutorials/nfts/js/royalty","unlisted":false},{"type":"link","label":"Events","href":"/tutorials/nfts/js/events","docId":"tutorials/nfts/js/events","unlisted":false},{"type":"link","label":"Marketplace","href":"/tutorials/nfts/js/marketplace","docId":"tutorials/nfts/js/marketplace","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"\ud83e\udd80 Contract: Zero to Hero","items":[{"type":"link","label":"Introduction","href":"/tutorials/nfts/introduction","docId":"tutorials/nfts/introduction","unlisted":false},{"type":"link","label":"Pre-deployed Contract","href":"/tutorials/nfts/predeployed-contract","docId":"tutorials/nfts/predeployed-contract","unlisted":false},{"type":"link","label":"Contract Architecture","href":"/tutorials/nfts/skeleton","docId":"tutorials/nfts/skeleton","unlisted":false},{"type":"link","label":"Minting","href":"/tutorials/nfts/minting","docId":"tutorials/nfts/minting","unlisted":false},{"type":"link","label":"Upgrade a Contract","href":"/tutorials/nfts/upgrade-contract","docId":"tutorials/nfts/upgrade-contract","unlisted":false},{"type":"link","label":"Enumeration","href":"/tutorials/nfts/enumeration","docId":"tutorials/nfts/enumeration","unlisted":false},{"type":"link","label":"Core","href":"/tutorials/nfts/core","docId":"tutorials/nfts/core","unlisted":false},{"type":"link","label":"Approvals","href":"/tutorials/nfts/approvals","docId":"tutorials/nfts/approvals","unlisted":false},{"type":"link","label":"Royalty","href":"/tutorials/nfts/royalty","docId":"tutorials/nfts/royalty","unlisted":false},{"type":"link","label":"Events","href":"/tutorials/nfts/events","docId":"tutorials/nfts/events","unlisted":false},{"type":"link","label":"Marketplace","href":"/tutorials/nfts/marketplace","docId":"tutorials/nfts/marketplace","unlisted":false},{"type":"link","label":"Lazy Minting, Collections, and More!","href":"/tutorials/nfts/series","docId":"tutorials/nfts/series","unlisted":false}],"collapsed":true,"collapsible":true}],"collapsed":true,"collapsible":true},{"type":"category","label":"Build a Crossword Game","items":[{"type":"category","label":"Basics","items":[{"type":"link","label":"Crossword Game Overview","href":"/tutorials/crosswords/basics/overview","docId":"tutorials/crosswords/basics/overview","unlisted":false},{"type":"link","label":"Set up Rust and a contract skeleton","href":"/tutorials/crosswords/basics/set-up-skeleton","docId":"tutorials/crosswords/basics/set-up-skeleton","unlisted":false},{"type":"link","label":"Add basic code, create a subaccount, and call methods","href":"/tutorials/crosswords/basics/add-functions-call","docId":"tutorials/crosswords/basics/add-functions-call","unlisted":false},{"type":"link","label":"Hash the solution, unit tests, and an init method","href":"/tutorials/crosswords/basics/hashing-and-unit-tests","docId":"tutorials/crosswords/basics/hashing-and-unit-tests","unlisted":false},{"type":"link","label":"Add simple frontend","href":"/tutorials/crosswords/basics/simple-frontend","docId":"tutorials/crosswords/basics/simple-frontend","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Beginner","items":[{"type":"link","label":"Overview","href":"/tutorials/crosswords/beginner/overview","docId":"tutorials/crosswords/beginner/overview","unlisted":false},{"type":"link","label":"Store multiple puzzles","href":"/tutorials/crosswords/beginner/collections","docId":"tutorials/crosswords/beginner/collections","unlisted":false},{"type":"link","label":"Using structs and enums","href":"/tutorials/crosswords/beginner/structs-enums","docId":"tutorials/crosswords/beginner/structs-enums","unlisted":false},{"type":"link","label":"Actions and sending NEAR","href":"/tutorials/crosswords/beginner/actions","docId":"tutorials/crosswords/beginner/actions","unlisted":false},{"type":"link","label":"Add a puzzle","href":"/tutorials/crosswords/beginner/adding-a-puzzle","docId":"tutorials/crosswords/beginner/adding-a-puzzle","unlisted":false},{"type":"link","label":"Access keys and login 1/2","href":"/tutorials/crosswords/beginner/logging-in","docId":"tutorials/crosswords/beginner/logging-in","unlisted":false},{"type":"link","label":"Access keys and login 2/2","href":"/tutorials/crosswords/beginner/logging-in-implementation","docId":"tutorials/crosswords/beginner/logging-in-implementation","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Intermediate","items":[{"type":"link","label":"Overview","href":"/tutorials/crosswords/intermediate/overview","docId":"tutorials/crosswords/intermediate/overview","unlisted":false},{"type":"link","label":"Solution as seed phrase","href":"/tutorials/crosswords/intermediate/access-key-solution","docId":"tutorials/crosswords/intermediate/access-key-solution","unlisted":false},{"type":"link","label":"Seed phrase logic","href":"/tutorials/crosswords/intermediate/use-seed-phrase","docId":"tutorials/crosswords/intermediate/use-seed-phrase","unlisted":false},{"type":"link","label":"Linkdrop contract","href":"/tutorials/crosswords/intermediate/linkdrop","docId":"tutorials/crosswords/intermediate/linkdrop","unlisted":false},{"type":"link","label":"Cross-contract calls, etc.","href":"/tutorials/crosswords/intermediate/cross-contract-calls","docId":"tutorials/crosswords/intermediate/cross-contract-calls","unlisted":false},{"type":"link","label":"Base64 params, wrap up","href":"/tutorials/crosswords/intermediate/base64vecu8","docId":"tutorials/crosswords/intermediate/base64vecu8","unlisted":false}],"collapsed":true,"collapsible":true}],"collapsed":true,"collapsible":true},{"type":"category","label":"Data Infrastructure","items":[{"type":"link","label":"Posts Indexer","href":"/bos/tutorial/indexer-tutorials/posts-indexer","docId":"bos/tutorial/indexer-tutorials/posts-indexer","unlisted":false},{"type":"link","label":"Hype Indexer","href":"/bos/tutorial/indexer-tutorials/hype-indexer","docId":"bos/tutorial/indexer-tutorials/hype-indexer","unlisted":false},{"type":"link","label":"NFTs Indexer","href":"/bos/tutorial/indexer-tutorials/nft-indexer","docId":"bos/tutorial/indexer-tutorials/nft-indexer","unlisted":false},{"type":"link","label":"Social Feed Indexer","href":"/bos/tutorial/indexer-tutorials/feed-indexer","docId":"bos/tutorial/indexer-tutorials/feed-indexer","unlisted":false},{"type":"link","label":"Getting started","href":"/tutorials/indexer/near-lake-state-changes-indexer","docId":"tutorials/indexer/near-lake-state-changes-indexer","unlisted":false},{"type":"link","label":"Migrating to NEAR Lake framework","href":"/tutorials/indexer/migrating-to-near-lake-framework","docId":"tutorials/indexer/migrating-to-near-lake-framework","unlisted":false},{"type":"category","label":"Building Indexers","items":[{"type":"link","label":"Lake Primitive Types","href":"/develop/lake/primitives","docId":"develop/lake/primitives","unlisted":false},{"type":"link","label":"NEAR Lake Primitives","href":"https://near.github.io/near-lake-framework-js/"},{"type":"link","label":"JS basic tutorial","href":"/tutorials/indexer/js-lake-indexer","docId":"tutorials/indexer/js-lake-indexer","unlisted":false},{"type":"link","label":"Python tutorial","href":"/tutorials/indexer/python-lake-indexer","docId":"tutorials/indexer/python-lake-indexer","unlisted":false},{"type":"link","label":"NFT Indexer","href":"/tutorials/indexer/nft-indexer","docId":"tutorials/indexer/nft-indexer","unlisted":false},{"type":"link","label":"NFT indexer for Python","href":"/tutorials/indexer/python-nft-indexer","docId":"tutorials/indexer/python-nft-indexer","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Running NEAR Lake","items":[{"type":"link","label":"Running Lake Indexer","href":"/tutorials/indexer/run-lake-indexer","docId":"tutorials/indexer/run-lake-indexer","unlisted":false},{"type":"link","label":"Start options","href":"/tutorials/indexer/lake-start-options","docId":"tutorials/indexer/lake-start-options","unlisted":false},{"type":"link","label":"Credentials","href":"/tutorials/indexer/credentials","docId":"tutorials/indexer/credentials","unlisted":false}],"collapsed":true,"collapsible":true}],"collapsed":true,"collapsible":true}],"tools":[{"type":"link","label":"Home","href":"/tools/welcome","docId":"tools/welcome","unlisted":false},{"type":"html","value":"<hr/>"},{"type":"html","value":"<span class=\'menu__link\'><b><small> Developer Tools </small></b></span>"},{"type":"category","label":"JavaScript API","items":[{"type":"link","label":"Using JavaScript API","href":"/tools/near-api-js/quick-reference","docId":"tools/near-api-js/quick-reference","unlisted":false},{"type":"link","label":"Wallet","href":"/tools/near-api-js/wallet","docId":"tools/near-api-js/wallet","unlisted":false},{"type":"link","label":"Account","href":"/tools/near-api-js/account","docId":"tools/near-api-js/account","unlisted":false},{"type":"link","label":"Contract","href":"/tools/near-api-js/contract","docId":"tools/near-api-js/contract","unlisted":false},{"type":"link","label":"Utilities","href":"/tools/near-api-js/utils","docId":"tools/near-api-js/utils","unlisted":false},{"type":"link","label":"FAQ","href":"/tools/near-api-js/faq","docId":"tools/near-api-js/faq","unlisted":false},{"type":"link","label":"Handling Passphrases","href":"https://github.com/near/near-seed-phrase"},{"type":"link","label":"Type Docs","href":"https://near.github.io/near-api-js"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Smart Contract SDKs","items":[{"type":"category","label":"Rust SDK","items":[{"type":"link","label":"About Rust SDK","href":"/sdk/rust/introduction","docId":"sdk/rust/introduction","unlisted":false},{"type":"link","label":"Getting Started","href":"/sdk/rust/get-started","docId":"sdk/rust/get-started","unlisted":false},{"type":"category","label":"Structure of a Contract","items":[{"type":"link","label":"near_bindgen","href":"/sdk/rust/contract-structure/near-bindgen","docId":"sdk/rust/contract-structure/near-bindgen","unlisted":false},{"type":"link","label":"Collections","href":"/sdk/rust/contract-structure/collections","docId":"sdk/rust/contract-structure/collections","unlisted":false},{"type":"link","label":"Collections Nesting","href":"/sdk/rust/contract-structure/nesting","docId":"sdk/rust/contract-structure/nesting","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Contract Interface","items":[{"type":"link","label":"Public Method Types","href":"/sdk/rust/contract-interface/public-methods","docId":"sdk/rust/contract-interface/public-methods","unlisted":false},{"type":"link","label":"Contract Mutability","href":"/sdk/rust/contract-interface/contract-mutability","docId":"sdk/rust/contract-interface/contract-mutability","unlisted":false},{"type":"link","label":"Private Methods","href":"/sdk/rust/contract-interface/private-methods","docId":"sdk/rust/contract-interface/private-methods","unlisted":false},{"type":"link","label":"Payable Methods","href":"/sdk/rust/contract-interface/payable-methods","docId":"sdk/rust/contract-interface/payable-methods","unlisted":false},{"type":"link","label":"Serialization Protocols","href":"/sdk/rust/contract-interface/serialization-interface","docId":"sdk/rust/contract-interface/serialization-interface","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Cross-Contract Calls","items":[{"type":"link","label":"Callbacks","href":"/sdk/rust/cross-contract/callbacks","docId":"sdk/rust/cross-contract/callbacks","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Promises","items":[{"type":"link","label":"Introduction","href":"/sdk/rust/promises/intro","docId":"sdk/rust/promises/intro","unlisted":false},{"type":"link","label":"Sending $NEAR","href":"/sdk/rust/promises/token-tx","docId":"sdk/rust/promises/token-tx","unlisted":false},{"type":"link","label":"Creating Accounts","href":"/sdk/rust/promises/create-account","docId":"sdk/rust/promises/create-account","unlisted":false},{"type":"link","label":"Deploying Contracts","href":"/sdk/rust/promises/deploy-contract","docId":"sdk/rust/promises/deploy-contract","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Building Contracts","items":[{"type":"link","label":"Basic Instructions","href":"/sdk/rust/building/basics","docId":"sdk/rust/building/basics","unlisted":false},{"type":"link","label":"Rapid Prototyping","href":"/sdk/rust/building/prototyping","docId":"sdk/rust/building/prototyping","unlisted":false},{"type":"link","label":"Post Processing Tools","href":"/sdk/rust/building/post-processing","docId":"sdk/rust/building/post-processing","unlisted":false},{"type":"link","label":"Reproducible Builds","href":"/sdk/rust/building/reproducible-builds","docId":"sdk/rust/building/reproducible-builds","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Testing","items":[{"type":"link","label":"Integration Tests","href":"/sdk/rust/testing/integration-tests","docId":"sdk/rust/testing/integration-tests","unlisted":false},{"type":"link","label":"Unit Tests","href":"/sdk/rust/testing/unit-tests","docId":"sdk/rust/testing/unit-tests","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"link","label":"Best Practices","href":"/sdk/rust/best-practices","docId":"sdk/rust/best-practices","unlisted":false},{"type":"link","label":"Reducing Contract Size","href":"/sdk/rust/contract-size","docId":"sdk/rust/contract-size","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"JavaScript SDK","items":[{"type":"link","label":"About JS SDK","href":"/sdk/js/introduction","docId":"sdk/js/introduction","unlisted":false},{"type":"link","label":"Getting Started","href":"/sdk/js/get-started","docId":"sdk/js/get-started","unlisted":false},{"type":"link","label":"Type Docs \u2197","href":"https://near.github.io/near-sdk-js/"},{"type":"category","label":"Structure of a Contract","items":[{"type":"link","label":"NearBindgen","href":"/sdk/js/contract-structure/near-bindgen","docId":"sdk/js/contract-structure/near-bindgen","unlisted":false},{"type":"link","label":"Collections","href":"/sdk/js/contract-structure/collections","docId":"sdk/js/contract-structure/collections","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Contract Interface","items":[{"type":"link","label":"Public Methods","href":"/sdk/js/contract-interface/public-methods","docId":"sdk/js/contract-interface/public-methods","unlisted":false},{"type":"link","label":"Private Methods","href":"/sdk/js/contract-interface/private-methods","docId":"sdk/js/contract-interface/private-methods","unlisted":false},{"type":"link","label":"Payable Methods","href":"/sdk/js/contract-interface/payable-methods","docId":"sdk/js/contract-interface/payable-methods","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Cross-Contract Calls","items":[{"type":"link","label":"Callbacks","href":"/sdk/js/cross-contract/callbacks","docId":"sdk/js/cross-contract/callbacks","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Promises","items":[{"type":"link","label":"Introduction","href":"/sdk/js/promises/intro","docId":"sdk/js/promises/intro","unlisted":false},{"type":"link","label":"Sending Native Tokens","href":"/sdk/js/promises/token-tx","docId":"sdk/js/promises/token-tx","unlisted":false},{"type":"link","label":"Creating Accounts","href":"/sdk/js/promises/create-account","docId":"sdk/js/promises/create-account","unlisted":false},{"type":"link","label":"Deploying Contracts","href":"/sdk/js/promises/deploy-contract","docId":"sdk/js/promises/deploy-contract","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Building Contracts","items":[{"type":"link","label":"Basic Instructions","href":"/sdk/js/building/basics","docId":"sdk/js/building/basics","unlisted":false},{"type":"link","label":"Rapid Prototyping","href":"/sdk/js/building/prototyping","docId":"sdk/js/building/prototyping","unlisted":false},{"type":"link","label":"Reproducible Builds","href":"/sdk/js/building/reproducible-builds","docId":"sdk/js/building/reproducible-builds","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"SDK CLI","items":[{"type":"link","label":"JS SDK CLI","href":"/sdk/js/cli/","docId":"sdk/js/cli/cli","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Testing","items":[{"type":"link","label":"Integration Tests","href":"/sdk/js/testing/integration-tests","docId":"sdk/js/testing/integration-tests","unlisted":false},{"type":"link","label":"Unit Tests","href":"/sdk/js/testing/unit-tests","docId":"sdk/js/testing/unit-tests","unlisted":false}],"collapsed":true,"collapsible":true}],"collapsed":true,"collapsible":true}],"collapsed":true,"collapsible":true,"href":"/sdk/welcome"},{"type":"category","label":"Command Line Tools (CLI)","items":[{"type":"link","label":"NEAR CLI","href":"/tools/near-cli","docId":"tools/near-cli","unlisted":false},{"type":"link","label":"NEAR CLI RS","href":"/tools/near-cli-rs","docId":"tools/near-cli-rs","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"BOS Web Editors","items":[{"type":"link","label":"near.org Web Editor","href":"https://near.org/sandbox"},{"type":"link","label":"Jutsu Web Editor","href":"https://jutsu.ai/editor"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Wallets","items":[{"type":"link","label":"Wallet Selector","href":"/tools/wallet-selector","docId":"tools/wallet-selector","unlisted":false},{"type":"link","label":"Remix IDE Plugin","href":"https://docs.welldonestudio.io/code/getting-started"}],"collapsed":true,"collapsible":true},{"type":"html","value":"<hr/>"},{"type":"html","value":"<span class=\'menu__link\'><b><small> Ecosystem Tools </small></b></span>"},{"type":"link","label":"Wallets","href":"https://wallet.near.org"},{"type":"link","label":"Testnet Faucet","href":"https://near-faucet.io/"},{"type":"link","label":"Explorers","href":"/tools/explorer","docId":"tools/explorer","unlisted":false},{"type":"link","label":"Indexing Solutions","href":"/tools/indexing","docId":"tools/indexing","unlisted":false}],"integrate":[{"type":"link","label":"Home","href":"/develop/integrate/welcome","docId":"develop/integrate/welcome","unlisted":false},{"type":"html","value":"<hr/>"},{"type":"html","value":"<span class=\'menu__link\'><b><small> Composable Apps </small></b></span>"},{"type":"html","value":"<hr/>"},{"type":"html","value":"<span class=\'menu__link\'><b><small> Related Tools </small></b></span>"},{"type":"link","label":"Wallet Selector \u2197","href":"/tools/wallet-selector"},{"type":"link","label":"QueryAPI \u2197","href":"/bos/queryapi/intro"},{"type":"link","label":"BOS CLI","href":"https://github.com/FroVolod/bos-cli-rs"},{"type":"link","label":"VS Code Extension","href":"/bos/dev/vscode","docId":"bos/dev/vscode","unlisted":false},{"type":"link","label":"Seed Phrase Generator","href":"https://github.com/near/near-seed-phrase"}],"indexers":[],"api":[{"type":"link","label":"Home","href":"/api/rpc/introduction","docId":"api/rpc/introduction","unlisted":false},{"type":"link","label":"RPC Providers","href":"/api/rpc/providers","docId":"api/rpc/providers","unlisted":false},{"type":"html","value":"<hr/>"},{"type":"html","value":"<span class=\'menu__link\'><b><small> NEAR RPC API </small></b></span>"},{"type":"link","label":"Setup","href":"/api/rpc/setup","docId":"api/rpc/setup","unlisted":false},{"type":"link","label":"Access Keys","href":"/api/rpc/access-keys","docId":"api/rpc/access-keys","unlisted":false},{"type":"link","label":"Accounts / Contracts","href":"/api/rpc/contracts","docId":"api/rpc/contracts","unlisted":false},{"type":"link","label":"Block / Chunk","href":"/api/rpc/block-chunk","docId":"api/rpc/block-chunk","unlisted":false},{"type":"link","label":"Gas","href":"/api/rpc/gas","docId":"api/rpc/gas","unlisted":false},{"type":"link","label":"Protocol","href":"/api/rpc/protocol","docId":"api/rpc/protocol","unlisted":false},{"type":"link","label":"Network","href":"/api/rpc/network","docId":"api/rpc/network","unlisted":false},{"type":"link","label":"Transactions","href":"/api/rpc/transactions","docId":"api/rpc/transactions","unlisted":false}],"data-availability":[{"type":"link","label":"Home","href":"/data-availability/welcome","docId":"data-availability/welcome","unlisted":false},{"type":"html","value":"<hr/>"},{"type":"html","value":"<span class=\'menu__link\'><b><small> DA Docs </small></b></span>"},{"type":"link","label":"Blob Store Contract","href":"/data-availability/blob-contract","docId":"data-availability/blob-contract","unlisted":false},{"type":"link","label":"Light Client","href":"/data-availability/light-client","docId":"data-availability/light-client","unlisted":false},{"type":"link","label":"RPC Client","href":"/data-availability/rpc","docId":"data-availability/rpc","unlisted":false},{"type":"category","label":"Integrations","items":[{"type":"link","label":"Integrations","href":"/data-availability/integrations","docId":"data-availability/integrations","unlisted":false},{"type":"link","label":"Arbitrum Nitro","href":"/data-availability/arbitrum","docId":"data-availability/arbitrum","unlisted":false},{"type":"link","label":"Optimism","href":"/data-availability/optimism","docId":"data-availability/optimism","unlisted":false},{"type":"link","label":"CDK Stack","href":"/data-availability/cdk-integration","docId":"data-availability/cdk-integration","unlisted":false}],"collapsed":true,"collapsible":true}],"exchanges":[{"type":"category","label":"Integration","items":[{"type":"link","label":"Exchange Integration","href":"/integrator/exchange-integration","docId":"integrator/exchange-integration","unlisted":false},{"type":"link","label":"Balance Changes","href":"/integrator/balance-changes","docId":"integrator/balance-changes","unlisted":false},{"type":"link","label":"Accounts","href":"/integrator/accounts","docId":"integrator/accounts","unlisted":false},{"type":"link","label":"Create a Transaction","href":"/integrator/create-transactions","docId":"integrator/create-transactions","unlisted":false},{"type":"link","label":"Fungible Tokens","href":"/integrator/fungible-tokens","docId":"integrator/fungible-tokens","unlisted":false},{"type":"link","label":"Implicit Accounts","href":"/integrator/implicit-accounts","docId":"integrator/implicit-accounts","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Understanding Errors","items":[{"type":"link","label":"Introduction","href":"/integrator/errors/introduction","docId":"integrator/errors/introduction","unlisted":false},{"type":"link","label":"Source Code Survey","href":"/integrator/errors/error-implementation","docId":"integrator/errors/error-implementation","unlisted":false},{"type":"link","label":"Avoiding Token Loss","href":"/integrator/errors/token-loss","docId":"integrator/errors/token-loss","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"link","label":"Integrator FAQ","href":"/integrator/faq","docId":"integrator/faq","unlisted":false}]},"docs":{"abstraction/chain-signatures":{"id":"abstraction/chain-signatures","title":"Chain Signatures","description":"Chain signatures enable NEAR accounts, including smart contracts, to sign and execute transactions across many blockchain protocols.","sidebar":"build"},"abstraction/chain-signatures/wallet":{"id":"abstraction/chain-signatures/wallet","title":"Wallet Chain Key Rules","description":"Overview","sidebar":"build"},"abstraction/what-is":{"id":"abstraction/what-is","title":"What is Chain Abstraction?","description":"The idea behind chain abstraction is quite simple: blockchain technology should be abstracted away from the user experience. In other words, people should not realize when they are using a blockchain, nor which blockchain they are using.","sidebar":"build"},"api/rpc/access-keys":{"id":"api/rpc/access-keys","title":"Access Keys","description":"The RPC API enables you to retrieve information about an account\'s access keys.","sidebar":"api"},"api/rpc/block-chunk":{"id":"api/rpc/block-chunk","title":"Block / Chunk","description":"The RPC API enables you to query the network and get details about specific blocks or chunks.","sidebar":"api"},"api/rpc/contracts":{"id":"api/rpc/contracts","title":"Accounts / Contracts","description":"The RPC API enables you to view details about accounts and contracts as well as perform contract calls.","sidebar":"api"},"api/rpc/gas":{"id":"api/rpc/gas","title":"Gas","description":"The RPC API enables you to query the gas price for a specific block or hash.","sidebar":"api"},"api/rpc/introduction":{"id":"api/rpc/introduction","title":"NEAR RPC API","description":"The RPC API allows you to communicate directly with the NEAR network. For example,","sidebar":"api"},"api/rpc/maintenance-windows":{"id":"api/rpc/maintenance-windows","title":"Maintenance Windows","description":"The RPC API enables you to query future maintenance windows for a specific validator in current epoch"},"api/rpc/network":{"id":"api/rpc/network","title":"Network","description":"The RPC API enables you to query status information for nodes and validators.","sidebar":"api"},"api/rpc/protocol":{"id":"api/rpc/protocol","title":"Protocol","description":"The RPC API enables you to retrieve the current genesis and protocol configuration.","sidebar":"api"},"api/rpc/providers":{"id":"api/rpc/providers","title":"RPC Providers","description":"There are multiple RPC providers from which you can choose from. These providers will work as intermediaries to help you interact with the NEAR network.","sidebar":"api"},"api/rpc/setup":{"id":"api/rpc/setup","title":"Setup","description":"In order to use the RPC API you will need to setup the correct RPC endpoints.","sidebar":"api"},"api/rpc/transactions":{"id":"api/rpc/transactions","title":"RPC Endpoints","description":"The RPC API enables you to send transactions and query their status.","sidebar":"api"},"bos/api/builtin-components":{"id":"bos/api/builtin-components","title":"List of Native Components","description":"A list of all the built-in components to be used on Near Components.","sidebar":"build"},"bos/api/near":{"id":"bos/api/near","title":"Interacting with Near","description":"The components can use the Near object to interact with smart contracts in the NEAR blockchain. There are three methods:","sidebar":"build"},"bos/api/notifications":{"id":"bos/api/notifications","title":"Social Notifications","description":"Applications such as NEAR Social and the NEAR Dev Portal allow components to send notifications to their users.","sidebar":"build"},"bos/api/primitives":{"id":"bos/api/primitives","title":"Primitives API","description":"Near Social VM provides a set of custom APIs that can be used by the components."},"bos/api/social":{"id":"bos/api/social","title":"Social Interactions","description":"NEAR components can natively communicate with the SocialDB smart contract (currently deployed at social.near).","sidebar":"build"},"bos/api/state":{"id":"bos/api/state","title":"Basics","description":"Borrowing from React, Near Components use hooks such as useState and useEffect to handle the state\'s logic, and props to receive parameters.","sidebar":"build"},"bos/api/web-methods":{"id":"bos/api/web-methods","title":"Web Browser Methods","description":"NEAR Components have access to classic web methods that enable them to:","sidebar":"build"},"bos/community/indexers":{"id":"bos/community/indexers","title":"QueryAPI Indexing Example","description":"With QueryAPI you can quickly create your own indexer by:","sidebar":"build"},"bos/dev/bos-loader":{"id":"bos/dev/bos-loader","title":"BOS Loader","description":"In this article you\'ll learn how to develop, test, and deploy BOS components using CLI tools. You can use this workflow to tap into the colaboration, pull-request, and other GitHub benefits while still deploying components to the BOS.","sidebar":"tutorials"},"bos/dev/intro":{"id":"bos/dev/intro","title":"Choose your Dev Environment","description":"The environments in which you can develop Components are divided into two categories:","sidebar":"build"},"bos/dev/vscode":{"id":"bos/dev/vscode","title":"VS Code Extension","description":"A VS Code extension to help you develop components for NEAR BOS using Visual Studio Code.","sidebar":"integrate"},"bos/overview":{"id":"bos/overview","title":"Overview","description":"NEAR simplifies building, deploying and accessing decentralized frontends. Embrace the power of community and Web 3."},"bos/queryapi/best-practices":{"id":"bos/queryapi/best-practices","title":"Indexing best practices","description":"In this article you can find suggested best practices when building blockchain indexers using QueryAPI.","sidebar":"build"},"bos/queryapi/big-query":{"id":"bos/queryapi/big-query","title":"BigQuery Public Dataset","description":"Blockchain data indexing in NEAR Public Lakehouse is for anyone wanting to understand blockchain data. This includes:","sidebar":"build"},"bos/queryapi/bos-components":{"id":"bos/queryapi/bos-components","title":"Historical data","description":"Building components that handle historical blockchain data require dedicated solutions that manage the data and reduce the latency of requests, as it\'s not possible to scan the whole blockchain when a user makes a request.","sidebar":"build"},"bos/queryapi/context-object":{"id":"bos/queryapi/context-object","title":"QueryAPI Context object","description":"Overview","sidebar":"build"},"bos/queryapi/how-it-works":{"id":"bos/queryapi/how-it-works","title":"How QueryAPI works","description":"QueryApi is a streaming indexer implementation that executes custom indexing logic written by developers on the NEAR blockchain.","sidebar":"build"},"bos/queryapi/index-functions":{"id":"bos/queryapi/index-functions","title":"Indexing Functions","description":"QueryAPI is a fully managed service that allows you to create and manage indexers on-chain seamlessly.","sidebar":"build"},"bos/queryapi/intro":{"id":"bos/queryapi/intro","title":"QueryAPI Overview","description":"Near QueryAPI is a fully managed solution to build indexer functions,","sidebar":"build"},"bos/queryapi/migrate-from-near-lake":{"id":"bos/queryapi/migrate-from-near-lake","title":"Migrate from NEAR Lake framework","description":"NEAR QueryAPI is currently under development. Users who want to test-drive this solution need to be added to the allowlist before creating or forking QueryAPI indexers.","sidebar":"build"},"bos/queryapi/query-data":{"id":"bos/queryapi/query-data","title":"Accessing and Querying Historical data","description":"In this article, you\'ll find a high-level overview about the two most common use-cases for blockchain indexing, and how they can be solved using NEAR QueryAPI and BigQuery.","sidebar":"build"},"bos/tutorial/bos-gateway":{"id":"bos/tutorial/bos-gateway","title":"Using components on WebApps","description":"In order to use the components you create in a WebApp you need to use what is known as the NEAR VM. This virtual machine helps you to easily fetch components from the blockchain and transform them into executable code.","sidebar":"build"},"bos/tutorial/ds-components":{"id":"bos/tutorial/ds-components","title":"Design Components","description":"When building components, the NEAR VM provides a complete set of Radix primitives to simplify UI development.","sidebar":"tutorials"},"bos/tutorial/ethers-js":{"id":"bos/tutorial/ethers-js","title":"NEAR for Ethereum developers","description":"NEAR components are chain-agnostic, enabling you to create decentralized frontends tailored for any Ethereum dApps. Throughout this article, we\'ll navigate prevalent use-cases with code snippets. You\u2019ll also find links to exemplary NEAR components for reference.","sidebar":"tutorials"},"bos/tutorial/ethers-js-best-practices":{"id":"bos/tutorial/ethers-js-best-practices","title":"Best Practices for Ethereum developers on NEAR","description":"In this example, we will create an Ethereum dApp on NEAR that functions as a portfolio manager, displaying the current balances for a list of tokens. Additionally, we will display current market value of each asset in the portfolio.","sidebar":"tutorials"},"bos/tutorial/indexer-tutorials/feed-indexer":{"id":"bos/tutorial/indexer-tutorials/feed-indexer","title":"Social Feed Indexer","description":"NEAR QueryAPI is currently under development. Users who want to test-drive this solution need to be added to the allowlist before creating or forking QueryAPI indexers.","sidebar":"tutorials"},"bos/tutorial/indexer-tutorials/hype-indexer":{"id":"bos/tutorial/indexer-tutorials/hype-indexer","title":"Hype Indexer","description":"NEAR QueryAPI is currently under development. Users who want to test-drive this solution need to be added to the allowlist before creating or forking QueryAPI indexers.","sidebar":"tutorials"},"bos/tutorial/indexer-tutorials/nft-indexer":{"id":"bos/tutorial/indexer-tutorials/nft-indexer","title":"Minted NFTs Indexer","description":"NEAR QueryAPI is currently under development. Users who want to test-drive this solution need to be added to the allowlist before creating or forking QueryAPI indexers.","sidebar":"tutorials"},"bos/tutorial/indexer-tutorials/posts-indexer":{"id":"bos/tutorial/indexer-tutorials/posts-indexer","title":"Posts Indexer","description":"NEAR QueryAPI is currently under development. Users who want to test-drive this solution need to be added to the allowlist before creating or forking QueryAPI indexers.","sidebar":"tutorials"},"bos/tutorial/interaction":{"id":"bos/tutorial/interaction","title":"Smart Contract Interaction","description":"Your frontend can interact with different blockchains using the built-in BOS API. Let\'s see how to create an application that reads and stores a greeting from a NEAR smart contract.","sidebar":"tutorials"},"bos/tutorial/lido":{"id":"bos/tutorial/lido","title":"Lido Example","description":"If you are ready to explore further, the Lido component serves as an excellent fully-fledged example, as it demonstrates how to interact with a smart contract deployed on the Ethereum mainnet.","sidebar":"tutorials"},"bos/tutorial/push-notifications":{"id":"bos/tutorial/push-notifications","title":"Push Notifications","description":"Push messages enable your gateway to send notifications on desktop and mobile devices even when the users are not active.","sidebar":"tutorials"},"bos/tutorial/queryapi-websockets":{"id":"bos/tutorial/queryapi-websockets","title":"WebSocket-enabled Components with QueryAPI","description":"In this article you\'ll learn how to create a NEAR component that gathers information from a QueryAPI indexer using WebSockets.","sidebar":"tutorials"},"bos/tutorial/quickstart":{"id":"bos/tutorial/quickstart","title":"What are NEAR Components?","description":"NEAR Components are a new way to build web applications. They are composable, reusable and decentralized.","sidebar":"build"},"bos/tutorial/using-iframes":{"id":"bos/tutorial/using-iframes","title":"Using IFrames","description":"In this tutorial you\'ll learn how to use the iframe VM tag and the Iframe resizer library, so you can embed external HTML or use custom DOM elements when building NEAR components.","sidebar":"tutorials"},"concepts/abstraction/chain-signatures":{"id":"concepts/abstraction/chain-signatures","title":"What are Chain Signatures?","description":"Chain signatures enable NEAR accounts, including smart contracts, to sign and execute transactions across many blockchain protocols.","sidebar":"concepts"},"concepts/abstraction/introduction":{"id":"concepts/abstraction/introduction","title":"Chain Abstraction","description":"Do you know how your favorite apps are built and which database they use?. Chances are not, since we choose apps based on their functionality, and not their underlying tech.","sidebar":"concepts"},"concepts/abstraction/meta-transactions":{"id":"concepts/abstraction/meta-transactions","title":"Meta Transactions","description":"NEP-366 introduced the concept of meta","sidebar":"concepts"},"concepts/abstraction/mpc":{"id":"concepts/abstraction/mpc","title":"Multi-Party Computation (MPC)","description":"MPC, or multi-party computation, is about how multiple parties can do shared computations on private inputs without revealing the private data."},"concepts/abstraction/relayers":{"id":"concepts/abstraction/relayers","title":"Relayers","description":"A relayer is a simple web service that receives transactions from NEAR users, and relays them to the network while attaching tokens to cover their GAS expenses. In this document we present a high-level overview on how relayers work. Please check the build a relayer page if you want to learn how to build your own relayer.","sidebar":"concepts"},"concepts/abstraction/signatures/use-cases":{"id":"concepts/abstraction/signatures/use-cases","title":"Use cases for Chain Signatures","description":"Chain signatures enable you to implement multichain and cross-chain workflows in a simple way.","sidebar":"concepts"},"concepts/advanced/indexers":{"id":"concepts/advanced/indexers","title":"Introduction to Indexers","description":"Here you will find everything you need to know in order to familiarize yourself with the concept of indexers and even build your own one.","sidebar":"concepts"},"concepts/advanced/near-indexer-framework":{"id":"concepts/advanced/near-indexer-framework","title":"NEAR Indexer Framework","description":"https://github.com/near/nearcore/tree/master/chain/indexer","sidebar":"concepts"},"concepts/advanced/near-lake-framework":{"id":"concepts/advanced/near-lake-framework","title":"NEAR Lake Framework","description":"https://github.com/near/near-lake-framework/","sidebar":"concepts"},"concepts/advanced/specification":{"id":"concepts/advanced/specification","title":"NEAR Protocol Specification","description":"NEAR Protocol Specifications and Standards are tracked in two places:","sidebar":"concepts"},"concepts/advanced/vm":{"id":"concepts/advanced/vm","title":"Virtual Machine","description":"Talk about execution here"},"concepts/basics/accounts/access-keys":{"id":"concepts/basics/accounts/access-keys","title":"Access Keys","description":"In blockchain, using an account refers to using a private key to sign transactions.","sidebar":"concepts"},"concepts/basics/accounts/account-id":{"id":"concepts/basics/accounts/account-id","title":"Address (Account ID)","description":"Every NEAR account is identified by a specific address. Based on their name, two types of accounts can be distinguished:","sidebar":"concepts"},"concepts/basics/accounts/creating-accounts":{"id":"concepts/basics/accounts/creating-accounts","title":"Creating Accounts","description":"The simplest way to create NEAR accounts is through the NEAR Wallet, however, you can also create","sidebar":"concepts"},"concepts/basics/accounts/model":{"id":"concepts/basics/accounts/model","title":"Account Model","description":"In order to join the NEAR ecosystem, users need to create an account. NEAR accounts are unique when compared to other blockchain ecosystems.","sidebar":"concepts"},"concepts/basics/accounts/smartcontract":{"id":"concepts/basics/accounts/smartcontract","title":"Smart Contract","description":"Smart contracts are pieces of executable code stored in the account\'s state that have their own storage, and perform transactions in the account\'s name.","sidebar":"concepts"},"concepts/basics/accounts/state":{"id":"concepts/basics/accounts/state","title":"State","description":"Each account has an associated state where it stores its metadata and all the contract-related data (contract\'s code + storage).","sidebar":"concepts"},"concepts/basics/actors":{"id":"concepts/basics/actors","title":"Actors of NEAR","description":"There are 3 main actors interacting to form the NEAR ecosystem:"},"concepts/basics/epoch":{"id":"concepts/basics/epoch","title":"Epoch","description":"An epoch is a unit of time when validators of the network remain constant. It is measured in blocks:","sidebar":"concepts"},"concepts/basics/networks":{"id":"concepts/basics/networks","title":"NEAR Networks","description":"NEAR Protocol operates on several networks each operating with their own independent validators and unique state. These networks are as follows:","sidebar":"concepts"},"concepts/basics/overview":{"id":"concepts/basics/overview","title":"Quick Overview","description":"Lets start with a quick overview of the different elements that compose the NEAR blockchain."},"concepts/basics/protocol":{"id":"concepts/basics/protocol","title":"What is NEAR?","description":"NEAR is a user-friendly and carbon-neutral blockchain, built from the ground up to be performant, secure, and infinitely scalable.","sidebar":"concepts"},"concepts/basics/runtime":{"id":"concepts/basics/runtime","title":"Runtime","description":"This section contains videos that explore the core Runtime, its operation, and how it implements cross-contract calls.","sidebar":"concepts"},"concepts/basics/technical_stuff":{"id":"concepts/basics/technical_stuff","title":"technical_stuff","description":"Interaction with NEAR is done with JSON RPC API via HTTP calls."},"concepts/basics/token-loss":{"id":"concepts/basics/token-loss","title":"Avoiding Token Loss","description":"Careful! Losing tokens means losing money!","sidebar":"concepts"},"concepts/basics/tokens":{"id":"concepts/basics/tokens","title":"Tokens","description":"This is the native token used in NEAR Protocol.","sidebar":"concepts"},"concepts/basics/transactions/gas":{"id":"concepts/basics/transactions/gas","title":"Gas","description":"On every transaction you send to the network NEAR charges you a fee (aka gas fee). This fee is used to indirectly pay the people that keep the network infrastructure, and to incentivize developers of smart contracts.","sidebar":"concepts"},"concepts/basics/transactions/gas-advanced":{"id":"concepts/basics/transactions/gas-advanced","title":"Gas - Advanced","description":"Costs of complex actions","sidebar":"concepts"},"concepts/basics/transactions/overview":{"id":"concepts/basics/transactions/overview","title":"Transactions","description":"NEAR is asynchronous by design. While it opens a wide range of possibilities for smart contracts implementations, it may also add to confusion among beginners and newcomers from other blockchain platforms.","sidebar":"concepts"},"concepts/basics/validators":{"id":"concepts/basics/validators","title":"Validators","description":"The NEAR network is decentralized, meaning that multiple people collaborate in order to keep it safe. We call such people validators.","sidebar":"concepts"},"concepts/data-flow/data-storage":{"id":"concepts/data-flow/data-storage","title":"Data on the Blockchain","description":"This article will cover a high-level overview of Blockchain concepts and tools which facilitate reading and writing Blockchain data.","sidebar":"concepts"},"concepts/data-flow/near-data-flow":{"id":"concepts/data-flow/near-data-flow","title":"NEAR Data Flow","description":"<iframe","sidebar":"concepts"},"concepts/data-flow/token-transfer-flow":{"id":"concepts/data-flow/token-transfer-flow","title":"Token Transfer flow","description":"In the previous article we saw an example of token transfer between accounts found in different shards. That example was simplified and missed a few steps in the process. That was intentional, to keep the article and the video short yet explanatory, in order to give you a bigger picture for understanding concepts.","sidebar":"concepts"},"concepts/storage/data-storage":{"id":"concepts/storage/data-storage","title":"Data Storage / Collections","description":"All data stored on the NEAR blockchain is done in key / value pairs. There are several collection methods in the SDKs we\'ve created that will help you store your data on chain.","sidebar":"concepts"},"concepts/storage/storage-solutions":{"id":"concepts/storage/storage-solutions","title":"Decentralized Storage Solutions","description":"In this article you\'ll find a brief overview of different decentralized storage solutions that can be integrated into your decentralized applications (dApps). This will allow you to store large amounts of data using a more economical alternative to native NEAR storage.","sidebar":"concepts"},"concepts/storage/storage-staking":{"id":"concepts/storage/storage-staking","title":"Storage Staking","description":"When you deploy a smart contract to NEAR, you pay for the storage that this contract requires using a mechanism called storage staking.","sidebar":"concepts"},"concepts/web3/basics":{"id":"concepts/web3/basics","title":"Blockchain basics","description":"Before diving deeper into the intricacies of Web 3 development, let\u2019s explore what it is and why it exists.","sidebar":"concepts"},"concepts/web3/economics":{"id":"concepts/web3/economics","title":"Web 3.0 Economics","description":"With technological decentralization also came economical decentralization. It stands on 3 pillars - Non-Fungible tokens (NFTs), Fungible tokens (FTs) and Decentralized Finance (DeFi).","sidebar":"concepts"},"concepts/web3/intro":{"id":"concepts/web3/intro","title":"Moving from Web 2 to Web 3","description":"by Sigma Software","sidebar":"concepts"},"concepts/web3/near":{"id":"concepts/web3/near","title":"NEAR Protocol","description":"For the beginners, it\u2019s always better to start with documentation, and NEAR has an excellent one. Here, we only focus on basic concepts which are necessary to understand later chapters, so an entire guideline could be understood without prior NEAR knowledge.","sidebar":"concepts"},"concepts/web3/nfts":{"id":"concepts/web3/nfts","title":"NFTs for Web 2 Applications","description":"At the first stage of our Web 3 transformation, let\u2019s decentralize ownership of our digital assets using blockchain technology. By doing this, we can create a user-owned economy, where digital assets are exchanged and traded without any participation or control from the developers. Later, we\u2019ll discuss how to bring it to the next level by adding Fungible Tokens into the mix.","sidebar":"concepts"},"concepts/welcome":{"id":"concepts/welcome","title":"NEAR Protocol Overview","description":"Welcome! Here we will explain you what NEAR Protocol is, its components, and how it works.","sidebar":"concepts"},"data-availability/arbitrum":{"id":"data-availability/arbitrum","title":"Arbitrum Nitro","description":"To support Arbitrum Nitro, we have integrated a small plugin into the DAC daserver. This is much like our http sidecar and provides a very modular integration into NEAR DA whilst supporting Arbitrum","sidebar":"data-availability"},"data-availability/blob-contract":{"id":"data-availability/blob-contract","title":"Blob Store Contract","description":"This contract provides the store for arbitrary DA blobs. In practice, these \\"blobs\\" are sequencing data from rollups, but they can be any data.","sidebar":"data-availability"},"data-availability/cdk-integration":{"id":"data-availability/cdk-integration","title":"CDK Stack","description":"The folder ./cdk-stack contains some projects, too:","sidebar":"data-availability"},"data-availability/integrations":{"id":"data-availability/integrations","title":"Integrations","description":"We have some proof of concept works for integrating with roll-ups. We are working to prove the system\'s capabilities and provide a reference implementation for others to follow.","sidebar":"data-availability"},"data-availability/light-client":{"id":"data-availability/light-client","title":"Light Client","description":"A trustless off-chain light client for NEAR with DA-enabled features, such as KZG commitments, Reed-Solomon erasure coding & storage connectors.","sidebar":"data-availability"},"data-availability/optimism":{"id":"data-availability/optimism","title":"Container diagram for optimism","description":"We have integrated with the Optimism OP stack. Utilizing the Batcher for submissions to NEAR and the proposer for submitting NEAR commitment data to Ethereum.","sidebar":"data-availability"},"data-availability/rpc":{"id":"data-availability/rpc","title":"RPC Client","description":"This client is the defacto client for submitting blobs to NEAR.","sidebar":"data-availability"},"data-availability/welcome":{"id":"data-availability/welcome","title":"Rollup Data Availability","description":"Utilizing NEAR as storage data availability with a focus on lowering rollup DA fees.","sidebar":"data-availability"},"develop/contracts/actions":{"id":"develop/contracts/actions","title":"Transfers & Actions","description":"Smart contracts can perform specific Actions such as transferring NEAR, or calling other contracts.","sidebar":"build"},"develop/contracts/anatomy":{"id":"develop/contracts/anatomy","title":"The Contract Class","description":"Your contract\'s logic and state (storage) is defined by the main class, in which:","sidebar":"build"},"develop/contracts/basics":{"id":"develop/contracts/basics","title":"Modules, Types & Structs","description":"When writing smart contracts you will leverage common programming concepts such:","sidebar":"build"},"develop/contracts/crosscontract":{"id":"develop/contracts/crosscontract","title":"Cross-Contract Calls","description":"Cross-contract calls allow your contract to interact with other deployed contracts. This is useful for:","sidebar":"build"},"develop/contracts/environment/environment":{"id":"develop/contracts/environment/environment","title":"Environment","description":"Every method execution has an environment associated with information such as:","sidebar":"build"},"develop/contracts/introduction":{"id":"develop/contracts/introduction","title":"Prerequisites","description":"To develop a smart contract you will need to install Node.js."},"develop/contracts/quickstart":{"id":"develop/contracts/quickstart","title":"Hello Contract","description":"NEAR accounts can host programs known as smart contracts. Smart contracts can store data, and expose methods so other users and contracts interact with them.","sidebar":"build"},"develop/contracts/security/bounty":{"id":"develop/contracts/security/bounty","title":"Bug Bounty Program","description":"NEAR has a revamped bug bounty program!","sidebar":"build"},"develop/contracts/security/callbacks":{"id":"develop/contracts/security/callbacks","title":"Cross-Contract Calls","description":"While writing cross-contract calls there is a significant aspect to keep in mind","sidebar":"build"},"develop/contracts/security/checklist":{"id":"develop/contracts/security/checklist","title":"\u2705 Checklist","description":"Once you finished developing your smart contract please go through the following list in order to ensure everything is safe for the end user.","sidebar":"build"},"develop/contracts/security/frontrunning":{"id":"develop/contracts/security/frontrunning","title":"Front Running","description":"In the NEAR network, validators have access to the transaction pool, and can therefore see them before they execute. This enables validators to analyze transactions for a potential profit and frontrun them with a transaction of their own.","sidebar":"build"},"develop/contracts/security/one-yocto":{"id":"develop/contracts/security/one-yocto","title":"Ensure it is the User (1y\u24c3)","description":"NEAR uses a system of Access Keys to simplify handling accounts.","sidebar":"build"},"develop/contracts/security/random":{"id":"develop/contracts/security/random","title":"Random Numbers","description":"When writing smart contracts in NEAR you have access to a random seed that enables you to create random numbers/strings","sidebar":"build"},"develop/contracts/security/reentrancy":{"id":"develop/contracts/security/reentrancy","title":"Reentrancy Attacks","description":"Between a cross-contract call and its callback any method of your contract can be executed. Not taking this into account is one of the main sources of exploits. It is so common that it has its own name: reentrancy attacks.","sidebar":"build"},"develop/contracts/security/storage":{"id":"develop/contracts/security/storage","title":"Million Small Deposits","description":"On NEAR, your contract pays for the storage it uses. This means that the more data you store, the more balance you need to cover for storage. If you don\'t handle these costs correctly (e.g. asking the user to cover their storage usage), then a million little deposits can drain your contract of its funds.","sidebar":"build"},"develop/contracts/security/sybil":{"id":"develop/contracts/security/sybil","title":"Sybil Attacks","description":"While developing your smart contract, keep in mind that an individual can potentially create multiple NEAR accounts. This is especially relevant in ecosystems involving crowd decisions, such as DAOs.","sidebar":"build"},"develop/contracts/security/welcome":{"id":"develop/contracts/security/welcome","title":"Security","description":"Here you will find information on how to keep your smart contract and decentralized applications secure.","sidebar":"build"},"develop/contracts/serialization":{"id":"develop/contracts/serialization","title":"Notes on Serialization","description":"Smart contracts need to be able to communicate complex data in a simple way, while","sidebar":"build"},"develop/contracts/storage":{"id":"develop/contracts/storage","title":"State & Data Structures","description":"Each contract has its own state (storage), which only they can modify but anyone can see.","sidebar":"build"},"develop/contracts/welcome":{"id":"develop/contracts/welcome","title":"NEAR Smart Contracts","description":"Welcome! Smart contracts are pieces of executable code that live in a NEAR account. They can store data, perform transactions in the account\u2019s name, and expose methods so other accounts can interact with them."},"develop/contracts/whatisacontract":{"id":"develop/contracts/whatisacontract","title":"What is a Smart Contract?","description":"Smart contracts are pieces of executable code that live in a NEAR account. They can store data, perform transactions in the account\u2019s name, and expose methods so other accounts can interact with them.","sidebar":"build"},"develop/deploy":{"id":"develop/deploy","title":"NEAR CLI - Basics","description":"After your contract is ready you can deploy it in the NEAR network for everyone to use it.","sidebar":"build"},"develop/github-overview":{"id":"develop/github-overview","title":"NEAR Developer Repositories","description":"An overview of essential repositories when building on NEAR Protocol."},"develop/integrate/backend-login":{"id":"develop/integrate/backend-login","title":"Authenticate NEAR Users","description":"Recently NEAR has approved a new standard that, among other things, enables users to authenticate into a backend service.","sidebar":"build"},"develop/integrate/frontend":{"id":"develop/integrate/frontend","title":"Integrating Contracts","description":"To integrate NEAR to your frontend, you will leverage two tools:","sidebar":"build"},"develop/integrate/frontend-components":{"id":"develop/integrate/frontend-components","title":"Integrating Components","description":"To integrate Components to your frontend, you will leverage two tools:","sidebar":"build"},"develop/integrate/quickstart-frontend":{"id":"develop/integrate/quickstart-frontend","title":"Hello WebApp","description":"Most interactions with the NEAR ecosystem can be grouped in 2 categories:","sidebar":"build"},"develop/integrate/rpc":{"id":"develop/integrate/rpc","title":"Remote Procedural Call","description":"Here we will only briefly mention how to use the NEAR RPC."},"develop/integrate/welcome":{"id":"develop/integrate/welcome","title":"Build Web3 Applications","description":"Welcome! Here you will find documentation on how to build Web3 applications using NEAR. What are you planning to build?","sidebar":"integrate"},"develop/lake/primitives":{"id":"develop/lake/primitives","title":"NEAR Lake Primitive Types","description":"This article contains the primitive types used by the NEAR Lake Framework package. These types are used to define the data structures used by the framework as well as provide some popular helper functions.","sidebar":"tutorials"},"develop/lake/structures/block":{"id":"develop/lake/structures/block","title":"Block Structure","description":"Definition","sidebar":"build"},"develop/lake/structures/chunk":{"id":"develop/lake/structures/chunk","title":"Chunk Structure","description":"Definition","sidebar":"build"},"develop/lake/structures/execution-outcome":{"id":"develop/lake/structures/execution-outcome","title":"ExecutionOutcome Structure","description":"Definition","sidebar":"build"},"develop/lake/structures/receipt":{"id":"develop/lake/structures/receipt","title":"Receipt Structure","description":"Definition","sidebar":"build"},"develop/lake/structures/shard":{"id":"develop/lake/structures/shard","title":"Shard structure","description":"Definition","sidebar":"build"},"develop/lake/structures/state-change":{"id":"develop/lake/structures/state-change","title":"StateChange Structure","description":"Definition","sidebar":"build"},"develop/lake/structures/toc":{"id":"develop/lake/structures/toc","title":"Structures. Table of Contents","description":"The structures described in this section of the docs are indexer-related more than nearcore related. Some of the are artificial and are not a part of nearcore","sidebar":"build"},"develop/lake/structures/transaction":{"id":"develop/lake/structures/transaction","title":"Transaction Structure","description":"Definition","sidebar":"build"},"develop/lock":{"id":"develop/lock","title":"Locking Accounts","description":"Removing all full access keys from an account will effectively lock it.","sidebar":"build"},"develop/monitor":{"id":"develop/monitor","title":"Monitor the Network","description":"Welcome! Here you will find documentation on how to query past data and real time events from the NEAR network."},"develop/prerequisites":{"id":"develop/prerequisites","title":"Prerequisites","description":"In order to develop smart contracts you will need Node.js for javascript, and the rust toolchain for Rust."},"develop/quickstart-guide":{"id":"develop/quickstart-guide","title":"Hello NEAR \ud83d\udc4b","description":"Hi! Let us guide you in starting and interacting with your first decentralized app (dApp) in NEAR: Hello NEAR."},"develop/relayers/build-relayer":{"id":"develop/relayers/build-relayer","title":"Building a Meta Transaction Relayer with NextJS","description":"This guide will walk you through the steps required to construct a meta transaction relayer using NextJS 13.","sidebar":"build"},"develop/relayers/gas-station":{"id":"develop/relayers/gas-station","title":"Multichain Gas Station Contract","description":"The multichain gas station smart contract accepts payments in NEAR tokens in exchange for gas funding on non-NEAR foreign chains. Part of the NEAR Multichain effort, it works in conjunction with the MPC recovery service to generate on-chain signatures.","sidebar":"build"},"develop/relayers/multichain-server":{"id":"develop/relayers/multichain-server","title":"Multichain Relayer Server","description":"The Multichain Relayer Server facilitates cross-chain transactions and enables Chain Abstraction.","sidebar":"build"},"develop/relevant-contracts/dao":{"id":"develop/relevant-contracts/dao","title":"Decentralized Autonomous Organizations","description":"Decentralized Autonomous Organizations (DAOs) are self-organized groups that form around common purposes. Membership, decision making,"},"develop/relevant-contracts/ft":{"id":"develop/relevant-contracts/ft","title":"Fungible Tokens (FT)","description":"Besides the native NEAR token, NEAR accounts have access to a multitude of fungible tokens (e.g. these whitelisted tokens). Moreover, it is even possible for users to create their own fungible tokens."},"develop/relevant-contracts/nft":{"id":"develop/relevant-contracts/nft","title":"Non Fungible Tokens (NFT)","description":"In contrast with fungible tokens, non-fungible tokens (NFT) are unitary and therefore unique. This makes NFTs ideal to represent ownership of assets such as a piece of digital content, or a ticket for an event."},"develop/relevant-contracts/oracles":{"id":"develop/relevant-contracts/oracles","title":"Decentralized Oracles","description":"Oracles are smart contracts that enable you to query the current price of an asset. Since smart contracts cannot connect to"},"develop/testing/integration-test":{"id":"develop/testing/integration-test","title":"Integration Tests","description":"Integration tests enable to deploy your contract in the NEAR testnet or a local sandbox, and create test-users to interact with it. In this way, you can thoroughly test your contract in a realistic environment.","sidebar":"build"},"develop/testing/introduction":{"id":"develop/testing/introduction","title":"Introduction","description":"While developing your smart contract you will want to test that it works as it is supposed to, and moreover, does so securely. In NEAR we have developed tools to help you carry out such tests. Basically, there are two types of tests you can perform:","sidebar":"build"},"develop/testing/kurtosis-localnet":{"id":"develop/testing/kurtosis-localnet","title":"Creating a Local Development Environment","description":"Using Kurtosis NEAR Package to develop locally","sidebar":"build"},"develop/testing/unit-test":{"id":"develop/testing/unit-test","title":"Unit Testing","description":"Unit tests allow you to test the contract methods individually. They are suitable to check the storage is updated correctly, and that methods return their expected values. They are written in the contract\'s language and execute locally.","sidebar":"build"},"develop/upgrade":{"id":"develop/upgrade","title":"Updating Contracts","description":"NEAR accounts separate their logic (contract\'s code) from their state (storage), allowing the code to be changed.","sidebar":"build"},"develop/web3-apps/whatareweb3apps":{"id":"develop/web3-apps/whatareweb3apps","title":"What are Web3 Apps?","description":"Web3 Applications - also known as decentralized apps (dApps) - leverage smart contracts and blockchain data to offer transparency, security and giving back control to users over their assets and data.","sidebar":"build"},"develop/welcome":{"id":"develop/welcome","title":"Build on NEAR","description":"Welcome! Here you will find all the information on what you can build on NEAR and how to build it. Do not worry if you are new to Web3 or Blockchain, we are here to guide you through the process of learning.","sidebar":"build"},"develop/whataredatasolutions":{"id":"develop/whataredatasolutions","title":"What is Data Infrastructure?","description":"NEAR offers ready-to-use solutions to access and monitor on-chain data easily. This is very useful to automate actions based on specific events, cache data to reduce latency, gather usage data of the blockchain, and even study user preferences.","sidebar":"build"},"integrator/accounts":{"id":"integrator/accounts","title":"Accounts","description":"Introduction","sidebar":"exchanges"},"integrator/balance-changes":{"id":"integrator/balance-changes","title":"Balance changes","description":"Prerequisites","sidebar":"exchanges"},"integrator/create-transactions":{"id":"integrator/create-transactions","title":"Create Transactions","description":"To construct & process transactions you will need our API JavaScript library: near-api-js. There are many ways to create transactions but for this example we\'ll show you two ways to create a simple token transfer transaction.","sidebar":"exchanges"},"integrator/errors/error-implementation":{"id":"integrator/errors/error-implementation","title":"Source Code Survey","description":"This page provides a very high level, sometimes \\"pseudocode\\", view of error types and related messages as implemented by the NEAR platform.","sidebar":"exchanges"},"integrator/errors/introduction":{"id":"integrator/errors/introduction","title":"Introduction","description":"did you know?","sidebar":"exchanges"},"integrator/errors/token-loss":{"id":"integrator/errors/token-loss","title":"Avoiding Token Loss","description":"Careful! Losing tokens means losing money!","sidebar":"exchanges"},"integrator/exchange-integration":{"id":"integrator/exchange-integration","title":"Exchange Integration","description":"Integration Reference","sidebar":"exchanges"},"integrator/faq":{"id":"integrator/faq","title":"Integrator FAQ","description":"Orientation","sidebar":"exchanges"},"integrator/fungible-tokens":{"id":"integrator/fungible-tokens","title":"Fungible tokens","description":"Introduction","sidebar":"exchanges"},"integrator/implicit-accounts":{"id":"integrator/implicit-accounts","title":"Implicit Accounts","description":"Background","sidebar":"exchanges"},"primitives/dao":{"id":"primitives/dao","title":"Decentralized Autonomous Organizations","description":"Decentralized Autonomous Organizations (DAOs) are self-organized groups that form around common purposes. Membership, decision making, and funding are coordinated by publicly voting on proposals through a smart contract.","sidebar":"build"},"primitives/dao/bos/create-dao":{"id":"primitives/dao/bos/create-dao","title":"create-dao","description":"The full list of roles and permissions you can find here."},"primitives/dao/bos/create-proposal":{"id":"primitives/dao/bos/create-proposal","title":"create-proposal","description":""},"primitives/dao/bos/get-dao-list":{"id":"primitives/dao/bos/get-dao-list","title":"get-dao-list","description":"Example response"},"primitives/dao/bos/get-proposal-list":{"id":"primitives/dao/bos/get-proposal-list","title":"get-proposal-list","description":"Example response"},"primitives/dao/bos/vote-for-proposal":{"id":"primitives/dao/bos/vote-for-proposal","title":"vote-for-proposal","description":"Available vote options: VoteApprove, VoteReject, VoteRemove."},"primitives/dao/near-cli/create-dao":{"id":"primitives/dao/near-cli/create-dao","title":"create-dao","description":"The full list of roles and permissions you can find here."},"primitives/dao/near-cli/create-proposal":{"id":"primitives/dao/near-cli/create-proposal","title":"create-proposal","description":""},"primitives/dao/near-cli/get-dao-list":{"id":"primitives/dao/near-cli/get-dao-list","title":"get-dao-list","description":"Example response"},"primitives/dao/near-cli/get-proposal-list":{"id":"primitives/dao/near-cli/get-proposal-list","title":"get-proposal-list","description":"Example response"},"primitives/dao/near-cli/vote-for-proposal":{"id":"primitives/dao/near-cli/vote-for-proposal","title":"vote-for-proposal","description":"Available vote options: VoteApprove, VoteReject, VoteRemove."},"primitives/dao/smart-contract/create-dao":{"id":"primitives/dao/smart-contract/create-dao","title":"create-dao","description":""},"primitives/dao/smart-contract/create-proposal":{"id":"primitives/dao/smart-contract/create-proposal","title":"create-proposal","description":""},"primitives/dao/smart-contract/vote-for-proposal":{"id":"primitives/dao/smart-contract/vote-for-proposal","title":"vote-for-proposal","description":""},"primitives/dao/web-app/create-dao":{"id":"primitives/dao/web-app/create-dao","title":"create-dao","description":"The full list of roles and permissions you can find here."},"primitives/dao/web-app/create-proposal":{"id":"primitives/dao/web-app/create-proposal","title":"create-proposal","description":"The Wallet object comes from our quickstart template"},"primitives/dao/web-app/get-dao-list":{"id":"primitives/dao/web-app/get-dao-list","title":"get-dao-list","description":"The Wallet object comes from our quickstart template"},"primitives/dao/web-app/get-proposal-list":{"id":"primitives/dao/web-app/get-proposal-list","title":"get-proposal-list","description":"The Wallet object comes from our quickstart template"},"primitives/dao/web-app/vote-for-proposal":{"id":"primitives/dao/web-app/vote-for-proposal","title":"vote-for-proposal","description":"Available vote options: VoteApprove, VoteReject, VoteRemove."},"primitives/dex":{"id":"primitives/dex","title":"Decentralized Exchanges (DEX)","description":"A Decentralized Exchange (DEX) is an application that allows users to trade tokens (native & fungible tokens) through smart contracts.","sidebar":"build"},"primitives/dex/bos/get-deposit-balances":{"id":"primitives/dex/bos/get-deposit-balances","title":"get-deposit-balances","description":"Example response"},"primitives/dex/bos/get-pools":{"id":"primitives/dex/bos/get-pools","title":"get-pools","description":"Example response"},"primitives/dex/bos/get-price":{"id":"primitives/dex/bos/get-price","title":"get-price","description":"Example response"},"primitives/dex/bos/swap":{"id":"primitives/dex/bos/swap","title":"swap","description":"Example response"},"primitives/dex/near-cli/get-deposit-balances":{"id":"primitives/dex/near-cli/get-deposit-balances","title":"get-deposit-balances","description":"Example response"},"primitives/dex/near-cli/get-pools":{"id":"primitives/dex/near-cli/get-pools","title":"get-pools","description":"Example response"},"primitives/dex/near-cli/swap":{"id":"primitives/dex/near-cli/swap","title":"swap","description":"Example response"},"primitives/dex/smart-contract/get-deposit-balances":{"id":"primitives/dex/smart-contract/get-deposit-balances","title":"get-deposit-balances","description":""},"primitives/dex/smart-contract/get-pools":{"id":"primitives/dex/smart-contract/get-pools","title":"get-pools","description":""},"primitives/dex/smart-contract/swap":{"id":"primitives/dex/smart-contract/swap","title":"swap","description":""},"primitives/dex/web-app/get-deposit-balances":{"id":"primitives/dex/web-app/get-deposit-balances","title":"get-deposit-balances","description":"The Wallet object comes from our quickstart template"},"primitives/dex/web-app/get-pools":{"id":"primitives/dex/web-app/get-pools","title":"get-pools","description":"The Wallet object comes from our quickstart template"},"primitives/dex/web-app/get-price":{"id":"primitives/dex/web-app/get-price","title":"get-price","description":"The Wallet object comes from our quickstart template"},"primitives/dex/web-app/swap":{"id":"primitives/dex/web-app/swap","title":"swap","description":"The Wallet object comes from our quickstart template"},"primitives/ft":{"id":"primitives/ft","title":"Fungible Tokens (FT)","description":"Besides the native NEAR token, NEAR accounts have access to a multitude of tokens to use thoughtout the ecosystem. Moreover, it is even possible for users to create their own fungible tokens.","sidebar":"build"},"primitives/ft/bos/attach-to-call":{"id":"primitives/ft/bos/attach-to-call","title":"attach-to-call","description":"Example response"},"primitives/ft/bos/check-balance":{"id":"primitives/ft/bos/check-balance","title":"check-balance","description":"Remember about fungible token precision. You may need this value to show a response of balance requests in an understandable-to-user way in your app. How to get precision value (decimals) you may find above."},"primitives/ft/bos/create":{"id":"primitives/ft/bos/create","title":"create","description":""},"primitives/ft/bos/get-metadata":{"id":"primitives/ft/bos/get-metadata","title":"get-metadata","description":"Example response"},"primitives/ft/bos/register":{"id":"primitives/ft/bos/register","title":"register","description":""},"primitives/ft/bos/send":{"id":"primitives/ft/bos/send","title":"send","description":""},"primitives/ft/near-cli/attach-to-call":{"id":"primitives/ft/near-cli/attach-to-call","title":"attach-to-call","description":"Example response"},"primitives/ft/near-cli/check-balance":{"id":"primitives/ft/near-cli/check-balance","title":"check-balance","description":"Example response"},"primitives/ft/near-cli/create":{"id":"primitives/ft/near-cli/create","title":"create","description":""},"primitives/ft/near-cli/get-metadata":{"id":"primitives/ft/near-cli/get-metadata","title":"get-metadata","description":"Example response"},"primitives/ft/near-cli/register":{"id":"primitives/ft/near-cli/register","title":"register","description":""},"primitives/ft/near-cli/send":{"id":"primitives/ft/near-cli/send","title":"send","description":""},"primitives/ft/smart-contract/attach-to-call":{"id":"primitives/ft/smart-contract/attach-to-call","title":"attach-to-call","description":""},"primitives/ft/smart-contract/send":{"id":"primitives/ft/smart-contract/send","title":"send","description":"This snippet assumes that the contract is already holding some FTs and that you want to send them to another account."},"primitives/ft/web-app/attach-to-call":{"id":"primitives/ft/web-app/attach-to-call","title":"attach-to-call","description":"Example response"},"primitives/ft/web-app/check-balance":{"id":"primitives/ft/web-app/check-balance","title":"check-balance","description":"Remember about fungible token precision. You may need this value to show a response of balance requests in an understandable-to-user way in your app. How to get precision value (decimals) you may find above."},"primitives/ft/web-app/create":{"id":"primitives/ft/web-app/create","title":"create","description":"The Wallet object comes from our quickstart template"},"primitives/ft/web-app/get-metadata":{"id":"primitives/ft/web-app/get-metadata","title":"get-metadata","description":"Example response"},"primitives/ft/web-app/register":{"id":"primitives/ft/web-app/register","title":"register","description":"The Wallet object comes from our quickstart template"},"primitives/ft/web-app/send":{"id":"primitives/ft/web-app/send","title":"send","description":"The Wallet object comes from our quickstart template"},"primitives/linkdrop":{"id":"primitives/linkdrop","title":"Linkdrops","description":"Linkdrops allow users to distribute assets and onboard people to Web3 apps through a simple web link.","sidebar":"build"},"primitives/linkdrop/bos/create-ft-drop":{"id":"primitives/linkdrop/bos/create-ft-drop","title":"create-ft-drop","description":""},"primitives/linkdrop/bos/create-function-call-drop":{"id":"primitives/linkdrop/bos/create-function-call-drop","title":"create-function-call-drop","description":""},"primitives/linkdrop/bos/create-nft-drop":{"id":"primitives/linkdrop/bos/create-nft-drop","title":"create-nft-drop","description":""},"primitives/linkdrop/bos/get-drop-id":{"id":"primitives/linkdrop/bos/get-drop-id","title":"get-drop-id","description":""},"primitives/linkdrop/bos/get-key-pairs":{"id":"primitives/linkdrop/bos/get-key-pairs","title":"get-key-pairs","description":""},"primitives/linkdrop/bos/simple-drop":{"id":"primitives/linkdrop/bos/simple-drop","title":"simple-drop","description":""},"primitives/linkdrop/bos/transfer-ft":{"id":"primitives/linkdrop/bos/transfer-ft","title":"transfer-ft","description":""},"primitives/linkdrop/bos/transfer-nft":{"id":"primitives/linkdrop/bos/transfer-nft","title":"transfer-nft","description":""},"primitives/linkdrop/near-cli/create-ft-drop":{"id":"primitives/linkdrop/near-cli/create-ft-drop","title":"create-ft-drop","description":""},"primitives/linkdrop/near-cli/create-function-call-drop":{"id":"primitives/linkdrop/near-cli/create-function-call-drop","title":"create-function-call-drop","description":""},"primitives/linkdrop/near-cli/create-nft-drop":{"id":"primitives/linkdrop/near-cli/create-nft-drop","title":"create-nft-drop","description":""},"primitives/linkdrop/near-cli/get-drop-id":{"id":"primitives/linkdrop/near-cli/get-drop-id","title":"get-drop-id","description":""},"primitives/linkdrop/near-cli/get-key-pairs":{"id":"primitives/linkdrop/near-cli/get-key-pairs","title":"get-key-pairs","description":"Example response:"},"primitives/linkdrop/near-cli/simple-drop":{"id":"primitives/linkdrop/near-cli/simple-drop","title":"simple-drop","description":""},"primitives/linkdrop/near-cli/transfer-ft":{"id":"primitives/linkdrop/near-cli/transfer-ft","title":"transfer-ft","description":""},"primitives/linkdrop/near-cli/transfer-nft":{"id":"primitives/linkdrop/near-cli/transfer-nft","title":"transfer-nft","description":""},"primitives/linkdrop/web-app/create-ft-drop":{"id":"primitives/linkdrop/web-app/create-ft-drop","title":"create-ft-drop","description":"The Wallet object comes from our quickstart template"},"primitives/linkdrop/web-app/create-function-call-drop":{"id":"primitives/linkdrop/web-app/create-function-call-drop","title":"create-function-call-drop","description":"The Wallet object comes from our quickstart template"},"primitives/linkdrop/web-app/create-nft-drop":{"id":"primitives/linkdrop/web-app/create-nft-drop","title":"create-nft-drop","description":"The Wallet object comes from our quickstart template"},"primitives/linkdrop/web-app/get-drop-id":{"id":"primitives/linkdrop/web-app/get-drop-id","title":"get-drop-id","description":"The Wallet object comes from our quickstart template"},"primitives/linkdrop/web-app/get-key-pairs":{"id":"primitives/linkdrop/web-app/get-key-pairs","title":"get-key-pairs","description":""},"primitives/linkdrop/web-app/simple-drop":{"id":"primitives/linkdrop/web-app/simple-drop","title":"simple-drop","description":"The Wallet object comes from our quickstart template"},"primitives/linkdrop/web-app/transfer-ft":{"id":"primitives/linkdrop/web-app/transfer-ft","title":"transfer-ft","description":"The Wallet object comes from our quickstart template"},"primitives/linkdrop/web-app/transfer-nft":{"id":"primitives/linkdrop/web-app/transfer-nft","title":"transfer-nft","description":"The Wallet object comes from our quickstart template"},"primitives/nft":{"id":"primitives/nft","title":"Non-Fungible Tokens (NFT)","description":"In contrast with fungible tokens, non-fungible tokens (NFT) are unitary and therefore unique. This makes NFTs ideal to represent ownership of assets such as a piece of digital content, or a ticket for an event.","sidebar":"build"},"primitives/nft/bos/buy":{"id":"primitives/nft/bos/buy","title":"buy","description":"Example response:"},"primitives/nft/bos/list-for-sale":{"id":"primitives/nft/bos/list-for-sale","title":"list-for-sale","description":"The method nftapprove will call nfton_approve in marketplace.paras.near."},"primitives/nft/bos/mint":{"id":"primitives/nft/bos/mint","title":"mint","description":"In order to use nft_mint method of the x.paras.near contract you have to be a creator of a particular token series."},"primitives/nft/bos/query":{"id":"primitives/nft/bos/query","title":"query","description":"Example response"},"primitives/nft/bos/transfer":{"id":"primitives/nft/bos/transfer","title":"transfer","description":""},"primitives/nft/near-cli/buy":{"id":"primitives/nft/near-cli/buy","title":"buy","description":"Example response:"},"primitives/nft/near-cli/list-for-sale":{"id":"primitives/nft/near-cli/list-for-sale","title":"list-for-sale","description":"Method nftapprove of a NFT contract also calls the nfton_approve method in marketplace.paras.near as a callback."},"primitives/nft/near-cli/mint":{"id":"primitives/nft/near-cli/mint","title":"mint","description":"In order to use nft_mint method of the x.paras.near contract you have to be a creator of a particular token series."},"primitives/nft/near-cli/query":{"id":"primitives/nft/near-cli/query","title":"query","description":"Example response"},"primitives/nft/near-cli/transfer":{"id":"primitives/nft/near-cli/transfer","title":"transfer","description":""},"primitives/nft/smart-contract/buy":{"id":"primitives/nft/smart-contract/buy","title":"buy","description":"This is an example on how you can make your smart contract buy a NFT on some marketplace (Paras this case)."},"primitives/nft/smart-contract/mint":{"id":"primitives/nft/smart-contract/mint","title":"mint","description":""},"primitives/nft/smart-contract/query":{"id":"primitives/nft/smart-contract/query","title":"query","description":""},"primitives/nft/smart-contract/transfer":{"id":"primitives/nft/smart-contract/transfer","title":"transfer","description":"Please notice that a contract can only transfer an NFT that they own, or an NFT that they were approved to transfer."},"primitives/nft/web-app/buy":{"id":"primitives/nft/web-app/buy","title":"buy","description":"The Wallet object comes from our quickstart template"},"primitives/nft/web-app/list-for-sale":{"id":"primitives/nft/web-app/list-for-sale","title":"list-for-sale","description":"The Wallet object comes from our quickstart template"},"primitives/nft/web-app/mint":{"id":"primitives/nft/web-app/mint","title":"mint","description":"In order to use nft_mint method of the x.paras.near contract you have to be a creator of a particular token series."},"primitives/nft/web-app/query":{"id":"primitives/nft/web-app/query","title":"query","description":"The Wallet object comes from our quickstart template"},"primitives/nft/web-app/transfer":{"id":"primitives/nft/web-app/transfer","title":"transfer","description":"The Wallet object comes from our quickstart template"},"primitives/oracles":{"id":"primitives/oracles","title":"Price Oracles","description":"Oracles are smart contracts that enable you to query the current price of an asset.","sidebar":"build"},"primitives/whatareprimitives":{"id":"primitives/whatareprimitives","title":"What are Primitives?","description":"Primitives are fundamental building blocks that can be combined to create a fully functional application. Blockchain primitives include Fungible Tokens (FT), Non Fungible Tokens (NFT), Decentralized Autonomous organizations (DAO), Link Drops and more.","sidebar":"build"},"sdk/js/building/basics":{"id":"sdk/js/building/basics","title":"Basic Instructions","description":"To compile release version of the smart contract you can run a build script (specified in package.json for your project as { build","sidebar":"tools"},"sdk/js/building/prototyping":{"id":"sdk/js/building/prototyping","title":"Upgrading Contracts: Rapid Prototyping","description":"When you change the interface of a contract and re-deploy it, you may see this error:","sidebar":"tools"},"sdk/js/building/reproducible-builds":{"id":"sdk/js/building/reproducible-builds","title":"Reproducible Builds","description":"Reproducible builds let different people build the same program and get the exact same outputs as one another. It helps users trust that deployed contracts are built correctly and correspond to the source code. To verify your contract user can build it themselves and check that the binaries are identical.","sidebar":"tools"},"sdk/js/cli/cli":{"id":"sdk/js/cli/cli","title":"JS SDK CLI","description":"The SDK Command Line Interface (CLI) is a tool that enables to act on different parts of the build process as well as generate validations and an ABI. Among other things, the SDK CLI enables you to:","sidebar":"tools"},"sdk/js/contract-interface/payable-methods":{"id":"sdk/js/contract-interface/payable-methods","title":"Payable Methods","description":"We can allow methods to accept a NEAR token transfer together with the function call. This is done so that contracts can define a fee in tokens that needs to be paid when they are used. By default the methods are not payable and they will throw an error if someone will attempt to attach tokens to them during the invocation. This is done for safety reasons, in case someone accidentally transfers tokens during the function call.","sidebar":"tools"},"sdk/js/contract-interface/private-methods":{"id":"sdk/js/contract-interface/private-methods","title":"Private Methods","description":"When Using Callbacks","sidebar":"tools"},"sdk/js/contract-interface/public-methods":{"id":"sdk/js/contract-interface/public-methods","title":"Public Methods","description":"Methods can be called externally by using the view({}) or call({}) decorators within the contract class which will expose the method in the compiled WASM bytecode to be called by any other NEAR Account. Whenever a method is declared in your contract class without these decorators and is called by another NEAR Account, a MethodNotFound error will be thrown.","sidebar":"tools"},"sdk/js/contract-structure/collections":{"id":"sdk/js/contract-structure/collections","title":"Collections","description":"When deciding on data structures to use for the application\'s data, it is important to minimize the amount of data read and written to storage, and the amount of data serialized and deserialized to minimize the cost of transactions. It is important to understand the tradeoffs of data structures in your smart contract because it can become a bottleneck as the application scales, and migrating the state to the new data structures will come at a cost.","sidebar":"tools"},"sdk/js/contract-structure/near-bindgen":{"id":"sdk/js/contract-structure/near-bindgen","title":"NearBindgen","description":"The @NearBindgen({}) decorator is used on the contract class to generate the necessary code to be a valid NEAR contract and expose the intended functions to be able to be called externally.","sidebar":"tools"},"sdk/js/contract-structure/nesting":{"id":"sdk/js/contract-structure/nesting","title":"Nesting","description":""},"sdk/js/cross-contract/callbacks":{"id":"sdk/js/cross-contract/callbacks","title":"Callbacks","description":"NEAR Protocol is a sharded, proof-of-stake blockchain that behaves differently than proof-of-work blockchains. When interacting with a native Rust (compiled to Wasm) smart contract, cross-contract calls are asynchronous. Callbacks are used to either get the result of a cross-contract call or tell if a cross-contract call has succeeded or failed.","sidebar":"tools"},"sdk/js/get-started":{"id":"sdk/js/get-started","title":"Getting Started","description":"You can develop smart contracts on Windows using Windows Subsystem for Linux (WSL2).","sidebar":"tools"},"sdk/js/introduction":{"id":"sdk/js/introduction","title":"About JS SDK","description":"JavaScript is the most popular programming language, used by nearly 14 million developers worldwide. You can write smart-contracts in JavaScript or Typescript, and our SDK will pack them with a lightweight runtime. This can then be compiled into a single Wasm file that can be deployed into the NEAR network.","sidebar":"tools"},"sdk/js/promises/create-account":{"id":"sdk/js/promises/create-account","title":"Creating Accounts","description":"You might want to create an account from a contract for many reasons. One example:","sidebar":"tools"},"sdk/js/promises/deploy-contract":{"id":"sdk/js/promises/deploy-contract","title":"Deploying Contracts","description":"You might want your smart contract to deploy subsequent smart contract code for a few reasons:","sidebar":"tools"},"sdk/js/promises/intro":{"id":"sdk/js/promises/intro","title":"Introduction","description":"Transactions can be sent asynchronously from a contract through a Promise. Like Promises in many programming languages, these will cause code to be executed in the future. In the case of NEAR, this \\"in the future\\" means a transaction to be executed in the next block_ (or thereabouts), rather than in the same block as the original function call.","sidebar":"tools"},"sdk/js/promises/token-tx":{"id":"sdk/js/promises/token-tx","title":"Sending Native Tokens","description":"You might want to send tokens from a contract for many reasons.","sidebar":"tools"},"sdk/js/testing/integration-tests":{"id":"sdk/js/testing/integration-tests","title":"Integration Tests","description":"We place integration tests in JS in a separate directory at the same level as /src, called /integration-tests (read more), placing this folder within a /tests folder at root-level that contains the unit tests folder would also be plausible. Refer to this folder structure below:","sidebar":"tools"},"sdk/js/testing/unit-tests":{"id":"sdk/js/testing/unit-tests","title":"Unit Tests","description":"You can unit test abstracted logic implemented by smart contract functions like regular JavaScript functions with any testing library of your liking. A simple example would look as follows:","sidebar":"tools"},"sdk/rust/best-practices":{"id":"sdk/rust/best-practices","title":"Best Practices","description":"Enable overflow checks","sidebar":"tools"},"sdk/rust/building/basics":{"id":"sdk/rust/building/basics","title":"Basic Instructions","description":"To compile release version of the smart contract you can run:","sidebar":"tools"},"sdk/rust/building/post-processing":{"id":"sdk/rust/building/post-processing","title":"Post Processing Tools","description":"The size of the contract is a critical characteristic. The best way to keep it small is a well-designed minimalistic code with a reduced number of dependencies. It is especially important for large contracts and huge multi-contract dApps that can take a fortune to deploy.","sidebar":"tools"},"sdk/rust/building/prototyping":{"id":"sdk/rust/building/prototyping","title":"Upgrading Contracts: Rapid Prototyping","description":"When you change the interface of a contract and re-deploy it, you may see this error:","sidebar":"tools"},"sdk/rust/building/reproducible-builds":{"id":"sdk/rust/building/reproducible-builds","title":"Reproducible Builds","description":"Reproducible builds let different people build the same program and get the exact same outputs as one another. It helps users trust that deployed contracts are built correctly and correspond to the source code. To verify your contract user can build it themselves and check that the binaries are identical.","sidebar":"tools"},"sdk/rust/contract-interface/contract-mutability":{"id":"sdk/rust/contract-interface/contract-mutability","title":"Contract Mutability","description":"Contract state mutability is handled automatically based on how self is used in the function parameters. Depending on which is used, the #[near_bindgen] macro will generate the respective code to load/deserialize state for any function which uses self and serialize/store state only for when &mut self is used.","sidebar":"tools"},"sdk/rust/contract-interface/payable-methods":{"id":"sdk/rust/contract-interface/payable-methods","title":"Payable Methods","description":"We can allow methods to accept token transfer together with the function call. This is done so that contracts can define a fee in tokens that needs to be paid when they are used. By default the methods are not payable and they will panic if someone will attempt to transfer tokens to them during the invocation. This is done for safety reason, in case someone accidentally transfers tokens during the function call.","sidebar":"tools"},"sdk/rust/contract-interface/private-methods":{"id":"sdk/rust/contract-interface/private-methods","title":"Private Methods","description":"When using callbacks","sidebar":"tools"},"sdk/rust/contract-interface/public-methods":{"id":"sdk/rust/contract-interface/public-methods","title":"Public Method Types","description":"Methods can be called externally by using the pub identifier within the #[near_bindgen] macro which will expose the method in the compiled WASM bytecode.","sidebar":"tools"},"sdk/rust/contract-interface/serialization-interface":{"id":"sdk/rust/contract-interface/serialization-interface","title":"Serialization Protocols","description":"Serialization formats within the SDK define how data structures are translated into bytes which are needed for passing data into methods of the smart contract or storing data in state. For the case of method parameters, JSON (default) and Borsh are supported with the SDK and for storing data on-chain Borsh is used.","sidebar":"tools"},"sdk/rust/contract-size":{"id":"sdk/rust/contract-size","title":"Reducing Contract Size","description":"Advice & examples","sidebar":"tools"},"sdk/rust/contract-structure/collections":{"id":"sdk/rust/contract-structure/collections","title":"Collections","description":"When deciding on data structures to use for the data of the application, it is important to minimize the amount of data read and written to storage but also the amount of data serialized and deserialized to minimize the cost of transactions. It is important to understand the tradeoffs of data structures in your smart contract because it can become a bottleneck as the application scales and migrating the state to the new data structures will come at a cost.","sidebar":"tools"},"sdk/rust/contract-structure/near-bindgen":{"id":"sdk/rust/contract-structure/near-bindgen","title":"near_bindgen","description":"The #[near_bindgen] macro is used on a struct and the function implementations to generate the necessary code to be a valid NEAR contract and expose the intended functions to be able to be called externally.","sidebar":"tools"},"sdk/rust/contract-structure/nesting":{"id":"sdk/rust/contract-structure/nesting","title":"Collections Nesting","description":"Traditional approach for unique prefixes","sidebar":"tools"},"sdk/rust/cross-contract/callbacks":{"id":"sdk/rust/cross-contract/callbacks","title":"Callbacks","description":"NEAR Protocol is a sharded, proof-of-stake blockchain that behaves differently than proof-of-work blockchains. When interacting with a native Rust (compiled to Wasm) smart contract, cross-contract calls are asynchronous. Callbacks are used to either get the result of a cross-contract call or tell if a cross-contract call has succeeded or failed.","sidebar":"tools"},"sdk/rust/get-started":{"id":"sdk/rust/get-started","title":"Getting Started","description":"Install Rust and Wasm toolchain","sidebar":"tools"},"sdk/rust/introduction":{"id":"sdk/rust/introduction","title":"About Rust SDK","description":"Rust is a programming language designed for performance and safety. It is syntactically similar to C++, but can guarantee memory safety without resorting to garbage collection. Rust has proven to be a mature and secure language, which makes it ideal to write smart contracts. Because of this, Rust is the preferred programming language for writing smart contracts on NEAR. While there might be a learning curve for those coming from web development, learning Rust enables to write safer and faster contracts. Furthermore, core contracts such as Fungible Tokens and DAOs are currently only available in Rust.","sidebar":"tools"},"sdk/rust/promises/create-account":{"id":"sdk/rust/promises/create-account","title":"Creating Accounts","description":"You might want to create an account from a contract for many reasons. One example:","sidebar":"tools"},"sdk/rust/promises/deploy-contract":{"id":"sdk/rust/promises/deploy-contract","title":"Deploying Contracts","description":"You might want your smart contract to deploy subsequent smart contract code for a few reasons:","sidebar":"tools"},"sdk/rust/promises/intro":{"id":"sdk/rust/promises/intro","title":"Promises","description":"Transactions can be sent asynchronously from a contract through a Promise. Like Promises in many programming languages, these will cause code to be executed in the future. In the case of NEAR, this \\"in the future\\" means a transaction to be executed in the next block_ (or thereabouts), rather than in the same block as the original function call.","sidebar":"tools"},"sdk/rust/promises/token-tx":{"id":"sdk/rust/promises/token-tx","title":"Sending $NEAR","description":"You might want to send tokens from a contract for many reasons.","sidebar":"tools"},"sdk/rust/testing/integration-tests":{"id":"sdk/rust/testing/integration-tests","title":"Integration Tests","description":"Unit Tests vs. Integration Tests","sidebar":"tools"},"sdk/rust/testing/unit-tests":{"id":"sdk/rust/testing/unit-tests","title":"Unit Tests","description":"Testing contract functionality can be done through the cargo test framework. These tests will run with a mocked blockchain and will allow testing function calls directly without having to set up/deploy to a network and sign serialized transactions on this network.","sidebar":"tools"},"sdk/welcome":{"id":"sdk/welcome","title":"NEAR SDKs","description":"Explore our language-specific SDK documentation","sidebar":"tools"},"social/contract":{"id":"social/contract","title":"SocialDB","description":"SocialDB is a smart contract to store social data on NEAR protocol."},"social/intro":{"id":"social/intro","title":"NEAR Social","description":"Take whatever is useful from \\"past, present and future of social media\\""},"social/standards":{"id":"social/standards","title":"Standards","description":"The data in SocialDB is organized as a simple JSON tree."},"social/tech":{"id":"social/tech","title":"Technical Documentation","description":"This document goes into technical details of the Near Social."},"tools/explorer":{"id":"tools/explorer","title":"Explorer","description":"An Explorer allows you to quickly obtain information from the blockchain through a friendly user interface.","sidebar":"tools"},"tools/fastauth-sdk":{"id":"tools/fastauth-sdk","title":"FastAuth SDK","description":"FastAuth is a key management system that allows users to recover or sign-up for a NEAR account using their email address. Furthermore, it allows to subsidize gas for a certain smart contract, so users can interact with it without having to fund their account.","sidebar":"build"},"tools/indexer-for-explorer":{"id":"tools/indexer-for-explorer","title":"Indexer for Explorer (Deprecated)","description":"While developing a decentralized app you might want to query usage information for a contract such as:"},"tools/indexing":{"id":"tools/indexing","title":"Indexing Solutions on NEAR","description":"Here\'s a quick overview of Indexer projects on the NEAR ecosystem:","sidebar":"tools"},"tools/near-api-js/account":{"id":"tools/near-api-js/account","title":"Account","description":"You can interact with, create or delete NEAR accounts.","sidebar":"tools"},"tools/near-api-js/contract":{"id":"tools/near-api-js/contract","title":"Contract","description":"When you instantiate an instance of Contract you need to specify the names of the functions you have on your smart contract.","sidebar":"tools"},"tools/near-api-js/cookbook":{"id":"tools/near-api-js/cookbook","title":"Common Use Cases","description":"The repository contains many recipes that you can readily use to solve common case scenarios."},"tools/near-api-js/faq":{"id":"tools/near-api-js/faq","title":"FAQ for NEAR JavaScript API","description":"A collection of Frequently Asked Questions by the community.","sidebar":"tools"},"tools/near-api-js/quick-reference":{"id":"tools/near-api-js/quick-reference","title":"Using JavaScript API to interact with NEAR","description":"Quick Reference","sidebar":"tools"},"tools/near-api-js/utils":{"id":"tools/near-api-js/utils","title":"Utilities","description":"NEAR => yoctoNEAR","sidebar":"tools"},"tools/near-api-js/wallet":{"id":"tools/near-api-js/wallet","title":"Interacting with the Wallet","description":"Wallet interaction is possible only in the browser, because NEAR\'s Wallet is web-based.","sidebar":"tools"},"tools/near-cli":{"id":"tools/near-cli","title":"NEAR CLI","description":"The NEAR Command Line Interface (CLI) is a tool that enables to interact with the NEAR network directly from the shell. Among other things,","sidebar":"tools"},"tools/near-cli-rs":{"id":"tools/near-cli-rs","title":"NEAR CLI RS","description":"Quick Start Guide","sidebar":"tools"},"tools/near-lake":{"id":"tools/near-lake","title":"NEAR Lake Indexer","description":"NEAR Lake is an indexer built on top of NEAR Indexer Framework to watch the network and store all the events as JSON files on AWS S3.","sidebar":"build"},"tools/realtime":{"id":"tools/realtime","title":"Real-time Events (WebSocket)","description":"While developing a decentralized app you might want track specific events in real time. For example, you could want"},"tools/remix-ide-plugin":{"id":"tools/remix-ide-plugin","title":"Remix IDE Plugin Integration","description":"This tutorial details how to deploy and run NEAR smart contract on Remix IDE. It is a no-setup tool with a GUI for developing NEAR smart contract."},"tools/usecases":{"id":"tools/usecases","title":"Interacting with a Contract","description":"Here we enumerate case scenarios, and point to where the documentation is present."},"tools/wallet-selector":{"id":"tools/wallet-selector","title":"Wallet Selector","description":"An easy-to-navigate modal that allows users to select their preferred wallet to easily interact with the NEAR protocol.","sidebar":"tools"},"tools/welcome":{"id":"tools/welcome","title":"Tools","description":"Welcome! The NEAR ecosystem has a complete set of tools for you to make the most out of the NEAR network.","sidebar":"tools"},"tutorials/crosswords/basics/add-functions-call":{"id":"tutorials/crosswords/basics/add-functions-call","title":"Alter the smart contract, learning about basics of development","description":"This section will modify the smart contract skeleton from the previous section. This tutorial will start by writing a contract in a somewhat useless way in order to learn the basics. Once we\'ve got a solid understanding, we\'ll iterate until we have a crossword puzzle.","sidebar":"tutorials"},"tutorials/crosswords/basics/hashing-and-unit-tests":{"id":"tutorials/crosswords/basics/hashing-and-unit-tests","title":"Introduction to basic hashing and adding unit tests","description":"In the previous section, we stored the crossword solution as plain text as a String type on the smart contract. If we\'re trying to hide the solution from the users, this isn\'t a great approach as it\'ll be public to anyone looking at the state. Let\'s instead hash our crossword solution and store that instead. There are different ways to hash data, but let\'s use sha256 which is one of the hashing algorithms available in the Rust SDK.","sidebar":"tutorials"},"tutorials/crosswords/basics/overview":{"id":"tutorials/crosswords/basics/overview","title":"Basics overview laying out what will be accomplished in this first section.","description":"This first chapter of the crossword puzzle tutorial will introduce fundamental concepts to smart contract development in a beginner-friendly way. By the end of this chapter you\'ll have a proof-of-concept contract that can be interacted with via NEAR CLI and a simple frontend that uses the near-api-js library.","sidebar":"tutorials"},"tutorials/crosswords/basics/set-up-skeleton":{"id":"tutorials/crosswords/basics/set-up-skeleton","title":"Set up Rust, get a NEAR testnet account, NEAR CLI, and get a basic smart contract skeleton ready","description":"In this tutorial we\'ll get a testnet account, use NEAR CLI to add a key to our computer\'s file system, and set up the basic skeleton of a Rust smart contract.","sidebar":"tutorials"},"tutorials/crosswords/basics/simple-frontend":{"id":"tutorials/crosswords/basics/simple-frontend","title":"Add a simple frontend to the crossword puzzle that checks the solution\'s hash","description":"This will be the final section in this chapter, where we\'ll add a simple frontend using React and near-api-js to communicate with the smart contract.","sidebar":"tutorials"},"tutorials/crosswords/beginner/actions":{"id":"tutorials/crosswords/beginner/actions","title":"There are several Actions an account can do, including sending the winner of the crossword puzzle NEAR using the Transfer Action","description":"We\'re going to introduce a new Action: Transfer. In this chapter, we\'d like the first person to solve the crossword puzzle to earn some prize money, sent in NEAR.","sidebar":"tutorials"},"tutorials/crosswords/beginner/adding-a-puzzle":{"id":"tutorials/crosswords/beginner/adding-a-puzzle","title":"Adding a new puzzle now that we\'re using a collection that can contain multiple crossword puzzles","description":"We\'re going to make a new puzzle, which means we need to provide the smart contract with a set of clues and info about the answers.","sidebar":"tutorials"},"tutorials/crosswords/beginner/collections":{"id":"tutorials/crosswords/beginner/collections","title":"Store multiple crossword puzzles using a specialized collection in NEAR called a LookupMap","description":"As mentioned in the previous chapter, the online Rust Book is a great reference for folks getting started with Rust, but there are concepts that differ when we\'re dealing with the blockchain. One of these differences is the use of collections.","sidebar":"tutorials"},"tutorials/crosswords/beginner/logging-in":{"id":"tutorials/crosswords/beginner/logging-in","title":"Covering access keys and login","description":"Previously\u2026","sidebar":"tutorials"},"tutorials/crosswords/beginner/logging-in-implementation":{"id":"tutorials/crosswords/beginner/logging-in-implementation","title":"Implementing the login button","description":"Plan","sidebar":"tutorials"},"tutorials/crosswords/beginner/overview":{"id":"tutorials/crosswords/beginner/overview","title":"Highlights of some beginner topics covered.","description":"In the last chapter we installed Rust and got up and running with a simple smart contract. The contract has a few issues, however, and isn\'t as powerful as we\'d like it to be. For instance, we can only store one crossword puzzle in the smart contract, the frontend is  hardcoded, and we don\'t offer any incentives to the person who wins.","sidebar":"tutorials"},"tutorials/crosswords/beginner/structs-enums":{"id":"tutorials/crosswords/beginner/structs-enums","title":"How to think about structs and enums when writing a Rust smart contract on NEAR","description":"Overview","sidebar":"tutorials"},"tutorials/crosswords/intermediate/access-key-solution":{"id":"tutorials/crosswords/intermediate/access-key-solution","title":"Replacing the solution hash with an access key","description":"So far in this tutorial, the user sends the plaintext solution to the crossword puzzle smart contract, where it\'s hashed and compared with the known answer.","sidebar":"tutorials"},"tutorials/crosswords/intermediate/base64vecu8":{"id":"tutorials/crosswords/intermediate/base64vecu8","title":"Using base64-encoded arguments when we create a new crossword puzzle","description":"Let\'s modify our new_puzzle method a bit, and demonstrate how a smart contract author might use base64-encoded arguments.","sidebar":"tutorials"},"tutorials/crosswords/intermediate/cross-contract-calls":{"id":"tutorials/crosswords/intermediate/cross-contract-calls","title":"Adding cross-contract calls, access key shuffling, etc.","description":"To reiterate, we\'d like anyone to be able to participate in the crossword puzzle, even folks who don\'t have a NEAR account.","sidebar":"tutorials"},"tutorials/crosswords/intermediate/linkdrop":{"id":"tutorials/crosswords/intermediate/linkdrop","title":"Introducing the linkdrop contract we can use","description":"We\'re going to take a small detour to talk about the linkdrop smart contract.  It\'s best that we first understand this contract and its purpose, then discuss calling a method on this contract.","sidebar":"tutorials"},"tutorials/crosswords/intermediate/overview":{"id":"tutorials/crosswords/intermediate/overview","title":"Intermediate concepts (cross-contract calls and more)","description":"This chapter will go a bit faster than the previous ones.","sidebar":"tutorials"},"tutorials/crosswords/intermediate/use-seed-phrase":{"id":"tutorials/crosswords/intermediate/use-seed-phrase","title":"Implementing the seed phrase logic from the necessary libraries","description":"There are two separate things we\'ll want to do:","sidebar":"tutorials"},"tutorials/examples/advanced-xcc":{"id":"tutorials/examples/advanced-xcc","title":"Complex Cross Contract Call","description":"This example presents 3 instances of complex cross-contract calls. Particularly, it shows:","sidebar":"tutorials"},"tutorials/examples/blockvote-js":{"id":"tutorials/examples/blockvote-js","title":"BlockVote JS Edition","description":"BlockVote JS Edition is a blockchain-based voting application built using JavaScript on the Near Protocol blockchain. The application allows users to securely cast their votes in an election and have them recorded on the blockchain, ensuring that the results are transparent and cannot be altered."},"tutorials/examples/coin-flip":{"id":"tutorials/examples/coin-flip","title":"Coin Flip","description":"Coin Flip is a game where the player tries to guess the outcome of a coin flip. It is one of the simplest contracts implementing random numbers.","sidebar":"tutorials"},"tutorials/examples/count-near":{"id":"tutorials/examples/count-near","title":"Count on NEAR","description":"Our counter example is a friendly decentralized app that stores a number and exposes methods to increment,","sidebar":"tutorials"},"tutorials/examples/donation":{"id":"tutorials/examples/donation","title":"Donation","description":"Our donation example enables to forward NEAR Tokens to an account while keeping track of it. It is one of the simplest examples on making a contract handle tranfers.","sidebar":"tutorials"},"tutorials/examples/escrow":{"id":"tutorials/examples/escrow","title":"Escrow Contract","description":"This example provides a simple implementation of an escrow contract, with a timeout callable function that concludes the transaction if the buyer has not provided approval within a given timeframe."},"tutorials/examples/factory":{"id":"tutorials/examples/factory","title":"Factory","description":"A factory is a smart contract that stores a compiled contract on itself, and automatizes deploying it into","sidebar":"tutorials"},"tutorials/examples/frontend-multiple-contracts":{"id":"tutorials/examples/frontend-multiple-contracts","title":"Frontend Interacting with Multiple Contracts","description":"This example showcases how to interact with multiple contracts from a single frontend.","sidebar":"tutorials"},"tutorials/examples/guest-book":{"id":"tutorials/examples/guest-book","title":"Guest Book","description":"Our Guest Book example is a simple app composed by two main components:","sidebar":"tutorials"},"tutorials/examples/hello-near":{"id":"tutorials/examples/hello-near","title":"Hello NEAR","description":"Hello NEAR! is a friendly decentralized App that stores a greeting message. It is one of the simplest"},"tutorials/examples/update-contract-migrate-state":{"id":"tutorials/examples/update-contract-migrate-state","title":"Self Upgrade & State Migration","description":"Three examples on how to handle updates and state migration:","sidebar":"tutorials"},"tutorials/examples/xcc":{"id":"tutorials/examples/xcc","title":"Cross Contract Call","description":"This example performs the simplest cross-contract call possible: it calls our Hello NEAR example to set and retrieve a greeting.","sidebar":"tutorials"},"tutorials/fts/circulating-supply":{"id":"tutorials/fts/circulating-supply","title":"Creating a Circulating Supply","description":"In the previous tutorial, you looked at what a fungible token was and how you could define one in your smart contract. In this tutorial, you\'ll learn how to create a circulating supply belonging to the contract owner and view all the tokens, with their metadata, in the NEAR wallet.","sidebar":"tutorials"},"tutorials/fts/defining-a-token":{"id":"tutorials/fts/defining-a-token","title":"Defining a Fungible Token","description":"This is the first of many tutorials in a series where you\'ll be creating a complete FT smart contract from scratch that conforms with all the NEAR FT standards. Today you\'ll learn what a Fungible Token is and how you can define one on the NEAR blockchain. You will be modifying a bare-bones skeleton smart contract by filling in the necessary code snippets needed to add this functionality.","sidebar":"tutorials"},"tutorials/fts/introduction":{"id":"tutorials/fts/introduction","title":"Fungible Tokens Zero to Hero","description":"In this Zero to Hero series, you\'ll find a set of tutorials covering every aspect of a fungible token (FT) smart contract.","sidebar":"tutorials"},"tutorials/fts/marketplace":{"id":"tutorials/fts/marketplace","title":"Integrating FT Payments into an NFT Marketplace","description":"In this tutorial, you\'ll learn the basics of how an NFT marketplace contract works and how you can modify it to allow for purchasing NFTs using Fungible Tokens. In the previous tutorials, you went through and created a fully fledged FT contract that incorporates all the standards found in the FT standard.","sidebar":"tutorials"},"tutorials/fts/predeployed-contract":{"id":"tutorials/fts/predeployed-contract","title":"Pre-deployed Contract","description":"Learn how to easily receive fungible tokens without doing any software development by using a readily-available FT smart contract.","sidebar":"tutorials"},"tutorials/fts/registering-accounts":{"id":"tutorials/fts/registering-accounts","title":"Registering Accounts","description":"In the previous tutorial, you looked at how to mint an initial circulating supply of tokens and how you could log events as per the events standard. You then deployed the contract and saw the FTs in your wallet balance. In this tutorial, you\'ll learn about the storage management standard and how you can register accounts in your FT contract in order to prevent a malicious party from draining your contract of all its funds.","sidebar":"tutorials"},"tutorials/fts/simple-fts":{"id":"tutorials/fts/simple-fts","title":"Minting Fungible Tokens","description":"In this tutorial, you\'ll learn how to easily create your own Fungible Tokens (FT) without doing any software development by using a readily-available smart contract."},"tutorials/fts/skeleton":{"id":"tutorials/fts/skeleton","title":"Skeleton and Rust Architecture","description":"In this article, you\'ll learn about the basic architecture behind the FT contract that you\'ll develop while following this \\"Zero to Hero\\" series.","sidebar":"tutorials"},"tutorials/fts/transfers":{"id":"tutorials/fts/transfers","title":"Transferring Fungible Tokens","description":"In this tutorial, you\'ll learn how to implement the core standards into your smart contract. You\'ll implement the logic that allows you to transfer and receive tokens. If you\'re joining us for the first time, feel free to clone this repository and follow along in the 4.storage folder.","sidebar":"tutorials"},"tutorials/indexer/credentials":{"id":"tutorials/indexer/credentials","title":"Credentials","description":"Please, keep in mind, currently using the AWS Credentials is the only way to access the data provided by NEAR Lake ecosystem. But it is about to change with Pagoda DevConsole release. Stay tuned!","sidebar":"tutorials"},"tutorials/indexer/js-lake-indexer":{"id":"tutorials/indexer/js-lake-indexer","title":"NEAR Lake indexer basic tutorial","description":"near-examples/near-lake-raw-printer-js: source code for the tutorial on how to create an indexer that prints block height and number of shards","sidebar":"tutorials"},"tutorials/indexer/lake-start-options":{"id":"tutorials/indexer/lake-start-options","title":"Extending Lake indexer with start options","description":"The End","sidebar":"tutorials"},"tutorials/indexer/migrating-to-near-lake-framework":{"id":"tutorials/indexer/migrating-to-near-lake-framework","title":"Migrating to NEAR Lake Framework","description":"We encourage everyone who don\'t have a hard requirement to use NEAR Indexer Framework consider the migration to NEAR Lake Framework.","sidebar":"tutorials"},"tutorials/indexer/near-lake-state-changes-indexer":{"id":"tutorials/indexer/near-lake-state-changes-indexer","title":"NEAR Lake StateChanges indexer tutorial","description":"near-examples/near-lake-accounts-watcher: source code for a video tutorial on how to use the NEAR Lake Framework","sidebar":"tutorials"},"tutorials/indexer/nft-indexer":{"id":"tutorials/indexer/nft-indexer","title":"Building an NFT indexer","description":"near-examples/near-lake-nft-indexer: source code for this tutorial","sidebar":"tutorials"},"tutorials/indexer/python-lake-indexer":{"id":"tutorials/indexer/python-lake-indexer","title":"NEAR Lake indexer basic tutorial","description":"frolvanya/near-lake-raw-printer: source code for the tutorial on how to create an indexer that prints block height and number of shards","sidebar":"tutorials"},"tutorials/indexer/python-nft-indexer":{"id":"tutorials/indexer/python-nft-indexer","title":"Building an NFT indexer for Python","description":"frolvanya/near-lake-nft-indexer: source code for this tutorial","sidebar":"tutorials"},"tutorials/indexer/run-lake-indexer":{"id":"tutorials/indexer/run-lake-indexer","title":"Running NEAR Lake Indexer","description":"NEAR Lake is a blockchain indexer built on top of NEAR Indexer microframework","sidebar":"tutorials"},"tutorials/nfts/approvals":{"id":"tutorials/nfts/approvals","title":"Approvals","description":"In this tutorial you\'ll learn the basics of an approval management system which will allow you to grant others access to transfer NFTs on your behalf. This is the backbone of all NFT marketplaces and allows for some complex yet beautiful scenarios to happen. If you\'re joining us for the first time, feel free to clone this repository and checkout the 4.core branch to follow along.","sidebar":"tutorials"},"tutorials/nfts/core":{"id":"tutorials/nfts/core","title":"Core","description":"In this tutorial you\'ll learn how to implement the core standards into your smart contract. If you\'re joining us for the first time, feel free to clone this repo and checkout the 3.enumeration branch to follow along.","sidebar":"tutorials"},"tutorials/nfts/enumeration":{"id":"tutorials/nfts/enumeration","title":"Enumeration","description":"In the previous tutorials, you looked at ways to integrate the minting functionality into a skeleton smart contract. In order to get your NFTs to show in the wallet, you also had to deploy a patch fix that implemented one of the enumeration methods. In this tutorial, you\'ll expand on and finish the rest of the enumeration methods as per the standard","sidebar":"tutorials"},"tutorials/nfts/events":{"id":"tutorials/nfts/events","title":"Events","description":"In this tutorial, you\'ll learn about the events standard and how to implement it in your smart contract.","sidebar":"tutorials"},"tutorials/nfts/introduction":{"id":"tutorials/nfts/introduction","title":"NFT Zero to Hero","description":"In this Zero to Hero series, you\'ll find a set of tutorials that will cover every aspect of a non-fungible token (NFT) smart contract.","sidebar":"tutorials"},"tutorials/nfts/js/approvals":{"id":"tutorials/nfts/js/approvals","title":"Approvals","description":"In this tutorial you\'ll learn the basics of an approval management system which will allow you to grant others access to transfer NFTs on your behalf. This is the backbone of all NFT marketplaces and allows for some complex yet beautiful scenarios to happen. If you\'re joining us for the first time, feel free to clone this repository and checkout the 4.core branch to follow along.","sidebar":"tutorials"},"tutorials/nfts/js/core":{"id":"tutorials/nfts/js/core","title":"Core","description":"In this tutorial you\'ll learn how to implement the core standards into your smart contract. If you\'re joining us for the first time, feel free to clone this repo and checkout the 3.enumeration branch to follow along.","sidebar":"tutorials"},"tutorials/nfts/js/enumeration":{"id":"tutorials/nfts/js/enumeration","title":"Enumeration","description":"In the previous tutorials, you looked at ways to integrate the minting functionality into a skeleton smart contract. In order to get your NFTs to show in the wallet, you also had to deploy a patch fix that implemented one of the enumeration methods. In this tutorial, you\'ll expand on and finish the rest of the enumeration methods as per the standard","sidebar":"tutorials"},"tutorials/nfts/js/events":{"id":"tutorials/nfts/js/events","title":"Events","description":"In this tutorial, you\'ll learn about the events standard and how to implement it in your smart contract.","sidebar":"tutorials"},"tutorials/nfts/js/introduction":{"id":"tutorials/nfts/js/introduction","title":"NFT Zero to Hero JavaScript Edition","description":"In this Zero to Hero series, you\'ll find a set of tutorials that will cover every aspect of a non-fungible token (NFT) smart contract.","sidebar":"tutorials"},"tutorials/nfts/js/marketplace":{"id":"tutorials/nfts/js/marketplace","title":"Marketplace","description":"In this tutorial, you\'ll learn the basics of an NFT marketplace contract where you can buy and sell non-fungible tokens for $NEAR. In the previous tutorials, you went through and created a fully fledged NFT contract that incorporates all the standards found in the NFT standard.","sidebar":"tutorials"},"tutorials/nfts/js/minting":{"id":"tutorials/nfts/js/minting","title":"Minting","description":"This is the first of many tutorials in a series where you\'ll be creating a complete NFT smart contract from scratch that conforms with all the NEAR NFT standards. Today you\'ll learn how to create the logic needed to mint NFTs and have them show up in your NEAR wallet. You will be modifying a bare-bones skeleton smart contract by filling in the necessary code snippets needed to add minting functionalities.","sidebar":"tutorials"},"tutorials/nfts/js/predeployed-contract":{"id":"tutorials/nfts/js/predeployed-contract","title":"Pre-deployed Contract","description":"Learn how to easily create your own non-fungible tokens without doing any software development by using a readily-available NFT smart contract.","sidebar":"tutorials"},"tutorials/nfts/js/royalty":{"id":"tutorials/nfts/js/royalty","title":"Royalty","description":"In this tutorial you\'ll continue building your non-fungible token (NFT) smart contract, and learn how to implement perpetual royalties into your NFTs. This will allow people to get a percentage of the purchase price when an NFT is sold.","sidebar":"tutorials"},"tutorials/nfts/js/skeleton":{"id":"tutorials/nfts/js/skeleton","title":"Skeleton and JavaScript Architecture","description":"In this article, you\'ll learn about the basic architecture behind the NFT contract that you\'ll develop while following this \\"Zero to Hero\\" series.","sidebar":"tutorials"},"tutorials/nfts/js/upgrade-contract":{"id":"tutorials/nfts/js/upgrade-contract","title":"Upgrading the Contract","description":"In this tutorial, you\'ll build off the work you previously did to implement the minting functionality on a skeleton smart contract. You got to the point where NFTs could be minted, however, the wallet had no way of displaying the tokens since your contract didn\'t implement the method that the wallet was trying to call.","sidebar":"tutorials"},"tutorials/nfts/marketplace":{"id":"tutorials/nfts/marketplace","title":"Marketplace","description":"In this tutorial, you\'ll learn the basics of an NFT marketplace contract where you can buy and sell non-fungible tokens for $NEAR. In the previous tutorials, you went through and created a fully fledged NFT contract that incorporates all the standards found in the NFT standard.","sidebar":"tutorials"},"tutorials/nfts/minecraft-nfts":{"id":"tutorials/nfts/minecraft-nfts","title":"Create NFTs in Minecraft","description":"In this tutorial you\'ll learn how to take your custom Minecraft creations and mint the schematics into NFTs on the NEAR blockchain!","sidebar":"tutorials"},"tutorials/nfts/minting":{"id":"tutorials/nfts/minting","title":"Minting","description":"This is the first of many tutorials in a series where you\'ll be creating a complete NFT smart contract from scratch that conforms with all the NEAR NFT standards. Today you\'ll learn how to create the logic needed to mint NFTs and have them show up in your NEAR wallet. You will be modifying a bare-bones skeleton smart contract by filling in the necessary code snippets needed to add minting functionalities.","sidebar":"tutorials"},"tutorials/nfts/minting-nft-frontend":{"id":"tutorials/nfts/minting-nft-frontend","title":"Minting NFT Front-end","description":"In this tutorial you\'ll learn how to create a simple NFT front-end and mint a \\"Go Team\\" NFT on the NEAR blockchain straight from your web browser.","sidebar":"tutorials"},"tutorials/nfts/minting-nfts":{"id":"tutorials/nfts/minting-nfts","title":"Minting NFTs","description":"In this tutorial you\'ll learn how to easily create your own NFTs without doing any software development by using a readily-available smart contract and a decentralized storage solution like IPFS.","sidebar":"tutorials"},"tutorials/nfts/predeployed-contract":{"id":"tutorials/nfts/predeployed-contract","title":"Pre-deployed Contract","description":"Learn how to easily create your own non-fungible tokens without doing any software development by using a readily-available NFT smart contract.","sidebar":"tutorials"},"tutorials/nfts/royalty":{"id":"tutorials/nfts/royalty","title":"Royalty","description":"In this tutorial you\'ll continue building your non-fungible token (NFT) smart contract, and learn how to implement perpetual royalties into your NFTs. This will allow people to get a percentage of the purchase price when an NFT is sold.","sidebar":"tutorials"},"tutorials/nfts/series":{"id":"tutorials/nfts/series","title":"Customizing the NFT Contract","description":"In this tutorial, you\'ll learn how to take the existing NFT contract you\'ve been working with and modify it to meet some of the most common needs in the ecosystem. This includes:","sidebar":"tutorials"},"tutorials/nfts/skeleton":{"id":"tutorials/nfts/skeleton","title":"Skeleton and Rust Architecture","description":"In this article, you\'ll learn about the basic architecture behind the NFT contract that you\'ll develop while following this \\"Zero to Hero\\" series.","sidebar":"tutorials"},"tutorials/nfts/upgrade-contract":{"id":"tutorials/nfts/upgrade-contract","title":"Upgrading the Contract","description":"In this tutorial, you\'ll build off the work you previously did to implement the minting functionality on a skeleton smart contract. You got to the point where NFTs could be minted and the wallet correctly picked up on the fact that you owned an NFT. However, it had no way of displaying the tokens since your contract didn\'t implement the method that the wallet was trying to call.","sidebar":"tutorials"},"tutorials/welcome":{"id":"tutorials/welcome","title":"Examples & Tutorials","description":"Explore our collection of Examples and Tutorials","sidebar":"tutorials"},"welcome":{"id":"welcome","title":"NEAR - Your Gateway to an Open Web","description":"Welcome, this is the starting point for all NEAR documentation. Learn to build and publish blockchain applications. Embrace the power of Web3."}}}')}}]);