"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[212],{57145:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>l,metadata:()=>c,toc:()=>o});var s=n(85893),r=n(11151);const l={id:"data-storage",title:"Data Storage / Collections",sidebar_label:"Storage on NEAR"},i=void 0,c={id:"concepts/storage/data-storage",title:"Data Storage / Collections",description:"All data stored on the NEAR blockchain is done in key / value pairs. There are several collection methods in the SDKs we've created that will help you store your data on chain.",source:"@site/i18n/zh-CN/docusaurus-plugin-content-docs/current/1.concepts/storage/data-collections.md",sourceDirName:"1.concepts/storage",slug:"/concepts/storage/data-storage",permalink:"/zh-CN/concepts/storage/data-storage",draft:!1,unlisted:!1,editUrl:"https://github.com/near/docs/edit/master/website/../docs/1.concepts/storage/data-collections.md",tags:[],version:"current",lastUpdatedBy:"Github Actions",lastUpdatedAt:1711465748e3,frontMatter:{id:"data-storage",title:"Data Storage / Collections",sidebar_label:"Storage on NEAR"},sidebar:"concepts",previous:{title:"Avoiding Token Loss",permalink:"/zh-CN/concepts/basics/token-loss"},next:{title:"Storage Staking",permalink:"/zh-CN/concepts/storage/storage-staking"}},d={},o=[{value:"Rust Collection Types",id:"rust-collection-types",level:2},{value:"Big-O Notation",id:"big-o-notation-1",level:3},{value:"Gas Consumption Examples",id:"gas-consumption-examples-1",level:3},{value:"<code>Vector</code>",id:"vector",level:3},{value:"<code>LookupSet</code>",id:"lookupset",level:3},{value:"<code>UnorderedSet</code>",id:"unorderedset",level:3},{value:"<code>LookupMap</code>",id:"lookupmap",level:3},{value:"<code>UnorderedMap</code>",id:"unorderedmap",level:3},{value:"<code>TreeMap</code>",id:"treemap",level:3},{value:"Storage Constraints on NEAR",id:"storage-constraints-on-near",level:2}];function a(e){const t={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"All data stored on the NEAR blockchain is done in key / value pairs. There are several collection methods in the SDKs we've created that will help you store your data on chain."}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"https://github.com/near/near-sdk-rs",children:(0,s.jsx)(t.code,{children:"near-sdk-rs"})})," for ",(0,s.jsx)(t.a,{href:"https://www.rust-lang.org/",children:"Rust"})," smart contracts"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"https://github.com/near/near-sdk-js",children:(0,s.jsx)(t.code,{children:"near-sdk-js"})})," for ",(0,s.jsx)(t.a,{href:"https://www.javascript.com/",children:"JavaScript"})," smart contracts"]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["For information on storage costs, please see [ ",(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.a,{href:"/concepts/storage/storage-staking",children:"storage staking"})})," ]."]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h2,{id:"rust-collection-types",children:"Rust Collection Types"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsxs)(t.a,{href:"https://docs.rs/near-sdk/latest/near_sdk/collections/",children:[(0,s.jsx)(t.code,{children:"near-sdk-rs"})," module documentation"]})}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Iterable"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Clear All Values"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Preserves Insertion Order"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Range Selection"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/concepts/storage/data-storage#vector",children:(0,s.jsx)(t.code,{children:"Vector"})})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/concepts/storage/data-storage#lookupset",children:(0,s.jsx)(t.code,{children:"LookupSet"})})}),(0,s.jsx)(t.td,{style:{textAlign:"center"}}),(0,s.jsx)(t.td,{style:{textAlign:"center"}}),(0,s.jsx)(t.td,{style:{textAlign:"center"}}),(0,s.jsx)(t.td,{style:{textAlign:"center"}})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/concepts/storage/data-storage#unorderedset",children:(0,s.jsx)(t.code,{children:"UnorderedSet"})})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"}}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/concepts/storage/data-storage#lookupmap",children:(0,s.jsx)(t.code,{children:"LookupMap"})})}),(0,s.jsx)(t.td,{style:{textAlign:"center"}}),(0,s.jsx)(t.td,{style:{textAlign:"center"}}),(0,s.jsx)(t.td,{style:{textAlign:"center"}}),(0,s.jsx)(t.td,{style:{textAlign:"center"}})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/concepts/storage/data-storage#unorderedmap",children:(0,s.jsx)(t.code,{children:"UnorderedMap"})})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"}}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/concepts/storage/data-storage#treemap",children:(0,s.jsx)(t.code,{children:"TreeMap"})})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"}}),(0,s.jsx)(t.td,{style:{textAlign:"center"}})]})]})]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h3,{id:"big-o-notation-1",children:"Big-O Notation"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Big_O_notation",children:"Big-O notation"})," values in the chart below describe the ",(0,s.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Time_complexity",children:"time complexity"})," of the various collection methods found in ",(0,s.jsx)(t.code,{children:"near-sdk-rs"}),". These method complexities correlate with ",(0,s.jsx)(t.a,{href:"/concepts/protocol/gas",children:"gas"})," consumption on NEAR, helping you decide which collection to utilize in your project. There are three types found in our collection methods:"]}),"\n"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["O(1) - ",(0,s.jsx)(t.em,{children:(0,s.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Time_complexity#Constant_time",children:"constant"})})]}),"\n",(0,s.jsxs)(t.li,{children:["O(n) - ",(0,s.jsx)(t.em,{children:(0,s.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Time_complexity#Linear_time",children:"linear"})})]}),"\n",(0,s.jsxs)(t.li,{children:["O(log n) - ",(0,s.jsx)(t.em,{children:(0,s.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Time_complexity#Logarithmic_time",children:"logarithmic"})})]}),"\n"]}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Access"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Insert"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Delete"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Search"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Traverse"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Clear"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/concepts/storage/data-storage#vector",children:(0,s.jsx)(t.code,{children:"Vector"})})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"O(1)"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"O(1)*"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"O(1)**"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"O(n)"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"O(n)"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"O(n)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/concepts/storage/data-storage#lookupset",children:(0,s.jsx)(t.code,{children:"LookupSet"})})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"O(1)"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"O(1)"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"O(1)"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"O(1)"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"N/A"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"N/A"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/concepts/storage/data-storage#unorderedset",children:(0,s.jsx)(t.code,{children:"UnorderedSet"})})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"O(1)"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"O(1)"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"O(1)"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"O(1)"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"O(n)"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"O(n)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/concepts/storage/data-storage#lookupmap",children:(0,s.jsx)(t.code,{children:"LookupMap"})})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"O(1)"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"O(1)"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"O(1)"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"O(1)"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"N/A"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"N/A"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/concepts/storage/data-storage#unorderedmap",children:(0,s.jsx)(t.code,{children:"UnorderedMap"})})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"O(1)"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"O(1)"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"O(1)"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"O(1)"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"O(n)"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"O(n)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/concepts/storage/data-storage#treemap",children:(0,s.jsx)(t.code,{children:"TreeMap"})})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"O(1)"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"O(log n)"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"O(log n)"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"O(log n)"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"O(n)"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"O(n)"})]})]})]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsxs)(t.em,{children:["* - to insert at the end of the vector using ",(0,s.jsx)(t.code,{children:"push_back"})," (or ",(0,s.jsx)(t.code,{children:"push_front"})," for deque)"]})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsxs)(t.em,{children:["** - to delete from the end of the vector using ",(0,s.jsx)(t.code,{children:"pop"})," (or ",(0,s.jsx)(t.code,{children:"pop_front"})," for deque), or delete using ",(0,s.jsx)(t.code,{children:"swap_remove"})," which swaps the element with the last element of the vector and then removes it."]})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h3,{id:"gas-consumption-examples-1",children:"Gas Consumption Examples"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsx)(t.p,{children:"The examples below show differences in gas burnt storing and retrieving key/value pairs using the above methods. Please note that the gas cost of spinning up the runtime environment on chain has been deducted to show just data read/writes."}),"\n",(0,s.jsxs)(t.p,{children:["You can reproduce this and test out your own data set by visiting ",(0,s.jsx)(t.a,{href:"https://github.com/near-examples/collection-examples-rs",children:"collection-examples-rs"}),"."]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"Rust Set Data Gas Chart",src:n(38621).Z+"",width:"1901",height:"747"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"Rust Get Data Gas Chart",src:n(47857).Z+"",width:"1911",height:"762"})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h3,{id:"vector",children:(0,s.jsx)(t.code,{children:"Vector"})}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:["Implements a ",(0,s.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Array_data_structure",children:"vector"})," / persistent array."]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"can iterate using index"}),"\n",(0,s.jsx)(t.li,{children:"Uses the following map: index -> element."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["[ ",(0,s.jsx)(t.a,{href:"https://github.com/near/near-sdk-rs/blob/master/near-sdk/src/collections/vector.rs",children:"SDK source"})," ]"]}),"\n",(0,s.jsxs)(t.p,{children:["[ ",(0,s.jsx)(t.a,{href:"https://docs.rs/near-sdk/latest/near_sdk/collections/vector/struct.Vector.html",children:"Implementation"})," ]"]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h3,{id:"lookupset",children:(0,s.jsx)(t.code,{children:"LookupSet"})}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:["Implements a persistent set ",(0,s.jsx)(t.em,{children:"without"})," iterators."]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"can not iterate over keys"}),"\n",(0,s.jsx)(t.li,{children:"more efficient in reads / writes"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["[ ",(0,s.jsx)(t.a,{href:"https://github.com/near/near-sdk-rs/blob/master/near-sdk/src/collections/lookup_set.rs",children:"SDK source"})," ]"]}),"\n",(0,s.jsxs)(t.p,{children:["[ ",(0,s.jsx)(t.a,{href:"https://docs.rs/near-sdk/latest/near_sdk/collections/struct.LookupSet.html",children:"Implementation"})," ]"]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h3,{id:"unorderedset",children:(0,s.jsx)(t.code,{children:"UnorderedSet"})}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:["Implements a persistent set ",(0,s.jsx)(t.em,{children:"with"})," iterators for keys, values, and entries."]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["[ ",(0,s.jsx)(t.a,{href:"https://github.com/near/near-sdk-rs/blob/master/near-sdk/src/collections/unordered_set.rs",children:"SDK source"})," ]"]}),"\n",(0,s.jsxs)(t.p,{children:["[ ",(0,s.jsx)(t.a,{href:"https://docs.rs/near-sdk/latest/near_sdk/collections/struct.UnorderedSet.html",children:"Implementation Docs"})," ]"]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h3,{id:"lookupmap",children:(0,s.jsx)(t.code,{children:"LookupMap"})}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsx)(t.p,{children:"Implements a persistent map."}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"can not iterate over keys"}),"\n",(0,s.jsx)(t.li,{children:"does not preserve order when removing and adding values"}),"\n",(0,s.jsx)(t.li,{children:"efficient in number of reads and writes"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"To add data:"}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-rust",children:"pub fn add_lookup_map(&mut self, key: String, value: String) {\n    self.lookup_map.insert(&key, &value);\n}\n"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"To get data:"}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-rust",children:'pub fn get_lookup_map(&self, key: String) -> String {\n    match self.lookup_map.get(&key) {\n        Some(value) => {\n            let log_message = format!("Value from LookupMap is {:?}", value.clone());\n            env::log(log_message.as_bytes());\n            value\n        },\n        None => "not found".to_string()\n    }\n}\n'})}),"\n",(0,s.jsxs)(t.p,{children:["[ ",(0,s.jsx)(t.a,{href:"https://github.com/near/near-sdk-rs/blob/master/near-sdk/src/collections/lookup_map.rs",children:"SDK source"})," ]"]}),"\n",(0,s.jsxs)(t.p,{children:["[ ",(0,s.jsx)(t.a,{href:"https://docs.rs/near-sdk/latest/near_sdk/collections/struct.LookupMap.html",children:"Implementation"})," ]"]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h3,{id:"unorderedmap",children:(0,s.jsx)(t.code,{children:"UnorderedMap"})}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsx)(t.p,{children:"Implements an unordered map."}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"iterable"}),"\n",(0,s.jsx)(t.li,{children:"does not preserve order when removing and adding values"}),"\n",(0,s.jsx)(t.li,{children:"is able to clear all values"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"To add data:"}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-rust",children:"pub fn add_unordered_map(&mut self, key: String, value: String) {\n    self.unordered_map.insert(&key, &value);\n}\n"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"To get data:"}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-rust",children:'pub fn get_unordered_map(&self, key: String) -> String {\n    match self.unordered_map.get(&key) {\n        Some(value) => {\n            let log_message = format!("Value from UnorderedMap is {:?}", value.clone());\n            env::log(log_message.as_bytes());\n            value\n        },\n        // None => "Didn\'t find that key.".to_string()\n        None => "not found".to_string()\n    }\n}\n'})}),"\n",(0,s.jsxs)(t.p,{children:["[ ",(0,s.jsx)(t.a,{href:"https://github.com/near/near-sdk-rs/tree/master/near-sdk/src/collections/unordered_map",children:"SDK source"})," ]"]}),"\n",(0,s.jsxs)(t.p,{children:["[ ",(0,s.jsx)(t.a,{href:"https://docs.rs/near-sdk/latest/near_sdk/collections/unordered_map/struct.UnorderedMap.html",children:"Implementation"})," ]"]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h3,{id:"treemap",children:(0,s.jsx)(t.code,{children:"TreeMap"})}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:["Implements a Tree Map based on ",(0,s.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/AVL_tree",children:"AVL-tree"}),"."]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"iterable"}),"\n",(0,s.jsx)(t.li,{children:"preserves order"}),"\n",(0,s.jsx)(t.li,{children:"able to clear all values"}),"\n",(0,s.jsx)(t.li,{children:"self balancing"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"To add data:"}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-rust",children:"pub fn add_tree_map(&mut self, key: String, value: String) {\n    self.tree_map.insert(&key, &value);\n}\n"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"To get data:"}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-rust",children:'pub fn get_tree_map(&self, key: String) -> String {\n    match self.tree_map.get(&key) {\n        Some(value) => {\n            let log_message = format!("Value from TreeMap is {:?}", value.clone());\n            env::log(log_message.as_bytes());\n            // Since we found it, return it (note implicit return)\n            value\n        },\n        // did not find the entry\n        // note: curly brackets after arrow are optional in simple cases, like other languages\n        None => "not found".to_string()\n    }\n}\n'})}),"\n",(0,s.jsxs)(t.p,{children:["[ ",(0,s.jsx)(t.a,{href:"https://github.com/near/near-sdk-rs/blob/master/near-sdk/src/collections/tree_map.rs",children:"SDK source"})," ]"]}),"\n",(0,s.jsxs)(t.p,{children:["[ ",(0,s.jsx)(t.a,{href:"https://docs.rs/near-sdk/latest/near_sdk/collections/struct.TreeMap.html",children:"Implementation"})," ]"]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h2,{id:"storage-constraints-on-near",children:"Storage Constraints on NEAR"}),"\n",(0,s.jsx)(t.p,{children:"For storing data on-chain it\u2019s important to keep in mind the following:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Can add up in storage staking costs"}),"\n",(0,s.jsx)(t.li,{children:"There is a 4mb limit on how much you can upload at once"}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Let\u2019s say for example, someone wants to put an NFT purely on-chain (rather than IPFS or some other decentralized storage solution) you\u2019ll have almost an unlimited amount of storage but will have to pay 1 $NEAR per 100kb of storage used (see Storage Staking)."}),"\n",(0,s.jsx)(t.p,{children:"Users will be limited to 4MB per contract call upload due to MAX_GAS constraints. The maximum amount of gas one can attach to a given functionCall is 300TGas."})]})}function h(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},47857:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/rust-getData-gasBurnt-0ccc453173ad23be8abb0463b574ea3d.png"},38621:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/rust-setData-gasBurnt-309a1615483af8a465b806aacdb3c840.png"},11151:(e,t,n)=>{n.d(t,{Z:()=>c,a:()=>i});var s=n(67294);const r={},l=s.createContext(r);function i(e){const t=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(l.Provider,{value:t},e.children)}}}]);