"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6888],{50480:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>a,contentTitle:()=>i,default:()=>p,frontMatter:()=>c,metadata:()=>s,toc:()=>d});var o=t(85893),r=t(11151);const c={},i=void 0,s={id:"primitives/linkdrop/bos/create-function-call-drop",title:"create-function-call-drop",description:"",source:"@site/i18n/ko/docusaurus-plugin-content-docs/current/7.primitives/linkdrop/bos/create-function-call-drop.md",sourceDirName:"7.primitives/linkdrop/bos",slug:"/primitives/linkdrop/bos/create-function-call-drop",permalink:"/ko/primitives/linkdrop/bos/create-function-call-drop",draft:!1,unlisted:!1,editUrl:"https://github.com/near/docs/edit/master/website/../docs/7.primitives/linkdrop/bos/create-function-call-drop.md",tags:[],version:"current",frontMatter:{}},a={},d=[];function l(n){const e={code:"code",pre:"pre",...(0,r.a)(),...n.components};return(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-js",children:'const accountId = context.accountId ?? props.accountId;\nconst keypomContract = "v2.keypom.near";\nconst nftContract = "nft.primitives.near";\nconst nftTokenId = "1";\nconst dropAmount = "10000000000000000000000";\n\nNear.call([\n  {\n    contractName: keypomContract,\n    methodName: "create_drop",\n    args: {\n      public_keys: state.publicKeys,\n      deposit_per_use: dropAmount,\n      fcData: {\n        // 2D array of function calls. In this case, there is 1 function call to make for a key use\n        // By default, if only one array of methods is present, this array of function calls will be used for all key uses\n        methods: [\n          // Array of functions for Key use 1. \n            [{\n              receiverId: nftContract,\n              methodName: "nft_mint",\n              args: JSON.stringify({\n              // Change this token_id if it already exists -> check explorer transaction\n                  token_id: nftTokenId,\n                  metadata: {\n                    title: "My NFT drop",\n                    description: "",\n                    media: "",\n                  }\n              }),\n              accountIdField: "receiver_id",\n              // Attached deposit for when the receiver makes this function call\n              attachedDeposit: "10000000000000000000000"\n            }]\n        ]\n      }\n    },\n    deposit: "23000000000000000000000", // state.publicKeys.length * dropAmount + 3000000000000000000000,\n    gas: "100000000000000",\n  },\n]);\n'})})}function p(n={}){const{wrapper:e}={...(0,r.a)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(l,{...n})}):l(n)}},11151:(n,e,t)=>{t.d(e,{Z:()=>s,a:()=>i});var o=t(67294);const r={},c=o.createContext(r);function i(n){const e=o.useContext(c);return o.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:i(n.components),o.createElement(c.Provider,{value:e},n.children)}}}]);