"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7118],{25102:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>c,toc:()=>h});var r=n(85893),s=n(11151),a=n(77229);const o=n.p+"assets/images/near-and-react--dakila.near--rodolf_dtbbx-1fc086945b950cbd1704332896807a9c.png",i={sidebar_position:5,sidebar_label:"Add simple frontend",title:"Add a simple frontend to the crossword puzzle that checks the solution's hash"},l="Add a simple frontend",c={id:"tutorials/crosswords/basics/simple-frontend",title:"Add a simple frontend to the crossword puzzle that checks the solution's hash",description:"This will be the final section in this chapter, where we'll add a simple frontend using React and near-api-js to communicate with the smart contract.",source:"@site/i18n/zh-CN/docusaurus-plugin-content-docs/current/3.tutorials/crosswords/01-basics/04-simple-frontend.md",sourceDirName:"3.tutorials/crosswords/01-basics",slug:"/tutorials/crosswords/basics/simple-frontend",permalink:"/zh-CN/tutorials/crosswords/basics/simple-frontend",draft:!1,unlisted:!1,editUrl:"https://github.com/near/docs/edit/master/website/../docs/3.tutorials/crosswords/01-basics/04-simple-frontend.md",tags:[],version:"current",lastUpdatedBy:"Github Actions",lastUpdatedAt:1705914809,formattedLastUpdatedAt:"2024\u5e741\u670822\u65e5",sidebarPosition:5,frontMatter:{sidebar_position:5,sidebar_label:"Add simple frontend",title:"Add a simple frontend to the crossword puzzle that checks the solution's hash"},sidebar:"tutorials",previous:{title:"Hash the solution, unit tests, and an init method",permalink:"/zh-CN/tutorials/crosswords/basics/hashing-and-unit-tests"},next:{title:"Overview",permalink:"/zh-CN/tutorials/crosswords/beginner/overview"}},d={},h=[{value:"Entry point",id:"entry-point",level:2},{value:"React app",id:"react-app",level:2},{value:"Utility functions",id:"utility-functions",level:2},{value:"Run the React app",id:"run-the-react-app",level:2}];function u(e){const t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"add-a-simple-frontend",children:"Add a simple frontend"}),"\n",(0,r.jsxs)(t.p,{children:["This will be the final section in this chapter, where we'll add a simple frontend using React and ",(0,r.jsx)(t.a,{href:"https://docs.near.org/tools/near-api-js/quick-reference",children:(0,r.jsx)(t.code,{children:"near-api-js"})})," to communicate with the smart contract."]}),"\n",(0,r.jsxs)("figure",{children:[(0,r.jsx)("img",{src:o,alt:"Two characters hanging out, NEAR and React. Art created by dakila.near",width:"600"}),(0,r.jsxs)("figcaption",{children:["Dynamic duo of NEAR as the backend and React as a frontend.",(0,r.jsx)("br",{}),"Art by ",(0,r.jsx)("a",{href:"https://twitter.com/rodolf_dtbbx",target:"_blank",children:"dakila.near"})]})]}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(t.p,{children:"There will be three main files we'll be working with:"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"src/index.js"})," will be the entry point, where NEAR network configuration will be set up, and the view-only call to ",(0,r.jsx)(t.code,{children:"get_solution"})," will happen."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"src/App.js"})," is then called and sets up the crossword table and checks to see if a solution has been found."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"src/utils.js"})," is used to make a view-only call to the blockchain to get the solution, and other helper functions."]}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"entry-point",children:"Entry point"}),"\n",(0,r.jsxs)(t.p,{children:["We'll go over a pattern that may look familiar to folks who have surveyed the ",(0,r.jsx)(t.a,{href:"https://github.com/near-examples",children:"NEAR examples site"}),". We'll start with an asynchronous JavaScript function that sets up desired logic, then pass that to the React app."]}),"\n",(0,r.jsx)(a.Ey,{language:"js",start:"3",end:"22",url:"https://github.com/near-examples/crossword-tutorial-chapter-1/blob/3e497b4815600b8382614f76c7812520710f704d/src/index.js"}),"\n",(0,r.jsx)(t.p,{children:"Let's talk through the code above, starting with the imports."}),"\n",(0,r.jsx)(t.p,{children:"We import from:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"config.js"})," which, at the moment, is a common pattern. This file contains details on the different networks. (Which RPC endpoint to hit, which NEAR Wallet site to redirect to, which NEAR Explorer as well\u2026)"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"utils.js"})," for that view-only function call that will call ",(0,r.jsx)(t.code,{children:"get_solution"})," to retrieve the correct solution hash when a person has completed the crossword puzzle correctly."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"hardcoded-data.js"})," is a file containing info on the crossword puzzle clues. This chapter has covered the crossword puzzle where the solution is ",(0,r.jsx)(t.strong,{children:"near nomicon ref finance"}),", and according to the chapter overview we've committed to serving ",(0,r.jsx)(t.em,{children:"one"})," puzzle. We'll improve our smart contract later, allowing for multiple crossword puzzles, but for now it's hardcoded here."]}),"\n"]}),"\n",(0,r.jsxs)(t.p,{children:["Next, we define an asynchronous function called ",(0,r.jsx)(t.code,{children:"initCrossword"})," that will be called before passing data to the React app. It's often useful to set up a connection with the blockchain here, but in our case all we need to do is retrieve the crossword puzzle solution as a hash. Note that we're attempting to pass this environment variable ",(0,r.jsx)(t.code,{children:"NEAR_ENV"})," into our configuration file. ",(0,r.jsx)(t.code,{children:"NEAR_ENV"})," is used to designate the blockchain network (testnet, betanet, mainnet) and is also ",(0,r.jsx)(t.a,{href:"https://docs.near.org/develop/deploy",children:"used in NEAR CLI"}),"."]}),"\n",(0,r.jsxs)(t.p,{children:["Lastly, we'll call ",(0,r.jsx)(t.code,{children:"initCrossword"})," and, when everything is complete, pass data to the React app contained in ",(0,r.jsx)(t.code,{children:"App.js"}),"."]}),"\n",(0,r.jsx)(t.h2,{id:"react-app",children:"React app"}),"\n",(0,r.jsxs)(t.p,{children:["Here's a large portion of the ",(0,r.jsx)(t.code,{children:"App.js"})," file, which will make use of a fork of a React crossword library by Jared Reisinger."]}),"\n",(0,r.jsx)(a.Ey,{language:"js",start:"3",end:"54",url:"https://github.com/near-examples/crossword-tutorial-chapter-1/blob/3e497b4815600b8382614f76c7812520710f704d/src/App.js"}),"\n",(0,r.jsx)(t.p,{children:"We'll discuss a few key points in the code above, but seeing as we're here to focus on a frontend connection to the blockchain, will brush over other parts that are library-specific."}),"\n",(0,r.jsx)(t.p,{children:"The two imports worth highlighting are:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"parseSolutionSeedPhrase"})," from the utility file we'll cover shortly. This will take the solution entered by the user and put it in the correct order according to the rules discussed in ",(0,r.jsx)(t.a,{href:"/zh-CN/tutorials/crosswords/basics/overview#how-it-works",children:"the chapter overview"}),"."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"sha256"})," will take the ordered solution from above and hash it. Then we'll compare that hash with the one retrieved from the smart contract."]}),"\n"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",children:"const [solutionFound, setSolutionFound] = useState(false);\n"})}),"\n",(0,r.jsxs)(t.p,{children:["We're using ",(0,r.jsx)(t.a,{href:"https://reactjs.org/docs/hooks-state.html",children:"React Hooks"})," here, setting up the variable ",(0,r.jsx)(t.code,{children:"solutionFound"})," that will be changed when the player of the crossword puzzle enters the final letter of the crossword puzzle, having entries for all the letters on the board."]}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"onCrosswordComplete"})," and ",(0,r.jsx)(t.code,{children:"checkSolution"})," blocks of code fire events to check the final solution entered by the user, hash it, and compare it to the ",(0,r.jsx)(t.code,{children:"solutionHash"})," that was passed in from the view-only call in ",(0,r.jsx)(t.code,{children:"index.js"})," earlier."]}),"\n",(0,r.jsxs)(t.p,{children:["Finally, we return the ",(0,r.jsx)(t.a,{href:"https://reactjs.org/docs/introducing-jsx.html",children:"JSX"})," for our app and render the crossword puzzle! In this basic case we'll change this heading to indicate when the user has completed the puzzle successfully:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-html",children:"<h3>Status: { solutionFound }</h3>\n"})}),"\n",(0,r.jsx)(t.h2,{id:"utility-functions",children:"Utility functions"}),"\n",(0,r.jsx)(t.p,{children:"We'll be using two utility functions here:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"parseSolutionSeedPhrase"})," which will take a completed crossword puzzle and place the answers in the proper order. (Ascending by number, across answers come before down ones.)"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"viewMethodOnContract"})," makes the view-only call to the smart contract to retrieve the solution hash."]}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"We'll only focus on the second method:"}),"\n",(0,r.jsx)(a.Ey,{language:"js",start:"8",end:"12",url:"https://github.com/near-examples/crossword-tutorial-chapter-1/blob/3e497b4815600b8382614f76c7812520710f704d/src/utils.js"}),"\n",(0,r.jsxs)(t.p,{children:["This API doesn't look warm and friendly yet. You caught us! We'd love some help to improve our API as ",(0,r.jsx)(t.a,{href:"https://github.com/near/near-api-js/issues/612",children:"detailed in this issue"}),", but for now, this is a concise way to get data from a view-only method."]}),"\n",(0,r.jsx)(t.p,{children:"We haven't had the frontend call a mutable method for our project yet. We'll get into that in the coming chapters when we'll want to have a prize sent to the first person to solve the puzzle."}),"\n",(0,r.jsx)(t.h2,{id:"run-the-react-app",children:"Run the React app"}),"\n",(0,r.jsxs)(t.p,{children:["Let's run our frontend on testnet! We won't add any new concepts at this point in the chapter, but note that the ",(0,r.jsx)(t.a,{href:"https://github.com/near-examples",children:"near examples"})," typically create an account for you automatically with a NodeJS command. We covered the important pattern of creating a subaccount and deploying the smart contract to it, so let's stick with that pattern as we start up our frontend."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"# Go into the directory containing the Rust smart contract we've been working on\ncd contract\n\n# Build (for Windows it's build.bat)\n./build.sh\n\n# Create fresh account if you wish, which is good practice\nnear delete crossword.friend.testnet friend.testnet\nnear create-account crossword.friend.testnet --masterAccount friend.testnet\n\n# Deploy\nnear deploy crossword.friend.testnet --wasmFile res/my_crossword.wasm \\\n  --initFunction 'new' \\\n  --initArgs '{\"solution\": \"69c2feb084439956193f4c21936025f14a5a5a78979d67ae34762e18a7206a0f\"}'\n\n# Return to the project root and start the React app\ncd ..\nenv CONTRACT_NAME=crossword.friend.testnet npm run start\n"})}),"\n",(0,r.jsxs)(t.p,{children:["The last line sends the environment variable ",(0,r.jsx)(t.code,{children:"CONTRACT_NAME"})," into the NodeJS script. This is picked up in the ",(0,r.jsx)(t.code,{children:"config.js"})," file that's used to set up the contract account and network configuration:"]}),"\n",(0,r.jsx)(a.Ey,{language:"js",start:"1",end:"2",url:"https://github.com/near-examples/crossword-tutorial-chapter-1/blob/3e497b4815600b8382614f76c7812520710f704d/src/config.js"}),"\n",(0,r.jsxs)(t.p,{children:["After running the last command to start the React app, you'll be given a link to a local website, like ",(0,r.jsx)(t.code,{children:"https://localhost:1234"}),". When you visit the site you'll see the simple frontend that interacts with our smart contract:"]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"Crossword puzzle frontend showing a filled out puzzle with clues on the right sidebar",src:n(44540).Z+"",width:"775",height:"668"})}),"\n",(0,r.jsxs)(t.p,{children:["Again, the full code for this chapter is ",(0,r.jsx)(t.a,{href:"https://github.com/near-examples/crossword-tutorial-chapter-1",children:"available here"}),"."]})]})}function p(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},85162:(e,t,n)=>{n.d(t,{Z:()=>o});n(67294);var r=n(36905);const s={tabItem:"tabItem_Ymn6"};var a=n(85893);function o(e){var t=e.children,n=e.hidden,o=e.className;return(0,a.jsx)("div",{role:"tabpanel",className:(0,r.Z)(s.tabItem,o),hidden:n,children:t})}},74866:(e,t,n)=>{n.d(t,{Z:()=>y});var r=n(67294),s=n(36905),a=n(12466),o=n(16550),i=n(20469),l=n(91980),c=n(67392),d=n(50012);function h(e){var t,n;return null!=(t=null==(n=r.Children.toArray(e).filter((function(e){return"\n"!==e})).map((function(e){if(!e||(0,r.isValidElement)(e)&&((t=e.props)&&"object"==typeof t&&"value"in t))return e;var t;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:n.filter(Boolean))?t:[]}function u(e){var t=e.values,n=e.children;return(0,r.useMemo)((function(){var e=null!=t?t:function(e){return h(e).map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes,default:t.default}}))}(n);return function(e){var t=(0,c.l)(e,(function(e,t){return e.value===t.value}));if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[t,n])}function p(e){var t=e.value;return e.tabValues.some((function(e){return e.value===t}))}function f(e){var t=e.queryString,n=void 0!==t&&t,s=e.groupId,a=(0,o.k6)(),i=function(e){var t=e.queryString,n=void 0!==t&&t,r=e.groupId;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=r?r:null}({queryString:n,groupId:s});return[(0,l._X)(i),(0,r.useCallback)((function(e){if(i){var t=new URLSearchParams(a.location.search);t.set(i,e),a.replace(Object.assign({},a.location,{search:t.toString()}))}}),[i,a])]}function m(e){var t,n,s,a,o=e.defaultValue,l=e.queryString,c=void 0!==l&&l,h=e.groupId,m=u(e),b=(0,r.useState)((function(){return function(e){var t,n=e.defaultValue,r=e.tabValues;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:r}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+n+'" but none of its children has the corresponding value. Available values are: '+r.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return n}var s=null!=(t=r.find((function(e){return e.default})))?t:r[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:o,tabValues:m})})),w=b[0],g=b[1],j=f({queryString:c,groupId:h}),v=j[0],x=j[1],y=(t=function(e){return e?"docusaurus.tab."+e:null}({groupId:h}.groupId),n=(0,d.Nk)(t),s=n[0],a=n[1],[s,(0,r.useCallback)((function(e){t&&a.set(e)}),[t,a])]),k=y[0],A=y[1],z=function(){var e=null!=v?v:k;return p({value:e,tabValues:m})?e:null}();return(0,i.Z)((function(){z&&g(z)}),[z]),{selectedValue:w,selectValue:(0,r.useCallback)((function(e){if(!p({value:e,tabValues:m}))throw new Error("Can't select invalid tab value="+e);g(e),x(e),A(e)}),[x,A,m]),tabValues:m}}var b=n(72389);const w={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var g=n(85893);function j(e){var t=e.className,n=e.block,r=e.selectedValue,o=e.selectValue,i=e.tabValues,l=[],c=(0,a.o5)().blockElementScrollPositionUntilNextRender,d=function(e){var t=e.currentTarget,n=l.indexOf(t),s=i[n].value;s!==r&&(c(t),o(s))},h=function(e){var t,n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":var r,s=l.indexOf(e.currentTarget)+1;n=null!=(r=l[s])?r:l[0];break;case"ArrowLeft":var a,o=l.indexOf(e.currentTarget)-1;n=null!=(a=l[o])?a:l[l.length-1]}null==(t=n)||t.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":n},t),children:i.map((function(e){var t=e.value,n=e.label,a=e.attributes;return(0,g.jsx)("li",Object.assign({role:"tab",tabIndex:r===t?0:-1,"aria-selected":r===t,ref:function(e){return l.push(e)},onKeyDown:h,onClick:d},a,{className:(0,s.Z)("tabs__item",w.tabItem,null==a?void 0:a.className,{"tabs__item--active":r===t}),children:null!=n?n:t}),t)}))})}function v(e){var t=e.lazy,n=e.children,s=e.selectedValue,a=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){var o=a.find((function(e){return e.props.value===s}));return o?(0,r.cloneElement)(o,{className:"margin-top--md"}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:a.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==s})}))})}function x(e){var t=m(e);return(0,g.jsxs)("div",{className:(0,s.Z)("tabs-container",w.tabList),children:[(0,g.jsx)(j,Object.assign({},e,t)),(0,g.jsx)(v,Object.assign({},e,t))]})}function y(e){var t=(0,b.Z)();return(0,g.jsx)(x,Object.assign({},e,{children:h(e.children)}),String(t))}},77229:(e,t,n)=>{n.d(t,{Ey:()=>d,O2:()=>l,SQ:()=>c});n(67294);var r=n(74866),s=n(85162),a=n(95665),o=n.n(a),i=n(85893);function l(e){var t=e.children;return Array.isArray(t)||(t=[t]),(0,i.jsx)(r.Z,{className:"language-tabs",groupId:"code-tabs",children:t.map((function(e,t){return(0,i.jsx)(s.Z,{value:e.props.value,label:e.props.value,children:e})}))})}function c(e){var t=e.children,n=e.language;return Array.isArray(t)||(t=[t]),t=t.map((function(e){return function(e,t){var n=e.props,r=(n.children,n.url),s=n.start,a=n.end,o=n.fname;if(e.type===d)return d({url:r,start:s,end:a,language:t,fname:o});return e}(e,n)})),1==t.length?(0,i.jsx)(s.Z,{value:0,label:t[0].props.fname,children:t[0]}):(0,i.jsx)(r.Z,{className:"file-tabs",children:t.map((function(e,t){return(0,i.jsx)(s.Z,{value:t,label:e.props.fname,children:e})}))})}function d(e){var t=e.url,n=e.start,r=e.end,s=e.language,a=e.fname,l=t+"#";return n&&r&&(l+="L"+n+"-L"+r+"#"),(0,i.jsx)(o(),{language:s,fname:a,children:l})}},44540:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/basics-final-frontend-3d07b12eae7c931a52ba5d874537e810.png"}}]);