"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9226],{14464:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>r,toc:()=>d});var i=t(85893),s=t(11151),l=t(42352);const a={id:"infinite-scroll",title:"InfiniteScroll",sidebar_label:"InfiniteScroll"},o=void 0,r={id:"bos/components/infinite-scroll",title:"InfiniteScroll",description:"Infinitely load a grid or list of items. This component allows you to create a simple, lightweight infinite scrolling page or element by supporting both window and scrollable elements.",source:"@site/i18n/vi/docusaurus-plugin-content-docs/current/bos/components/infiniteScroll.md",sourceDirName:"bos/components",slug:"/bos/components/infinite-scroll",permalink:"/vi/bos/components/infinite-scroll",draft:!1,unlisted:!1,editUrl:"https://github.com/near/docs/edit/master/website/../docs/bos/components/infiniteScroll.md",tags:[],version:"current",frontMatter:{id:"infinite-scroll",title:"InfiniteScroll",sidebar_label:"InfiniteScroll"},sidebar:"integrate",previous:{title:"OverlayTrigger",permalink:"/vi/bos/components/overlay-trigger"},next:{title:"TypeAhead",permalink:"/vi/bos/components/typeahead"}},c={},d=[{value:"Example",id:"example",level:3},{value:"Example: Loading Memes in NEAR Social",id:"example-loading-memes-in-near-social",level:3}];function m(e){const n={a:"a",code:"code",h3:"h3",hr:"hr",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"Infinitely load a grid or list of items. This component allows you to create a simple, lightweight infinite scrolling page or element by supporting both window and scrollable elements."}),"\n",(0,i.jsxs)(n.p,{children:["Read more about the ",(0,i.jsx)(n.a,{href:"https://www.npmjs.com/package/react-infinite-scroller",children:"react-infinite-scroller"})," package."]}),"\n",(0,i.jsx)("hr",{class:"subsection"}),"\n",(0,i.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,i.jsx)(l.W,{id:"1",height:"200px",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"const allNumbers = Array.from(Array(100).keys())\n\nconst [displayNums, setDisplayNums] = useState([]);\nconst [lastNumber, setLastNumber] = useState(0);\n\nconst loadNumbers = (page) => {\n  setLastNumber(lastNumber + 10);\n  setDisplayNums(allNumbers.slice(0, lastNumber + 10).map(n => <p> {n} </p>));\n};\n\nreturn (\n  <div>\n    <InfiniteScroll\n      loadMore={loadNumbers}\n      hasMore={lastNumber < allNumbers.length}\n    >\n      <p>{displayNums}</p>\n    </InfiniteScroll>\n  </div>\n);\n"})})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"example-loading-memes-in-near-social",children:"Example: Loading Memes in NEAR Social"}),"\n",(0,i.jsx)(l.W,{id:"2",height:"260px",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'const data = Social.keys(`*/post/meme`, "final", { return_type: "History" });\n\nif (!data) { return "Loading"; }\n\nconst processData = (data) => {\n  const accounts = Object.entries(data);\n\n  const allMemes = accounts\n    .map((account) => {\n      const accountId = account[0];\n      const blockHeights = account[1].post.meme;\n      return blockHeights.map((blockHeight) => ({\n        accountId,\n        blockHeight,\n      }));\n    })\n    .flat();\n\n  allMemes.sort((a, b) => b.blockHeight - a.blockHeight);\n  return allMemes;\n};\n\nconst memeToWidget = ({accountId, blockHeight}) => {\n  return <div style={{ minHeight: "200px" }}>\n    <a href={`#/mob.near/widget/Meme?accountId=${accountId}&blockHeight=${blockHeight}`}\n      class="text-decoration-none" >\n      <Widget src="mob.near/widget/Meme" props={{accountId, blockHeight}} />\n    </a>\n  </div>\n};\n\nState.init({\n  allMemes: processData(data),\n  widgets: [],\n});\n\nconst makeMoreMemes = () => {\n  const newMemes = state.allMemes\n    .slice(state.widgets.length, state.widgets.length + 10)\n    .map(memeToWidget);\n  newMemes.forEach((meme) => state.widgets.push(meme));\n  State.update();\n};\n\nreturn (\n  <div className="px-2 mx-auto" >\n    <InfiniteScroll\n      loadMore={makeMoreMemes}\n      hasMore={state.widgets.length < state.allMemes.length}\n    >\n      <div>{state.widgets}</div>\n    </InfiniteScroll>\n  </div>\n);\n'})})})]})}function p(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(m,{...e})}):m(e)}},42352:(e,n,t)=>{t.d(n,{W:()=>o});var i=t(67294),s=t(16729),l=t(91262),a=t(85893);function o(e){var n=e.children,o=e.id,r=void 0===o?1:o,c=e.height,d=void 0===c?"160px":c;return(0,a.jsx)(l.Z,{fallback:(0,a.jsx)("div",{children:" Loading... "}),children:function(){var e="";try{e=n.props.children.props.children}catch(f){}var l=t(58613),o=l.Widget,c=l.useInitNear,m=t(2302).ZP,p=(0,i.useState)(e),h=p[0],u=p[1],g=c().initNear,b=(0,s.O)().selector;return(0,i.useEffect)((function(){g&&b&&g({networkId:"mainnet",selector:b})}),[g,b]),(0,a.jsxs)("div",{children:[(0,a.jsx)("div",{class:"monaco",children:(0,a.jsx)(m,{height:d,value:h,options:{minimap:{enabled:!1},wordWrap:"on",scrollBeyondLastLine:!1,fontSize:"14px",renderLineHighlight:!1,hideMargin:!0,glyphMargin:!1,folding:!1,lineNumbers:!1,lineDecorationsWidth:0,lineNumbersMinChars:0,scrollBars:!1},onChange:function(e,n){return u(e)}})}),(0,a.jsxs)("div",{class:"code_iframe",children:[(0,a.jsxs)("h4",{style:{fontWeight:0},children:[" Preview ",(0,a.jsx)("small",{children:" - Edit the code above! "})," "]}),(0,a.jsx)("hr",{class:"preview-border"}),(0,a.jsx)("div",{class:"bootstrap-scope",children:(0,a.jsx)("div",{class:"vm-widget",children:(0,a.jsx)(o,{code:h},r)})})]})]})}})}}}]);