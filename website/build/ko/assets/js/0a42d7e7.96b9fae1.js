"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7059],{77209:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>d,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>r,toc:()=>l});var i=t(85893),o=t(11151);const s={id:"lido",title:"Lido \uc608\uc2dc"},a="Hello Lido!",r={id:"bos/tutorial/lido",title:"Lido \uc608\uc2dc",description:"\ub9cc\uc57d \ub2f9\uc2e0\uc774 \ub354 \uc790\uc138\ud788 \uc0b4\ud3b4\ubcfc \uc900\ube44\uac00 \ub418\uc5b4 \uc788\ub2e4\uba74, Lido \uad6c\uc131 \uc694\uc18c\ub294 \uc774\ub354\ub9ac\uc6c0 \uba54\uc778\ub137\uc5d0 \ubc30\uce58\ub41c \uc2a4\ub9c8\ud2b8 \ucee8\ud2b8\ub799\ud2b8\uc640 \uc0c1\ud638 \uc791\uc6a9\ud558\ub294 \ubc29\ubc95\uc744 \ubcf4\uc5ec\uc8fc\uae30 \ub54c\ubb38\uc5d0 \uc644\ubcbd\ud55c \uc608\uc2dc\ub85c \uc791\uc6a9\ud569\ub2c8\ub2e4.",source:"@site/i18n/ko/docusaurus-plugin-content-docs/current/bos/tutorial/hello-lido.md",sourceDirName:"bos/tutorial",slug:"/bos/tutorial/lido",permalink:"/ko/bos/tutorial/lido",draft:!1,unlisted:!1,editUrl:"https://github.com/near/docs/edit/master/website/../docs/bos/tutorial/hello-lido.md",tags:[],version:"current",frontMatter:{id:"lido",title:"Lido \uc608\uc2dc"},sidebar:"integrate",previous:{title:"Best Practices for Ethereum developers on NEAR",permalink:"/ko/bos/tutorial/ethers-js-best-practices"},next:{title:"Components & Historical data",permalink:"/ko/bos/queryapi/bos-components"}},d={},l=[{value:"\uad6c\uc131 \uc694\uc18c \ud3ec\ud06c",id:"\uad6c\uc131-\uc694\uc18c-\ud3ec\ud06c",level:3},{value:"\uc18c\uc2a4 \ucf54\ub4dc",id:"\uc18c\uc2a4-\ucf54\ub4dc",level:3},{value:"\uad6c\uc131 \uc694\uc18c \ud3ec\ud06c",id:"\uad6c\uc131-\uc694\uc18c-\ud3ec\ud06c-1",level:4}];function c(n){const e={a:"a",admonition:"admonition",code:"code",h1:"h1",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",...(0,o.a)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h1,{id:"hello-lido",children:"Hello Lido!"}),"\n",(0,i.jsx)(e.p,{children:"\ub9cc\uc57d \ub2f9\uc2e0\uc774 \ub354 \uc790\uc138\ud788 \uc0b4\ud3b4\ubcfc \uc900\ube44\uac00 \ub418\uc5b4 \uc788\ub2e4\uba74, Lido \uad6c\uc131 \uc694\uc18c\ub294 \uc774\ub354\ub9ac\uc6c0 \uba54\uc778\ub137\uc5d0 \ubc30\uce58\ub41c \uc2a4\ub9c8\ud2b8 \ucee8\ud2b8\ub799\ud2b8\uc640 \uc0c1\ud638 \uc791\uc6a9\ud558\ub294 \ubc29\ubc95\uc744 \ubcf4\uc5ec\uc8fc\uae30 \ub54c\ubb38\uc5d0 \uc644\ubcbd\ud55c \uc608\uc2dc\ub85c \uc791\uc6a9\ud569\ub2c8\ub2e4."}),"\n",(0,i.jsx)(e.h3,{id:"\uad6c\uc131-\uc694\uc18c-\ud3ec\ud06c",children:"\uad6c\uc131 \uc694\uc18c \ud3ec\ud06c"}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.a,{href:"https://bos.gg/#/zavodil.near/widget/Lido",children:"\uad6c\uc131 \uc694\uc18c"}),"\ub85c \uc774\ub3d9\ud569\ub2c8\ub2e4."]}),"\n",(0,i.jsx)(e.li,{children:"\uc624\ub978\ucabd \uc0c1\ub2e8\uc5d0 \uc788\ub294 \uba54\ub274 \uc544\uc774\ucf58\uc744 \ub204\ub985\ub2c8\ub2e4."}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"Fork"}),"\ub97c \uc120\ud0dd\ud569\ub2c8\ub2e4."]}),"\n",(0,i.jsx)(e.li,{children:"\uc790\uc720\ub86d\uac8c \ubcc0\uacbd \uac00\ub2a5\ud569\ub2c8\ub2e4."}),"\n",(0,i.jsx)(e.li,{children:'\uad6c\uc131 \uc694\uc18c\ub97c \ubc30\ud3ec\ud558\ub824\uba74 "Save"\uc744 \ud074\ub9ad\ud558\uc138\uc694.'}),"\n"]}),"\n",(0,i.jsx)(e.admonition,{type:"note",children:(0,i.jsx)(e.p,{children:"\uad6c\uc131 \uc694\uc18c\ub97c \ubc30\ud3ec\ud558\ub824\uba74 NEAR \uacc4\uc815\uc73c\ub85c \ub85c\uadf8\uc778\ud558\uace0 \uc2a4\ud1a0\ub9ac\uc9c0 \ube44\uc6a9\uc73c\ub85c \uc18c\ub7c9\uc758 NEAR\ub97c \uc608\uce58\ud574\uc57c \ud569\ub2c8\ub2e4. This is because the components are stored in the NEAR network."})}),"\n",(0,i.jsx)(e.h3,{id:"\uc18c\uc2a4-\ucf54\ub4dc",children:"\uc18c\uc2a4 \ucf54\ub4dc"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:'// FETCH LIDO ABI\n\nconst lidoContract = "0xae7ab96520de3a18e5e111b5eaab095312d7fe84";\nconst tokenDecimals = 18;\n\nconst lidoAbi = fetch(\n  "https://raw.githubusercontent.com/lidofinance/lido-subgraph/master/abis/Lido.json"\n);\nif (!lidoAbi.ok) {\n  return "Loading";\n}\n\nconst iface = new ethers.utils.Interface(lidoAbi.body);\n\n// FETCH LIDO STAKING APR\n\nif (state.lidoArp === undefined) {\n  const apr = fetch(\n    "https://api.allorigins.win/get?url=https://stake.lido.fi/api/sma-steth-apr"\n  );\n  if (!apr) return;\n  State.update({ lidoArp: JSON.parse(apr?.body?.contents) ?? "..." });\n}\n\n// HELPER FUNCTIONS\n\nconst getStakedBalance = (receiver) => {\n  const encodedData = iface.encodeFunctionData("balanceOf", [receiver]);\n\n  return Ethers.provider()\n    .call({\n      to: lidoContract,\n      data: encodedData,\n    })\n    .then((rawBalance) => {\n      const receiverBalanceHex = iface.decodeFunctionResult(\n        "balanceOf",\n        rawBalance\n      );\n\n      return Big(receiverBalanceHex.toString())\n        .div(Big(10).pow(tokenDecimals))\n        .toFixed(2)\n        .replace(/\\d(?=(\\d{3})+\\.)/g, "$&,");\n    });\n};\n\nconst submitEthers = (strEther, _referral) => {\n  if (!strEther) {\n    return console.log("Amount is missing");\n  }\n  const erc20 = new ethers.Contract(\n    lidoContract,\n    lidoAbi.body,\n    Ethers.provider().getSigner()\n  );\n\n  let amount = ethers.utils.parseUnits(strEther, tokenDecimals).toHexString();\n\n  erc20.submit(lidoContract, { value: amount }).then((transactionHash) => {\n    console.log("transactionHash is " + transactionHash);\n  });\n};\n\n// DETECT SENDER\n\nif (state.sender === undefined) {\n  State.update({ sender: Ethers.send("eth_requestAccounts", [])[0] });\n}\n\nif (!state.sender) return "Please login first";\n\n// FETCH SENDER BALANCE\n\nif (state.balance === undefined) {\n  Ethers.provider()\n    .getBalance(state.sender)\n    .then((balance) => {\n      State.update({ balance: Big(balance).div(Big(10).pow(18)).toFixed(2) });\n    });\n}\n\n// FETCH SENDER STETH BALANCE\n\nif (state.stakedBalance === undefined) {\n  getStakedBalance(state.sender).then((stakedBalance) => {\n    State.update({ stakedBalance });\n  });\n}\n\n// FETCH TX COST\n\nif (state.txCost === undefined) {\n  const gasEstimate = ethers.BigNumber.from(1875000);\n  const gasPrice = ethers.BigNumber.from(1500000000);\n\n  const gasCostInWei = gasEstimate.mul(gasPrice);\n  const gasCostInEth = ethers.utils.formatEther(gasCostInWei);\n\n  let responseGql = fetch(\n    "https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v2",\n    {\n      method: "POST",\n      headers: { "Content-Type": "application/json" },\n      body: JSON.stringify({\n        query: `{\n          bundle(id: "1" ) {\n            ethPrice\n          }\n        }`,\n      }),\n    }\n  );\n\n  if (!responseGql) return "";\n\n  const ethPriceInUsd = responseGql.body.data.bundle.ethPrice;\n\n  const txCost = Number(gasCostInEth) * Number(ethPriceInUsd);\n\n  State.update({ txCost: `$${txCost.toFixed(2)}` });\n}\n\n// FETCH CSS\n\nconst cssFont = fetch(\n  "https://fonts.googleapis.com/css2?family=Manrope:wght@200;300;400;500;600;700;800"\n).body;\nconst css = fetch(\n  "https://pluminite.mypinata.cloud/ipfs/Qmboz8aoSvVXLeP5pZbRtNKtDD3kX5D9DEnfMn2ZGSJWtP"\n).body;\n\nif (!cssFont || !css) return "";\n\nif (!state.theme) {\n  State.update({\n    theme: styled.div`\n      font-family: Manrope, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto,\n        Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\n      ${cssFont}\n      ${css}\n    `,\n  });\n}\nconst Theme = state.theme;\n\n// OUTPUT UI\n\nreturn (\n  <Theme>\n    <div class="LidoContainer">\n      <div class="Header">Stake Ether</div>\n      <div class="SubHeader">Stake ETH and receive stETH while staking.</div>\n\n      <div class="LidoForm">\n        <div class="LidoFormTopContainer">\n          <div class="LidoFormTopContainerLeft">\n            <div class="LidoFormTopContainerLeftContent1">\n              <div class="LidoFormTopContainerLeftContent1Container">\n                <span>Available to stake</span>\n                <div class="LidoFormTopContainerLeftContent1Circle" />\n              </div>\n            </div>\n            <div class="LidoFormTopContainerLeftContent2">\n              <span>{state.balance ?? "..."}&nbsp;ETH</span>\n            </div>\n          </div>\n          <div class="LidoFormTopContainerRight">\n            <div class="LidoFormTopContainerRightContent1">\n              <div class="LidoFormTopContainerRightContent1Text">\n                <span>\n                  {state.sender.substring(0, 6)}...\n                  {state.sender.substring(\n                    state.sender.length - 4,\n                    state.sender.length\n                  )}{" "}\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class="LidoSplitter" />\n        <div class="LidoFormBottomContainer">\n          <div class="LidoFormTopContainerLeft">\n            <div class="LidoFormTopContainerLeftContent1">\n              <div class="LidoFormTopContainerLeftContent1Container">\n                <span>Staked amount</span>\n              </div>\n            </div>\n            <div class="LidoFormTopContainerLeftContent2">\n              <span>{state.stakedBalance ?? "..."}&nbsp;stETH</span>\n            </div>\n          </div>\n          <div class="LidoFormTopContainerRight">\n            <div class="LidoAprContainer">\n              <div class="LidoAprTitle">Lido APR</div>\n              <div class="LidoAprValue">{state.lidoArp ?? "..."}%</div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class="LidoStakeForm">\n        <div class="LidoStakeFormInputContainer">\n          <span class="LidoStakeFormInputContainerSpan1">\n            <svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor">\n              <path\n                opacity="0.6"\n                d="M11.999 3.75v6.098l5.248 2.303-5.248-8.401z"\n              ></path>\n              <path d="M11.999 3.75L6.75 12.151l5.249-2.303V3.75z"></path>\n              <path\n                opacity="0.6"\n                d="M11.999 16.103v4.143l5.251-7.135L12 16.103z"\n              ></path>\n              <path d="M11.999 20.246v-4.144L6.75 13.111l5.249 7.135z"></path>\n              <path\n                opacity="0.2"\n                d="M11.999 15.144l5.248-2.993-5.248-2.301v5.294z"\n              ></path>\n              <path\n                opacity="0.6"\n                d="M6.75 12.151l5.249 2.993V9.85l-5.249 2.3z"\n              ></path>\n            </svg>\n          </span>\n          <span class="LidoStakeFormInputContainerSpan2">\n            <input\n              class="LidoStakeFormInputContainerSpan2Input"\n              value={state.strEther}\n              onChange={(e) => State.update({ strEther: e.target.value })}\n              placeholder="Amount"\n            />\n          </span>\n          <span\n            class="LidoStakeFormInputContainerSpan3"\n            onClick={() => {\n              State.update({\n                strEther: (parseFloat(state.balance) - 0.05).toFixed(2),\n              });\n            }}\n          >\n            <button class="LidoStakeFormInputContainerSpan3Content">\n              <span class="LidoStakeFormInputContainerSpan3Max">MAX</span>\n            </button>\n          </span>\n        </div>\n        <button\n          class="LidoStakeFormSubmitContainer"\n          onClick={() => submitEthers(state.strEther, state.sender)}\n        >\n          <span>Submit</span>\n        </button>\n\n        <div class="LidoFooterContainer">\n          <div class="LidoFooterRaw">\n            <div class="LidoFooterRawLeft">You will receive</div>\n            <div class="LidoFooterRawRight">${state.strEther ?? 0} stETH</div>\n          </div>\n          <div class="LidoFooterRaw">\n            <div class="LidoFooterRawLeft">Exchange rate</div>\n            <div class="LidoFooterRawRight">1 ETH = 1 stETH</div>\n          </div>\n          <div class="LidoFooterRaw">\n            <div class="LidoFooterRawLeft">Transaction cost</div>\n            <div class="LidoFooterRawRight">{state.txCost}</div>\n          </div>\n          <div class="LidoFooterRaw">\n            <div class="LidoFooterRawLeft">Reward fee</div>\n            <div class="LidoFooterRawRight">10%</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </Theme>\n);\n'})}),"\n",(0,i.jsx)(e.h4,{id:"\uad6c\uc131-\uc694\uc18c-\ud3ec\ud06c-1",children:"\uad6c\uc131 \uc694\uc18c \ud3ec\ud06c"}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.a,{href:"https://bos.gg/#/zavodil.near/widget/Lido",children:"\uad6c\uc131 \uc694\uc18c"}),"\ub85c \uc774\ub3d9\ud569\ub2c8\ub2e4."]}),"\n",(0,i.jsx)(e.li,{children:"\uc624\ub978\ucabd \uc0c1\ub2e8\uc5d0 \uc788\ub294 \uba54\ub274 \uc544\uc774\ucf58\uc744 \ub204\ub985\ub2c8\ub2e4."}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"Fork"}),"\ub97c \uc120\ud0dd\ud569\ub2c8\ub2e4."]}),"\n",(0,i.jsx)(e.li,{children:"\uc790\uc720\ub86d\uac8c \ubcc0\uacbd \uac00\ub2a5\ud569\ub2c8\ub2e4."}),"\n",(0,i.jsx)(e.li,{children:'\uad6c\uc131 \uc694\uc18c\ub97c \ubc30\ud3ec\ud558\ub824\uba74 "Save"\uc744 \ud074\ub9ad\ud558\uc138\uc694.'}),"\n"]}),"\n",(0,i.jsx)(e.admonition,{type:"note",children:(0,i.jsx)(e.p,{children:"\uad6c\uc131 \uc694\uc18c\ub97c \ubc30\ud3ec\ud558\ub824\uba74 NEAR \uacc4\uc815\uc73c\ub85c \ub85c\uadf8\uc778\ud558\uace0 \uc2a4\ud1a0\ub9ac\uc9c0 \ube44\uc6a9\uc73c\ub85c \uc18c\ub7c9\uc758 NEAR\ub97c \uc608\uce58\ud574\uc57c \ud569\ub2c8\ub2e4. This is because NEAR components are stored in the NEAR network."})})]})}function p(n={}){const{wrapper:e}={...(0,o.a)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(c,{...n})}):c(n)}},11151:(n,e,t)=>{t.d(e,{Z:()=>r,a:()=>a});var i=t(67294);const o={},s=i.createContext(o);function a(n){const e=i.useContext(s);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:a(n.components),i.createElement(s.Provider,{value:e},n.children)}}}]);