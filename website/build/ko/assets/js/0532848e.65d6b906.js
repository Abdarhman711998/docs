"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[298],{49608:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>l,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>m});var a=n(85893),i=n(11151);const s={id:"welcome",title:"Rollup Data Availability",sidebar_label:"Home"},l=void 0,o={id:"data-availability/welcome",title:"Rollup Data Availability",description:"Utilizing NEAR as storage data availability with a focus on lowering rollup DA fees.",source:"@site/../docs/data-availability/welcome.md",sourceDirName:"data-availability",slug:"/data-availability/welcome",permalink:"/ko/data-availability/welcome",draft:!1,unlisted:!1,editUrl:"https://github.com/near/docs/edit/master/website/../docs/data-availability/welcome.md",tags:[],version:"current",lastUpdatedBy:"gagdiez",lastUpdatedAt:1699467323,formattedLastUpdatedAt:"2023\ub144 11\uc6d4 8\uc77c",frontMatter:{id:"welcome",title:"Rollup Data Availability",sidebar_label:"Home"},sidebar:"data-availability",next:{title:"Blob Store Contract",permalink:"/ko/data-availability/blob-contract"}},r={},m=[{value:"System Context",id:"system-context",level:2}];function c(e){const t={a:"a",admonition:"admonition",h2:"h2",hr:"hr",li:"li",mermaid:"mermaid",p:"p",ul:"ul",...(0,i.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:"Utilizing NEAR as storage data availability with a focus on lowering rollup DA fees."}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.a,{href:"./blob-contract",children:"Blob Store Contract"}),": A contract that provides the store for arbitrary DA blobs."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.a,{href:"./light-client",children:"Light Client"}),": A trustless off-chain light client for NEAR with DA-enabled features."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.a,{href:"./rpc",children:"RPC Client"}),": The defacto client for submitting data blobs to NEAR."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.a,{href:"./integrations",children:"Integrations"}),": Proof of concept works for integrating with L2 rollups."]}),"\n"]}),"\n",(0,a.jsx)(t.admonition,{type:"tip",children:(0,a.jsxs)(t.p,{children:["For the latest information, please check the ",(0,a.jsx)(t.a,{href:"https://github.com/near/rollup-data-availability/",children:"Near DA"})," repository."]})}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h2,{id:"system-context",children:"System Context"}),"\n",(0,a.jsx)(t.p,{children:"This outlines the system components that we build and how it interacts with external components."}),"\n",(0,a.jsx)(t.p,{children:"Red lines denote external flow of commitments.\nWhite lines denote flow of blob data."}),"\n",(0,a.jsx)(t.p,{children:'Note: "fisherman" is just an example how a rollup can work with the light client in the initial stage of DA, until we implement a more non-interactive approach, such as KZG.'}),"\n",(0,a.jsx)(t.mermaid,{value:'C4Context\n    title NEAR Data Availability System Context\n\n    Enterprise_Boundary(b1, "Ethereum") {\n        System_Ext(SystemEth, "Ethereum")\n\n        System_Boundary(b2, "Rollup") {\n            System_Ext(SystemRollup, "Rollup", "Derives blocks, execute transactions, posts commitments & sequence data")\n            System(SystemNearDa, "NEAR DA Client", "Submits/Gets blob data, creates commitments")\n        }\n        BiRel(SystemRollup, SystemEth, "Posts sequences, proofs of execution, DA frame references")\n        BiRel(SystemRollup, SystemNearDa, "Post batches, retrieves commitments")\n        Rel(fisherman, SystemEth, "Looks for commitments, posts results")\n    }      \n    \n    Enterprise_Boundary(b0, "NEAR") {\n        \n        System(SystemLc, "Light Client", "Syncs headers, provides inclusion proofs")\n        System(SystemNear, "NEAR Protocol", "NEAR validators, archival nodes")\n        \n        Rel(SystemLc, SystemNear, "Syncs headers")    \n        Rel(SystemNearDa, SystemNear, "Submits/Gets blob")\n\n        %% This doesn\'t exist yet\n        %% System(SystemDas, "Data Availability Sampling", "Data redundancy, retrieval, sample responses")\n        %% BiRel(SystemDas, SystemLc, "Commitments")\n    }\n     \n    Person_Ext(fisherman, "Fisherman")\n    Rel(fisherman, SystemLc, "Requests inclusion proofs, validates inclusion proofs")\n      \n\n    UpdateRelStyle(fisherman, SystemEth, $offsetY="-10" $lineColor="red")\n    UpdateRelStyle(fisherman, SystemLc, $offsetY="-10", $lineColor="red")\n    UpdateRelStyle(SystemRollup, SystemEth, $offsetY="-30", $lineColor="white")\n    UpdateElementStyle(fisherman, $bgColor="grey", $borderColor="red")\n\n    UpdateRelStyle(SystemRollup, SystemNearDa, $offsetX="-200", $lineColor="white", $textColor="white")\n    UpdateRelStyle(SystemNearDa, SystemNear, $textColor="white", $lineColor="white", $offsetY="10")\n    UpdateRelStyle(SystemNearLc, SystemNear, $offsetX="30")'})]})}function d(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},11151:(e,t,n)=>{n.d(t,{Z:()=>o,a:()=>l});var a=n(67294);const i={},s=a.createContext(i);function l(e){const t=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),a.createElement(s.Provider,{value:t},e.children)}}}]);