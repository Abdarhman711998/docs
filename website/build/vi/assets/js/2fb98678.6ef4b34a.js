"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7370],{56434:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>i,contentTitle:()=>r,default:()=>h,frontMatter:()=>c,metadata:()=>s,toc:()=>l});var a=e(85893),o=e(11151);const c={sidebar_position:4},r="Payable Methods",s={id:"sdk/rust/contract-interface/payable-methods",title:"Payable Methods",description:"We can allow methods to accept token transfer together with the function call. \u0110i\u1ec1u n\xe0y \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n \u0111\u1ec3 c\xe1c contract c\xf3 th\u1ec3 x\xe1c \u0111\u1ecbnh m\u1ed9t kho\u1ea3n ph\xed trong c\xe1c token c\u1ea7n ph\u1ea3i tr\u1ea3 khi ch\xfang \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng. By default the methods are not payable and they will panic if someone will attempt to transfer tokens to them during the invocation. \u0110i\u1ec1u n\xe0y \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n v\xec l\xfd do an to\xe0n, trong tr\u01b0\u1eddng h\u1ee3p ai \u0111\xf3 v\xf4 t\xecnh chuy\u1ec3n token trong function call.",source:"@site/i18n/vi/docusaurus-plugin-content-docs/current/sdk/rust/contract-interface/payable-methods.md",sourceDirName:"sdk/rust/contract-interface",slug:"/sdk/rust/contract-interface/payable-methods",permalink:"/vi/sdk/rust/contract-interface/payable-methods",draft:!1,unlisted:!1,editUrl:"https://github.com/near/docs/edit/master/website/../docs/sdk/rust/contract-interface/payable-methods.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tools",previous:{title:"Private Methods",permalink:"/vi/sdk/rust/contract-interface/private-methods"},next:{title:"Serialization Protocols",permalink:"/vi/sdk/rust/contract-interface/serialization-interface"}},i={},l=[];function d(n){const t={a:"a",code:"code",h1:"h1",p:"p",pre:"pre",...(0,o.a)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h1,{id:"payable-methods",children:"Payable Methods"}),"\n",(0,a.jsx)(t.p,{children:"We can allow methods to accept token transfer together with the function call. \u0110i\u1ec1u n\xe0y \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n \u0111\u1ec3 c\xe1c contract c\xf3 th\u1ec3 x\xe1c \u0111\u1ecbnh m\u1ed9t kho\u1ea3n ph\xed trong c\xe1c token c\u1ea7n ph\u1ea3i tr\u1ea3 khi ch\xfang \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng. By default the methods are not payable and they will panic if someone will attempt to transfer tokens to them during the invocation. \u0110i\u1ec1u n\xe0y \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n v\xec l\xfd do an to\xe0n, trong tr\u01b0\u1eddng h\u1ee3p ai \u0111\xf3 v\xf4 t\xecnh chuy\u1ec3n token trong function call."}),"\n",(0,a.jsxs)(t.p,{children:["To declare a method as payable, use the ",(0,a.jsx)(t.code,{children:"#[payable]"})," annotation within the ",(0,a.jsxs)(t.a,{href:"/vi/sdk/rust/contract-structure/near-bindgen",children:[(0,a.jsx)(t.code,{children:"near_bindgen"})," macro"]})," as follows:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-rust",children:"#[payable]\npub fn my_method(&mut self) {\n...\n}\n"})}),"\n",(0,a.jsxs)(t.p,{children:["This will allow the ",(0,a.jsx)(t.code,{children:"my_method"})," function to be called and transfer balance to the contract."]}),"\n",(0,a.jsxs)(t.p,{children:["D\u01b0\u1edbi \u0111\xe2y l\xe0 danh s\xe1ch \u0111\u1ea7y \u0111\u1ee7 c\xe1c error variant c\xf3 th\u1ec3 \u0111\u01b0\u1ee3c tr\u1ea3 v\u1ec1 theo lo\u1ea1i request ",(0,a.jsx)(t.code,{children:"view_access_key_list"}),":"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-rust",children:'#[near_bindgen]\nimpl Contract {\n    #[payable]\n    pub fn take_my_money(&mut self) {\n        near_sdk::env::log_str("Thanks!");\n    }\n    pub fn do_not_take_my_money(&mut self) {\n        near_sdk::env::log_str("Thanks!");\n    }\n}\n'})}),"\n",(0,a.jsx)(t.p,{children:"is equivalent to:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-rust",children:'#[near_bindgen]\nimpl Contract {\n    pub fn take_my_money(&mut self) {\n        near_sdk::env::log_str("Thanks!");\n    }\n    pub fn do_not_take_my_money(&mut self) {\n        if near_sdk::env::attached_deposit() != 0 {\n            near_sdk::env::panic_str("Method do_not_take_my_money doesn\'t accept deposit");\n        }\n        near_sdk::env::log_str("Thanks!");\n    }\n}\n'})})]})}function h(n={}){const{wrapper:t}={...(0,o.a)(),...n.components};return t?(0,a.jsx)(t,{...n,children:(0,a.jsx)(d,{...n})}):d(n)}},11151:(n,t,e)=>{e.d(t,{Z:()=>s,a:()=>r});var a=e(67294);const o={},c=a.createContext(o);function r(n){const t=a.useContext(c);return a.useMemo((function(){return"function"==typeof n?n(t):{...t,...n}}),[t,n])}function s(n){let t;return t=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:r(n.components),a.createElement(c.Provider,{value:t},n.children)}}}]);