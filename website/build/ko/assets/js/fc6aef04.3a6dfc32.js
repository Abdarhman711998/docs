"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1999],{56706:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>r});var o=t(85893),i=t(11151);const s={id:"feed-indexer",title:"Social Feed Indexer",sidebar_label:"Social Feed Indexer"},c=void 0,a={id:"tutorials/near-components/indexer-tutorials/feed-indexer",title:"Social Feed Indexer",description:"This tutorial creates a blockchain indexer using NEAR QueryAPI.",source:"@site/i18n/ko/docusaurus-plugin-content-docs/current/3.tutorials/near-components/indexer-tutorials/feed-indexer.md",sourceDirName:"3.tutorials/near-components/indexer-tutorials",slug:"/tutorials/near-components/indexer-tutorials/feed-indexer",permalink:"/ko/tutorials/near-components/indexer-tutorials/feed-indexer",draft:!1,unlisted:!1,editUrl:"https://github.com/near/docs/edit/master/website/../docs/3.tutorials/near-components/indexer-tutorials/feed-indexer.md",tags:[],version:"current",lastUpdatedBy:"Github Actions",lastUpdatedAt:1719825734e3,frontMatter:{id:"feed-indexer",title:"Social Feed Indexer",sidebar_label:"Social Feed Indexer"},sidebar:"tutorials",previous:{title:"NFTs Indexer",permalink:"/ko/tutorials/near-components/indexer-tutorials/nft-indexer"}},d={},r=[{value:"<code>feed-indexer</code> \uc2e4\ud589",id:"feed-indexer-\uc2e4\ud589",level:2},{value:"\uc2a4\ud0a4\ub9c8 \uc815\uc758",id:"\uc2a4\ud0a4\ub9c8-\uc815\uc758",level:2},{value:"\uc2a4\ud0a4\ub9c8\uac00 \uc815\uc758\ub41c \ud14c\uc774\ube14 \uc774\ub984",id:"\uc2a4\ud0a4\ub9c8\uac00-\uc815\uc758\ub41c-\ud14c\uc774\ube14-\uc774\ub984",level:3},{value:"\uc8fc\uc694 \ud568\uc218",id:"\uc8fc\uc694-\ud568\uc218",level:2},{value:"\uad00\ub828 \ub370\uc774\ud130 \ud544\ud130\ub9c1",id:"\uad00\ub828-\ub370\uc774\ud130-\ud544\ud130\ub9c1",level:3},{value:"\ud544\ud130\ub9c1\ub41c \ub370\uc774\ud130 \ucc98\ub9ac",id:"\ud544\ud130\ub9c1\ub41c-\ub370\uc774\ud130-\ucc98\ub9ac",level:3},{value:"\ud5ec\ud37c \ud568\uc218",id:"\ud5ec\ud37c-\ud568\uc218",level:2},{value:"<code>base64decode</code>",id:"base64decode",level:3},{value:"<code>handlePostCreation</code>",id:"handlepostcreation",level:3},{value:"<code>handleCommentCreation</code>",id:"handlecommentcreation",level:3},{value:"<code>handleLike</code>",id:"handlelike",level:3},{value:"<code>_handlePostLike</code>",id:"_handlepostlike",level:3},{value:"<code>_handlePostUnlike</code>",id:"_handlepostunlike",level:3},{value:"Querying data from the indexer",id:"querying-data-from-the-indexer",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsxs)(n.p,{children:["This tutorial creates a blockchain indexer using ",(0,o.jsx)(n.a,{href:"/ko/build/data-infrastructure/query-api/intro",children:"NEAR QueryAPI"}),"."]})}),"\n",(0,o.jsxs)(n.h2,{id:"feed-indexer-\uc2e4\ud589",children:[(0,o.jsx)(n.code,{children:"feed-indexer"})," \uc2e4\ud589"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"indexingLogic.js"})," \uc778\ub371\uc11c\ub294 \ub370\uc774\ud130\ub97c \ucc98\ub9ac, \ubcc0\ud658 \ubc0f \uae30\ub85d\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub418\ub294 \ud568\uc218\ub4e4\ub85c \uad6c\uc131\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \ube14\ub85d\uccb4\uc778\uc5d0\uc11c \ubc1c\uc0dd\ud558\ub294 \ud2b8\ub79c\uc7ad\uc158 \ub370\uc774\ud130\ub97c \ucc98\ub9ac\ud558\ub294 \uc8fc\uc694 \ub85c\uc9c1\uc740 \ub2e4\uc74c\uacfc \uac19\uc774 \ud45c\uc2dc\ub41c \uc8fc\uc11d \uc544\ub798\uc5d0 \uc788\uc2b5\ub2c8\ub2e4:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"// Add your code here\n"})}),"\n",(0,o.jsxs)(n.p,{children:["\uc2a4\ud0a4\ub9c8\ub294 \uad00\ub828 \ud2b8\ub79c\uc7ad\uc158\uc758 \ub370\uc774\ud130\ub97c \uc720\uc9c0\ud560 \ud14c\uc774\ube14\uc5d0 \ub300\ud574\uc11c\ub3c4 \uc9c0\uc815\ub418\uba70, \uc774\ub294 ",(0,o.jsx)(n.code,{children:"schema.sql"})," \ud0ed\uc5d0\uc11c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."]}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsxs)(n.p,{children:["This indexer can be found by ",(0,o.jsx)(n.a,{href:"https://dev.near.org/dataplatform.near/widget/QueryApi.App?selectedIndexerPath=dataplatform.near/social_feed",children:"following this link"}),"."]})}),"\n",(0,o.jsx)(n.h2,{id:"\uc2a4\ud0a4\ub9c8-\uc815\uc758",children:"\uc2a4\ud0a4\ub9c8 \uc815\uc758"}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsxs)(n.p,{children:["\ub370\uc774\ud130\ubca0\uc774\uc2a4 \ud14c\uc774\ube14\uc758 \uc774\ub984\uc740 ",(0,o.jsx)(n.code,{children:"roshaan_near_feed_messages"}),"\ub85c \uc9c0\uc815\ub418\uba70, \uc774\ub294 ",(0,o.jsx)(n.code,{children:"<account_name>_near_<indexer_name>_<table_name>"})," \ud615\uc2dd\uc744 \ub530\ub985\ub2c8\ub2e4."]})}),"\n",(0,o.jsx)(n.h3,{id:"\uc2a4\ud0a4\ub9c8\uac00-\uc815\uc758\ub41c-\ud14c\uc774\ube14-\uc774\ub984",children:"\uc2a4\ud0a4\ub9c8\uac00 \uc815\uc758\ub41c \ud14c\uc774\ube14 \uc774\ub984"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sql",children:'CREATE TABLE\n  "posts" (\n    "id" SERIAL NOT NULL,\n    "account_id" VARCHAR NOT NULL,\n    "block_height" DECIMAL(58, 0) NOT NULL,\n    "receipt_id" VARCHAR NOT NULL,\n    "content" TEXT NOT NULL,\n    "block_timestamp" DECIMAL(20, 0) NOT NULL,\n    "accounts_liked" JSONB NOT NULL DEFAULT \'[]\',\n    "last_comment_timestamp" DECIMAL(20, 0),\n    CONSTRAINT "posts_pkey" PRIMARY KEY ("id")\n  );\n\nCREATE TABLE\n  "comments" (\n    "id" SERIAL NOT NULL,\n    "post_id" SERIAL NOT NULL,\n    "account_id" VARCHAR NOT NULL,\n    "block_height" DECIMAL(58, 0) NOT NULL,\n    "content" TEXT NOT NULL,\n    "block_timestamp" DECIMAL(20, 0) NOT NULL,\n    "receipt_id" VARCHAR NOT NULL,\n    CONSTRAINT "comments_pkey" PRIMARY KEY ("id")\n  );\n\nCREATE TABLE\n  "post_likes" (\n    "post_id" SERIAL NOT NULL,\n    "account_id" VARCHAR NOT NULL,\n    "block_height" DECIMAL(58, 0),\n    "block_timestamp" DECIMAL(20, 0) NOT NULL,\n    "receipt_id" VARCHAR NOT NULL,\n    CONSTRAINT "post_likes_pkey" PRIMARY KEY ("post_id", "account_id")\n  );\n\nCREATE UNIQUE INDEX "posts_account_id_block_height_key" ON "posts" ("account_id" ASC, "block_height" ASC);\n\nCREATE UNIQUE INDEX "comments_post_id_account_id_block_height_key" ON "comments" (\n  "post_id" ASC,\n  "account_id" ASC,\n  "block_height" ASC\n);\n\nCREATE INDEX\n  "posts_last_comment_timestamp_idx" ON "posts" ("last_comment_timestamp" DESC);\n\nALTER TABLE\n  "comments"\nADD\n  CONSTRAINT "comments_post_id_fkey" FOREIGN KEY ("post_id") REFERENCES "posts" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION;\n\nALTER TABLE\n  "post_likes"\nADD\n  CONSTRAINT "post_likes_post_id_fkey" FOREIGN KEY ("post_id") REFERENCES "posts" ("id") ON DELETE CASCADE ON UPDATE NO ACTION;\n'})}),"\n",(0,o.jsxs)(n.p,{children:["\uc2a4\ud0a4\ub9c8 \uc815\uc758\uc5d0 \uc120\uc5b8\ub41c \ud14c\uc774\ube14\uc740 \uc778\ub371\uc11c\uac00 \ubc30\ud3ec\ub420 \ub54c \ub9cc\ub4e4\uc5b4\uc9d1\ub2c8\ub2e4. \uc774 \uc2a4\ud0a4\ub9c8 \uc815\uc758\uc5d0\uc11c\ub294 ",(0,o.jsx)(n.code,{children:"posts"}),", ",(0,o.jsx)(n.code,{children:"comments"})," \ubc0f ",(0,o.jsx)(n.code,{children:"post_like"}),"\uc758 \uc138 \uac1c\uc758 \ud14c\uc774\ube14\uc774 \uc0dd\uc131\ub429\ub2c8\ub2e4. \uadf8\ub7f0 \ub2e4\uc74c \uac01 \ud0a4 \uc885\uc18d\uc131 \ubc0f \uc678\ubd80 \ud0a4 \uc885\uc18d\uc131\uc5d0 \ub300\ud574 \uc778\ub371\uc2a4\ub97c \uc815\uc758\ud569\ub2c8\ub2e4."]}),"\n",(0,o.jsx)(n.h2,{id:"\uc8fc\uc694-\ud568\uc218",children:"\uc8fc\uc694 \ud568\uc218"}),"\n",(0,o.jsx)(n.p,{children:"\uc8fc\uc694 \ud568\uc218\ub294 \ub450 \ubd80\ubd84\uc73c\ub85c \uc124\uba85\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uccab \ubc88\uc9f8 \ubd80\ubd84\uc740 \ud30c\uc77c \ubc94\uc704\uc758 \uc55e\ubd80\ubd84\uc5d0 \uc815\uc758\ub41c \ud5ec\ud37c \ud568\uc218\uac00 \ucc98\ub9ac\ud558\ub294 \uad00\ub828 \ud2b8\ub79c\uc7ad\uc158 \ub370\uc774\ud130\ub97c \ud544\ud130\ub9c1\ud558\uace0, \ub450 \ubc88\uc9f8 \ubd80\ubd84\uc740 \uad81\uadf9\uc801\uc73c\ub85c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\uc11c \ucffc\ub9ac\ud558\uae30 \uc704\ud55c \uad00\ub828 \ub370\uc774\ud130\ub97c \uc800\uc7a5\ud558\uae30 \uc704\ud574 \ud5ec\ud37c \ud568\uc218\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4."}),"\n",(0,o.jsx)(n.h3,{id:"\uad00\ub828-\ub370\uc774\ud130-\ud544\ud130\ub9c1",children:"\uad00\ub828 \ub370\uc774\ud130 \ud544\ud130\ub9c1"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:'const SOCIAL_DB = "social.near";\n\n  const nearSocialPosts = block\n    .actions()\n    .filter((action) => action.receiverId === SOCIAL_DB)\n    .flatMap((action) =>\n      action.operations\n        .map((operation) => operation["FunctionCall"])\n        .filter((operation) => operation?.methodName === "set")\n        .map((functionCallOperation) => {\n          try {\n            const decodedArgs = base64decode(functionCallOperation.args);\n            return {\n              ...functionCallOperation,\n              args: decodedArgs,\n              receiptId: action.receiptId,\n            };\n          } catch (error) {\n            console.log(\n              "Failed to decode function call args",\n              functionCallOperation,\n              error\n            );\n          }\n        })\n        .filter((functionCall) => {\n          try {\n            const accountId = Object.keys(functionCall.args.data)[0];\n            return (\n              Object.keys(functionCall.args.data[accountId]).includes("post") ||\n              Object.keys(functionCall.args.data[accountId]).includes("index")\n            );\n          } catch (error) {\n            console.log(\n              "Failed to parse decoded function call",\n              functionCall,\n              error\n            );\n          }\n        })\n    );\n'})}),"\n",(0,o.jsxs)(n.p,{children:["\uba3c\uc800 \uc778\ub371\uc11c\uac00 \uc218\uc9d1\ud55c \ud2b8\ub79c\uc7ad\uc158\uc758 \uc218\uc2e0 \uce21\uc5d0 \uc788\ub294 near \uacc4\uc815 ID\ub97c ",(0,o.jsx)(n.code,{children:'SOCIAL_DB = "social.near"'}),"\ub85c \uc9c0\uc815\ud558\uace0 \ub098\uc911\uc5d0 \uc774 \uac80\uc0ac\uc5d0 \ub300\ud55c \ub3d9\uc77c \uc5f0\uc0b0\uc790\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. This way we only filter for transactions that are relevant to the ",(0,o.jsx)(n.code,{children:"social.near"})," account ID for saving data on-chain."]}),"\n",(0,o.jsxs)(n.p,{children:["\uadf8\ub7f0 \ub2e4\uc74c \ud544\ud130\ub9c1 \ub85c\uc9c1\uc740 ",(0,o.jsx)(n.code,{children:"block.actions()"}),"\ub97c \ud638\ucd9c\ud558\uc5ec \uc2dc\uc791\ud569\ub2c8\ub2e4. \uc774 \ud544\ud130\ub9c1\uc758 \ucd9c\ub825\uc740 \ub098\uc911\uc5d0 \ud5ec\ud37c \ud568\uc218\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d ",(0,o.jsx)(n.code,{children:"nearSocialPosts"})," \ubcc0\uc218\uc5d0 \uc800\uc7a5\ub429\ub2c8\ub2e4. The ",(0,o.jsx)(n.code,{children:".filter()"})," line helps specify for transactions exclusively that have interacted with the SocialDB. ",(0,o.jsx)(n.code,{children:".flatMap()"}),"\uc740 \ud2b8\ub79c\uc7ad\uc158 \uc720\ud615\uc744 \uc9c0\uc815\ud558\uace0 \ud2b8\ub79c\uc7ad\uc158 \ub370\uc774\ud130\uc5d0\uc11c \ud544\ud130\uc758 \uae30\uc900\uc774 \ub420 \uc18d\uc131\uc744 \ucc3e\uc2b5\ub2c8\ub2e4."]}),"\n",(0,o.jsxs)(n.p,{children:["Specifically, ",(0,o.jsx)(n.code,{children:".flatMap()"})," filters for ",(0,o.jsx)(n.code,{children:"FunctionCall"})," call types, calling the ",(0,o.jsx)(n.code,{children:"set"})," method of the SocialDB contract. \ub610\ud55c \ud568\uc218 \ud638\ucd9c \uc778\uc790 \ub370\uc774\ud130\uc5d0 ",(0,o.jsx)(n.code,{children:"receptId"}),"\ub97c \ud3ec\ud568\ud558\uace0 ",(0,o.jsx)(n.code,{children:"post"})," \ub610\ub294 ",(0,o.jsx)(n.code,{children:"index"}),"\ub97c \ud3ec\ud568\ud558\ub294 \ud2b8\ub79c\uc7ad\uc158\uc744 \ucc3e\uc2b5\ub2c8\ub2e4."]}),"\n",(0,o.jsx)(n.h3,{id:"\ud544\ud130\ub9c1\ub41c-\ub370\uc774\ud130-\ucc98\ub9ac",children:"\ud544\ud130\ub9c1\ub41c \ub370\uc774\ud130 \ucc98\ub9ac"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:'if (nearSocialPosts.length > 0) {\n    console.log("Found Near Social Posts in Block...");\n    const blockHeight = block.blockHeight;\n    const blockTimestamp = block.header().timestampNanosec;\n    await Promise.all(\n      nearSocialPosts.map(async (postAction) => {\n        const accountId = Object.keys(postAction.args.data)[0];\n        console.log(`ACCOUNT_ID: ${accountId}`);\n\n        // if creates a post\n        if (\n          postAction.args.data[accountId].post &&\n          Object.keys(postAction.args.data[accountId].post).includes("main")\n        ) {\n          console.log("Creating a post...");\n          await handlePostCreation(\n            ... // arguments required for handlePostCreation\n          );\n        } else if (\n          postAction.args.data[accountId].post &&\n          Object.keys(postAction.args.data[accountId].post).includes("comment")\n        ) {\n          // if creates a comment\n          await handleCommentCreation(\n            ... // arguments required for handleCommentCreation\n          );\n        } else if (\n          Object.keys(postAction.args.data[accountId]).includes("index")\n        ) {\n          // Probably like or unlike action is happening\n          if (\n            Object.keys(postAction.args.data[accountId].index).includes("like")\n          ) {\n            console.log("handling like");\n            await handleLike(\n              ... // arguments required for handleLike\n            );\n          }\n        }\n      })\n    );\n  }\n'})}),"\n",(0,o.jsxs)(n.p,{children:["\uc774 \ub85c\uc9c1\uc740 ",(0,o.jsx)(n.code,{children:"nearSocialPosts"}),"\uac00 \uc788\uc744 \uacbd\uc6b0\uc5d0\ub9cc \uc2e4\ud589\ub418\uba70, \uc774 \uacbd\uc6b0 \uba3c\uc800 \ub370\uc774\ud130\ub97c \ub2e4\ub8e8\ub294(\ubcc0\ud658 \ubc0f \uc720\uc9c0) \uac83\uacfc \uad00\ub828 \uc788\ub294 ",(0,o.jsx)(n.code,{children:"blockHeight"})," \ubc0f",(0,o.jsx)(n.code,{children:"blockTimestamp"})," \ubcc0\uc218\ubd80\ud130 \uc120\uc5b8\ud569\ub2c8\ub2e4. \uadf8\ub7f0 \ub2e4\uc74c \ubaa8\ub4e0 \ud2b8\ub79c\uc7ad\uc158(\ub610\ub294 \ud568\uc218 \ud638\ucd9c)\uc5d0 \ub300\ud55c \ucc98\ub9ac\uac00 \ube44\ub3d9\uae30 \uc2e4\ud589\uc5d0 \ub300\ud55c Promise\ub85c \uc5f0\uacb0\ub429\ub2c8\ub2e4."]}),"\n",(0,o.jsxs)(n.p,{children:["\ubaa8\ub4e0 Promise \ub0b4\uc5d0\uc11c \ud638\ucd9c\uc744 \uc218\ud589\ud558\ub294 ",(0,o.jsx)(n.code,{children:"accountId"}),"\uac00 \ud2b8\ub79c\uc7ad\uc158 \ub370\uc774\ud130\uc5d0\uc11c \uba3c\uc800 \ucd94\ucd9c\ub429\ub2c8\ub2e4. \uadf8\ub7f0 \ub2e4\uc74c \ud2b8\ub79c\uc7ad\uc158 \ub370\uc774\ud130\uc758 \uc18d\uc131\uc5d0 \ub530\ub77c \ud3ec\uc2a4\ud2b8 \uc791\uc131, \ub313\uae00 \uc791\uc131 \ub4f1\uc744 \ucc98\ub9ac\ud558\ub294 \ub85c\uc9c1\uc774 \uc788\uc2b5\ub2c8\ub2e4."]}),"\n",(0,o.jsx)(n.h2,{id:"\ud5ec\ud37c-\ud568\uc218",children:"\ud5ec\ud37c \ud568\uc218"}),"\n",(0,o.jsx)(n.h3,{id:"base64decode",children:(0,o.jsx)(n.code,{children:"base64decode"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:'function base64decode(encodedValue) {\n    let buff = Buffer.from(encodedValue, "base64");\n    return JSON.parse(buff.toString("utf-8"));\n  }\n'})}),"\n",(0,o.jsxs)(n.p,{children:["\uc774 \ud568\uc218\ub294 Base64 \ud615\uc2dd\uc73c\ub85c \uc778\ucf54\ub529\ub41c \ubb38\uc790\uc5f4\uc744 \ub514\ucf54\ub529\ud569\ub2c8\ub2e4. \ub514\ucf54\ub529\ud560 Base64 \uc778\ucf54\ub529 \ubb38\uc790\uc5f4\uc778 **",(0,o.jsx)(n.code,{children:"encodedValue"}),"**\uc774\ub77c\ub294 \ub2e8\uc77c \uc778\uc790\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. \uc774 \ud568\uc218\ub294 \ub514\ucf54\ub529\ub41c \ubb38\uc790\uc5f4\uc744 JavaScript \uac1d\uccb4\ub85c \ubc18\ud658\ud569\ub2c8\ub2e4. \ud2b9\ud788:"]}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"Buffer.from()"})})," \uba54\uc11c\ub4dc\ub294 ",(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"encodedValue"})})," \uc640 **",(0,o.jsx)(n.code,{children:'"base64"'}),"**\uc758 \ub450 \uac00\uc9c0 \uc778\uc218\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud638\ucd9c\ub429\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 ",(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"encodedValue"})})," \ubb38\uc790\uc5f4\uc5d0\uc11c \uc0c8 ",(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"Buffer"})})," \uac1d\uccb4\uac00 \uc0dd\uc131\ub418\uace0 \uc778\ucf54\ub529 \ud615\uc2dd\uc774 Base64\uc784\uc744 \uc9c0\uc815\ud569\ub2c8\ub2e4."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"JSON.parse()"})})," \uba54\uc11c\ub4dc\ub294 ",(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"Buffer"})})," \uac1d\uccb4\ub97c \uc778\uc790\ub85c \ubc18\ud658\ud55c \uc0c1\ud0dc\uc5d0\uc11c \ud638\ucd9c\ub429\ub2c8\ub2e4. \uc774\uac83\uc740 ",(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"Buffer"})})," \uac1d\uccb4\ub97c JSON \ubb38\uc790\uc5f4\ub85c \ud30c\uc2f1\ud558\uace0 JavaScript \uac1d\uccb4\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4."]}),"\n",(0,o.jsxs)(n.li,{children:["** ",(0,o.jsx)(n.code,{children:"toString()"}),"** \uba54\uc11c\ub4dc\ub294 ",(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"Buffer"})})," \uac1d\uccb4\uc5d0\uc11c **",(0,o.jsx)(n.code,{children:'"utf-8"'}),"**\uc744 \uc778\uc790\ub85c \ud558\uc5ec \ud638\ucd9c\ub429\ub2c8\ub2e4. \uc774\ub294 ",(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"Buffer"})})," \uac1d\uccb4\ub97c UTF-8 \ud615\uc2dd\uc758 \ubb38\uc790\uc5f4\ub85c \ubcc0\ud658\ud569\ub2c8\ub2e4."]}),"\n",(0,o.jsx)(n.li,{children:"\uacb0\uacfc \ubb38\uc790\uc5f4\uc740 JavaScript \uac1d\uccb4\ub85c \ubc18\ud658\ub429\ub2c8\ub2e4."}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"handlepostcreation",children:(0,o.jsx)(n.code,{children:"handlePostCreation"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"async function handlePostCreation(\n    accountId,\n    blockHeight,\n    blockTimestamp,\n    receiptId,\n    content\n  ) {\n    try {\n      const postData = {\n        account_id: accountId,\n        block_height: blockHeight,\n        block_timestamp: blockTimestamp,\n        content: content,\n        receipt_id: receiptId,\n      };\n\n      // Call GraphQL mutation to insert a new post\n      await context.db.Posts.insert(postData);\n\n      console.log(`Post by ${accountId} has been added to the database`);\n    } catch (e) {\n      console.log(\n        `Failed to store post by ${accountId} to the database (perhaps it is already stored)`\n      );\n    }\n  }\n"})}),"\n",(0,o.jsxs)(n.p,{children:["\uc2a4\ud0a4\ub9c8\uc5d0 \uc815\uc758\ub41c ",(0,o.jsx)(n.code,{children:"posts"})," \ud14c\uc774\ube14\uc744 \ucc44\uc6b0\ub294 \uad00\ub828 \ub370\uc774\ud130\uac00 \ud3ec\ud568\ub41c \uac1d\uccb4\uac00 \uba3c\uc800 \uc0dd\uc131\ub41c \ub2e4\uc74c, graphQL ",(0,o.jsx)(n.code,{children:"createPost()"})," \ucffc\ub9ac\ub85c \uc804\ub2ec\ub418\uc5b4 \ud14c\uc774\ube14\uc5d0 \uc0c8 \ud589\uc744 \ub9cc\ub4ed\ub2c8\ub2e4."]}),"\n",(0,o.jsx)(n.h3,{id:"handlecommentcreation",children:(0,o.jsx)(n.code,{children:"handleCommentCreation"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:'async function handleCommentCreation(\n    accountId,\n    blockHeight,\n    blockTimestamp,\n    receiptId,\n    commentString\n  ) {\n    try {\n      const comment = JSON.parse(commentString);\n      const postAuthor = comment.item.path.split("/")[0];\n      const postBlockHeight = comment.item.blockHeight;\n\n      // find post to retrieve Id or print a warning that we don\'t have it\n      try {\n        // Call GraphQL query to fetch posts that match specified criteria\n        const posts = await context.db.Posts.select(\n          { account_id: postAuthor, block_height: postBlockHeight },\n          1\n        );\n        console.log(`posts: ${JSON.stringify(posts)}`);\n        if (posts.length === 0) {\n          return;\n        }\n\n        const post = posts[0];\n\n        try {\n          delete comment["item"];\n          const commentData = {\n            account_id: accountId,\n            receipt_id: receiptId,\n            block_height: blockHeight,\n            block_timestamp: blockTimestamp,\n            content: JSON.stringify(comment),\n            post_id: post.id,\n          };\n          // Call GraphQL mutation to insert a new comment\n          await context.db.Comments.insert(commentData);\n\n          // Update last comment timestamp in Post table\n          const currentTimestamp = Date.now();\n          await context.db.Posts.update(\n            { id: post.id },\n            { last_comment_timestamp: currentTimestamp }\n          );\n          console.log(`Comment by ${accountId} has been added to the database`);\n        } catch (e) {\n          console.log(\n            `Failed to store comment to the post ${postAuthor}/${postBlockHeight} by ${accountId} perhaps it has already been stored. Error ${e}`\n          );\n        }\n      } catch (e) {\n        console.log(\n          `Failed to store comment to the post ${postAuthor}/${postBlockHeight} as we don\'t have the post stored.`\n        );\n      }\n    } catch (error) {\n      console.log("Failed to parse comment content. Skipping...", error);\n    }\n  }\n'})}),"\n",(0,o.jsxs)(n.p,{children:["\ub313\uae00\uc744 \uc800\uc7a5\ud558\uac70\ub098 \uc791\uc131\ud558\ub824\uba74 \uba3c\uc800 \uad00\ub828 \uac8c\uc2dc\ubb3c\uc744 \uac00\uc838\uc635\ub2c8\ub2e4. \uac8c\uc2dc\ubb3c\uc744 \ucc3e\uc744 \uc218 \uc5c6\uc73c\uba74 \ub313\uae00\uc774 \uc0dd\uc131\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. graphQL DB\uc5d0 \uc0dd\uc131\ub41c \uac8c\uc2dc\ubb3c\uc774 \uc788\ub294 \uacbd\uc6b0, ",(0,o.jsx)(n.code,{children:"mutationData"})," \uac1d\uccb4\ub294 ",(0,o.jsx)(n.code,{children:"comments"})," \ud14c\uc774\ube14\uc5d0 \ud589\uc744 \ucd94\uac00\ud558\ub294 ",(0,o.jsx)(n.code,{children:"createComment()"})," graphQL \ucffc\ub9ac\uc5d0 \ub300\ud574 \uc0dd\uc131\ub429\ub2c8\ub2e4. \uc774 \ud589\uc774 \ucd94\uac00\ub418\uba74 ",(0,o.jsx)(n.code,{children:"posts"})," \ud14c\uc774\ube14\uc758 \uad00\ub828 \ud589\uc774 \uc774 \ub313\uae00\uc758 \ud0c0\uc784\uc2a4\ud0ec\ud504\ub85c \uc5c5\ub370\uc774\ud2b8\ub429\ub2c8\ub2e4."]}),"\n",(0,o.jsx)(n.h3,{id:"handlelike",children:(0,o.jsx)(n.code,{children:"handleLike"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:'async function handleLike(\n    accountId,\n    blockHeight,\n    blockTimestamp,\n    receiptId,\n    likeContent\n  ) {\n    try {\n      const like = JSON.parse(likeContent);\n      const likeAction = like.value.type; // like or unlike\n      const [itemAuthor, _, itemType] = like.key.path.split("/", 3);\n      const itemBlockHeight = like.key.blockHeight;\n      console.log("handling like", receiptId, accountId);\n      switch (itemType) {\n        case "main":\n          try {\n            const posts = await context.db.Posts.select(\n              { account_id: itemAuthor, block_height: itemBlockHeight },\n              1\n            );\n            if (posts.length == 0) {\n              return;\n            }\n\n            const post = posts[0];\n            switch (likeAction) {\n              case "like":\n                await _handlePostLike(\n                  post.id,\n                  accountId,\n                  blockHeight,\n                  blockTimestamp,\n                  receiptId\n                );\n                break;\n              case "unlike":\n                await _handlePostUnlike(post.id, accountId);\n                break;\n            }\n          } catch (e) {\n            console.log(\n              `Failed to store like to post ${itemAuthor}/${itemBlockHeight} as we don\'t have it stored in the first place.`\n            );\n          }\n          break;\n        case "comment":\n          // Comment\n          console.log(`Likes to comments are not supported yet. Skipping`);\n          break;\n        default:\n          // something else\n          console.log(`Got unsupported like type "${itemType}". Skipping...`);\n          break;\n      }\n    } catch (error) {\n      console.log("Failed to parse like content. Skipping...", error);\n    }\n  }\n'})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"handleCommentCreation"}),"\uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c \uba3c\uc800 DB \uc800\uc7a5\uc18c\uc5d0\uc11c \uad00\ub828 \uac8c\uc2dc\ubb3c\uc744 \ucc3e\uc2b5\ub2c8\ub2e4. \ub9cc\uc57d \uad00\ub828 \uac8c\uc2dc\ubb3c\uc744 \ucc3e\uc73c\uba74, \ub85c\uc9c1\uc740 \uc774\uc5d0 \ub300\ud574 \uc88b\uc544\uc694 \ud639\uc740 \uc2eb\uc5b4\uc694\ub97c \ub204\ub97c\uc9c0\uc5d0 \ub300\ud55c \ubd80\ubd84\uc73c\ub85c \ub118\uc5b4\uac11\ub2c8\ub2e4."]}),"\n",(0,o.jsx)(n.h3,{id:"_handlepostlike",children:(0,o.jsx)(n.code,{children:"_handlePostLike"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"async function _handlePostLike(\n    postId,\n    likeAuthorAccountId,\n    likeBlockHeight,\n    blockTimestamp,\n    receiptId\n  ) {\n    try {\n      const posts = await context.db.Posts.select({ id: postId });\n      if (posts.length == 0) {\n        return;\n      }\n      const post = posts[0];\n      let accountsLiked =\n        post.accounts_liked.length === 0\n          ? post.accounts_liked\n          : JSON.parse(post.accounts_liked);\n\n      if (accountsLiked.indexOf(likeAuthorAccountId) === -1) {\n        accountsLiked.push(likeAuthorAccountId);\n      }\n\n      // Call GraphQL mutation to update a post's liked accounts list\n      await context.db.Posts.update(\n        { id: postId },\n        { accounts_liked: JSON.stringify(accountsLiked) }\n      );\n\n      const postLikeData = {\n        post_id: postId,\n        account_id: likeAuthorAccountId,\n        block_height: likeBlockHeight,\n        block_timestamp: blockTimestamp,\n        receipt_id: receiptId,\n      };\n      // Call GraphQL mutation to insert a new like for a post\n      await context.db.PostLikes.insert(postLikeData);\n    } catch (e) {\n      console.log(`Failed to store like to in the database: ${e}`);\n    }\n  }\n"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"handleLike"}),"\uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c \uad00\ub828 ",(0,o.jsx)(n.code,{children:"post"}),"\ub294 ",(0,o.jsx)(n.code,{children:"schema.sql"}),"\uc5d0 \uc815\uc758\ub41c graphQL DB \ud14c\uc774\ube14\uc5d0\uc11c \uba3c\uc800 \uac80\uc0c9\ub429\ub2c8\ub2e4. \uac8c\uc2dc\ubb3c\uc774 \ubc1c\uacac\ub418\uba74 ",(0,o.jsx)(n.code,{children:"accountsLiked"})," \ubc30\uc5f4\uc740 \uac8c\uc2dc\ubb3c\uc758 \uc774\uc804 \ubc30\uc5f4\uacfc ",(0,o.jsx)(n.code,{children:"accountsLiked.push(likeAuthorAccountId)"})," \ub0b4 \uc88b\uc544\uc694 \uacc4\uc815\uc744 \uc2e4\ud589\ud55c \ucd94\uac00 \uacc4\uc815\uc5d0\uc11c \uc815\uc758\ub429\ub2c8\ub2e4. \uadf8\ub7f0 \ub2e4\uc74c graphQL \ucffc\ub9ac\ub294 \uc774 \uc815\ubcf4\ub97c \ud3ec\ud568\ud558\ub3c4\ub85d ",(0,o.jsx)(n.code,{children:"posts"})," \ud14c\uc774\ube14\uc744 \uc5c5\ub370\uc774\ud2b8\ud569\ub2c8\ub2e4. \ub9c8\uc9c0\ub9c9\uc73c\ub85c, ",(0,o.jsx)(n.code,{children:"postLikeMutation"})," \uac1d\uccb4\ub294 ",(0,o.jsx)(n.code,{children:"post_like_like"})," \ud14c\uc774\ube14\uc5d0 \uc0c8 \ud589\uc744 \ucd94\uac00\ud558\ub294 \ub370 \ud544\uc694\ud55c \ub370\uc774\ud130\ub85c \uc0dd\uc131\ub429\ub2c8\ub2e4."]}),"\n",(0,o.jsx)(n.h3,{id:"_handlepostunlike",children:(0,o.jsx)(n.code,{children:"_handlePostUnlike"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"async function _handlePostUnlike(postId, likeAuthorAccountId) {\n    try {\n      const posts = await context.db.Posts.select({ id: postId });\n      if (posts.length == 0) {\n        return;\n      }\n      const post = posts[0];\n      let accountsLiked =\n        post.accounts_liked.length === 0\n          ? post.accounts_liked\n          : JSON.parse(post.accounts_liked);\n\n      console.log(accountsLiked);\n\n      let indexOfLikeAuthorAccountIdInPost =\n        accountsLiked.indexOf(likeAuthorAccountId);\n      if (indexOfLikeAuthorAccountIdInPost > -1) {\n        accountsLiked.splice(indexOfLikeAuthorAccountIdInPost, 1);\n        // Call GraphQL mutation to update a post's liked accounts list\n        await context.db.Posts.update(\n          { id: postId },\n          { accounts_liked: JSON.stringify(accountsLiked) }\n        );\n      }\n      // Call GraphQL mutation to delete a like for a post\n      await context.db.PostLikes.delete({\n        account_id: likeAuthorAccountId,\n        post_id: postId,\n      });\n    } catch (e) {\n      console.log(`Failed to delete like from the database: ${e}`);\n    }\n  }\n"})}),"\n",(0,o.jsxs)(n.p,{children:["\uc5ec\uae30\uc11c\ub294 \ub610\ud55c ",(0,o.jsx)(n.code,{children:"posts"}),"\ud14c\uc774\ube14\uc5d0\uc11c \uae30\uc874 \uad00\ub828 \uac8c\uc2dc\ubb3c\uc744 \uac80\uc0c9\ud558\uace0, \ud574\ub2f9 \uac8c\uc2dc\ubb3c\uc774 \ubc1c\uacac\ub418\uba74 ",(0,o.jsx)(n.code,{children:"accountsLiked"}),"\ub294 \ub3d9\uc77c\ud55c \uc791\uc5c5\uc744 \uc218\ud589\ud55c \uacc4\uc815\uc758 \uacc4\uc815 ID\ub97c \uc81c\uac70\ud558\uc5ec \uc5c5\ub370\uc774\ud2b8\ud558\ub294 \uac83\uc73c\ub85c \uc815\uc758\ub429\ub2c8\ub2e4. \uadf8\ub7f0 \ub2e4\uc74c graphQL ",(0,o.jsx)(n.code,{children:"delete"})," \ucffc\ub9ac\ub97c \ud638\ucd9c\ud558\uc5ec ",(0,o.jsx)(n.code,{children:"post_likes"})," \ud14c\uc774\ube14\uc5d0\uc11c like\ub97c \uc81c\uac70\ud569\ub2c8\ub2e4."]}),"\n",(0,o.jsx)(n.h2,{id:"querying-data-from-the-indexer",children:"Querying data from the indexer"}),"\n",(0,o.jsx)(n.p,{children:"The final step is querying the indexer using the public GraphQL API. This can be done by writing a GraphQL query using the GraphiQL tab in the code editor."}),"\n",(0,o.jsxs)(n.p,{children:["For example, here's a query that fetches ",(0,o.jsx)(n.code,{children:"likes"})," from the ",(0,o.jsx)(n.em,{children:"Feed Indexer"}),", ordered by ",(0,o.jsx)(n.code,{children:"block_height"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-graphql",children:"query MyQuery {\n  <user-name>_near_feed_indexer_post_likes(order_by: {block_height: desc}) {\n    account_id\n    block_height\n    post_id\n  }\n}\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Once you have defined your query, you can use the GraphiQL Code Exporter to auto-generate a JavaScript or NEAR Widget code snippet. The exporter will create a helper method ",(0,o.jsx)(n.code,{children:"fetchGraphQL"})," which will allow you to fetch data from the indexer's GraphQL API. It takes three parameters:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"operationsDoc"}),": A string containing the queries you would like to execute."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"operationName"}),": The specific query you want to run."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"variables"}),": Any variables to pass in that your query supports, such as ",(0,o.jsx)(n.code,{children:"offset"})," and ",(0,o.jsx)(n.code,{children:"limit"})," for pagination."]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Next, you can call the ",(0,o.jsx)(n.code,{children:"fetchGraphQL"})," function with the appropriate parameters and process the results."]}),"\n",(0,o.jsxs)(n.p,{children:["Here's the complete code snippet for a NEAR component using the ",(0,o.jsx)(n.em,{children:"Feed Indexer"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:'const QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql/`;\n\nState.init({\ndata: []\n});\n\nconst query = `query MyFeedQuery {\n    <user-name>_near_feed_indexer_post_likes(order_by: {block_height: desc}) {\n      account_id\n      block_height\n      post_id\n    }\n  }`\n\nfunction fetchGraphQL(operationsDoc, operationName, variables) {\n      return asyncFetch(\n        QUERYAPI_ENDPOINT,\n        {\n          method: "POST",\n          headers: { "x-hasura-role": `<user-name>_near` },\n          body: JSON.stringify({\n            query: operationsDoc,\n            variables: variables,\n            operationName: operationName,\n          }),\n        }\n      );\n    }\n\nfetchGraphQL(query, "MyFeedQuery", {}).then((result) => {\n  if (result.status === 200) {\n    if (result.body.data) {\n      const data = result.body.data.<user-name>_near_feed_indexer_post_likes;\n      State.update({ data })\n      console.log(data);\n    }\n  }\n});\n\nconst renderData = (a) => {\n  return (\n    <div key={JSON.stringify(a)}>\n        {JSON.stringify(a)}\n    </div>\n  );\n};\n\nconst renderedData = state.data.map(renderData);\nreturn (\n  {renderedData}\n);\n'})}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsxs)(n.p,{children:["To view a more complex example, see this widget which fetches posts with proper pagination: ",(0,o.jsx)(n.a,{href:"https://dev.near.org/edit/roshaan.near/widget/query-api-feed-infinite",children:"Posts Widget powered By QueryAPI"}),"."]})})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>c});var o=t(67294);const i={},s=o.createContext(i);function c(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);