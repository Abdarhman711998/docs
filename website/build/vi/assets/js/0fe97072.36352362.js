"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6434],{81031:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>l});var a=n(85893),r=n(11151);const s={id:"marketplace",title:"Integrating FT Payments into an NFT Marketplace",sidebar_label:"Adding FTs to a Marketplace"},o=void 0,i={id:"tutorials/fts/marketplace",title:"Integrating FT Payments into an NFT Marketplace",description:"In this tutorial, you'll learn the basics of how an NFT marketplace contract works and how you can modify it to allow for purchasing NFTs using Fungible Tokens. In the previous tutorials, you went through and created a fully fledged FT contract that incorporates all the standards found in the FT standard.",source:"@site/i18n/vi/docusaurus-plugin-content-docs/current/3.tutorials/fts/6-marketplace.md",sourceDirName:"3.tutorials/fts",slug:"/tutorials/fts/marketplace",permalink:"/vi/tutorials/fts/marketplace",draft:!1,unlisted:!1,editUrl:"https://github.com/near/docs/edit/master/website/../docs/3.tutorials/fts/6-marketplace.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{id:"marketplace",title:"Integrating FT Payments into an NFT Marketplace",sidebar_label:"Adding FTs to a Marketplace"},sidebar:"contracts",previous:{title:"Transferring FTs",permalink:"/vi/tutorials/fts/transfers"},next:{title:"Crossword Game Overview",permalink:"/vi/tutorials/crosswords/basics/overview"}},c={},l=[{value:"Gi\u1edbi thi\u1ec7u",id:"gi\u1edbi-thi\u1ec7u",level:2},{value:"C\u1ea5u tr\xfac file",id:"file-structure",level:2},{value:"Hi\u1ec3u v\u1ec1 contract",id:"hi\u1ec3u-v\u1ec1-contract",level:2},{value:"Purchasing Flow",id:"purchasing-flow",level:3},{value:"Looking at the Code",id:"looking-at-the-code",level:2},{value:"Main Library File",id:"main-library-file",level:3},{value:"Initialization function",id:"initialization-function",level:3},{value:"Model qu\u1ea3n l\xfd storage",id:"storage-management-model",level:3},{value:"FT Deposits",id:"ft-deposits",level:2},{value:"Mua c\xe1c NFT",id:"mua-c\xe1c-nft",level:2},{value:"View Methods",id:"view-methods",level:2},{value:"Testing",id:"testing",level:2},{value:"Deploying and Initializing the Contracts",id:"deploying-and-initializing-the-contracts",level:3},{value:"Placing a Token For Sale",id:"placing-a-token-for-sale",level:3},{value:"Deposit FTs into the Marketplace",id:"deposit-fts-into-the-marketplace",level:3},{value:"Purchasing the NFT",id:"purchasing-the-nft",level:3},{value:"Withdrawing the Excess Deposits",id:"withdrawing-the-excess-deposits",level:3},{value:"T\u1ed5ng k\u1ebft",id:"t\u1ed5ng-k\u1ebft",level:2}];function h(e){const t={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(t.p,{children:["In this tutorial, you'll learn the basics of how an NFT marketplace contract works and how you can modify it to allow for purchasing NFTs using Fungible Tokens. In the previous tutorials, you went through and created a fully fledged FT contract that incorporates all the standards found in the ",(0,a.jsx)(t.a,{href:"https://nomicon.io/Standards/Tokens/FungibleToken/Core",children:"FT standard"}),"."]}),"\n",(0,a.jsx)(t.h2,{id:"gi\u1edbi-thi\u1ec7u",children:"Gi\u1edbi thi\u1ec7u"}),"\n",(0,a.jsx)(t.p,{children:"Th\xf4ng qua h\u01b0\u1edbng d\u1eabn n\xe0y, b\u1ea1n s\u1ebd h\u1ecdc c\xe1ch m\u1ed9t marketplace contract s\u1ebd l\xe0m vi\u1ec7c tr\xean NEAR. \u0110\xe2y \u0111\u01b0\u1ee3c xem l\xe0 m\u1ed9t v\xed d\u1ee5 v\xe0 kh\xf4ng c\xf3 tri\u1ec3n khai ch\xednh t\u1eafc n\xe0o. Vui l\xf2ng t\xe1ch branch v\xe0 s\u1eeda \u0111\u1ed5i contract n\xe0y \u0111\u1ec3 \u0111\xe1p \u1ee9ng nhu c\u1ea7u c\u1ee5 th\u1ec3 c\u1ee7a b\u1ea1n."}),"\n",(0,a.jsxs)(t.p,{children:["Using the same repository as the previous tutorials, if you visit the ",(0,a.jsx)(t.code,{children:"market-contract"})," directory, you should have the necessary files to complete the tutorial."]}),"\n",(0,a.jsx)(t.h2,{id:"file-structure",children:"C\u1ea5u tr\xfac file"}),"\n",(0,a.jsx)(t.p,{children:"This directory contains both the build script, dependencies as well as the actual contract code as outlined below."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"market-contract\n\u251c\u2500\u2500 Cargo.lock\n\u251c\u2500\u2500 Cargo.toml\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 build.sh\n\u2514\u2500\u2500 src\n    \u251c\u2500\u2500 external.rs\n    \u251c\u2500\u2500 ft_balances.rs\n    \u251c\u2500\u2500 internal.rs\n    \u251c\u2500\u2500 lib.rs\n    \u251c\u2500\u2500 nft_callbacks.rs\n    \u251c\u2500\u2500 sale.rs\n    \u2514\u2500\u2500 sale_views.rs\n"})}),"\n",(0,a.jsx)(t.p,{children:"Let's start by building both the finished FT contract and the marketplace contract. Make sure you're in the root directory and run the following command in your terminal:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"yarn build && cd market-contract && ./build.sh && cd ..\n"})}),"\n",(0,a.jsxs)(t.p,{children:["This will install the dependencies for the marketplace contract as well as the FT contract. In addition, it will compile them to ",(0,a.jsx)(t.code,{children:"wasm"})," such that your ",(0,a.jsx)(t.code,{children:"ft-tutorial/out"})," directory looks like this:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"ft-tutorial\n\u2514\u2500\u2500 out\n    \u251c\u2500\u2500 contract.wasm\n    \u251c\u2500\u2500 nft-contract.wasm\n    \u2514\u2500\u2500 market.wasm\n"})}),"\n",(0,a.jsx)(t.p,{children:"Note that there's also a pre-build nft contract wasm file in the directory which you'll use to place the NFTs for sale."}),"\n",(0,a.jsx)(t.h2,{id:"hi\u1ec3u-v\u1ec1-contract",children:"Hi\u1ec3u v\u1ec1 contract"}),"\n",(0,a.jsxs)(t.p,{children:["The marketplace contract used in this tutorial is a modified version of the contract created at the end of the NFT zero to hero tutorial. If you'd like to learn about the backbone of how the NFTs are put for sale and the process by which they are minted / sold, check out the ",(0,a.jsx)(t.a,{href:"/tutorials/nfts/marketplace",children:"NFT zero to hero tutorial"}),"."]}),"\n",(0,a.jsx)(t.p,{children:"The core functionalities are the same in the sense that both this contract and the marketplace contract built in the NFT zero to hero have the following features:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"Users can put NFTs for sale and specify sale conditions"}),"\n",(0,a.jsx)(t.li,{children:"Users must pay for storage deposit to put NFTs for sale and they can withdraw the storage at any time"}),"\n",(0,a.jsx)(t.li,{children:"Users can update the price of an NFT or remove the sale entirely"}),"\n",(0,a.jsxs)(t.li,{children:["Buyers can purchase the NFTs by calling ",(0,a.jsx)(t.code,{children:"offer"}),"."]}),"\n"]}),"\n",(0,a.jsxs)(t.p,{children:["The only difference is that this marketplace has removed the ability to purchase NFTs for ",(0,a.jsx)(t.code,{children:"$NEAR"})," and instead allows users to buy them with Fungible Tokens. The fungible token is specified when the contract is initialized and only ",(0,a.jsx)(t.strong,{children:"1 type of fungible token"})," can be used to purchase NFTs. You can't, for example, offer 100 Team Tokens for an NFT and 5000 Mike Tokens for another."]}),"\n",(0,a.jsxs)(t.p,{children:["In addition, the marketplace does ",(0,a.jsx)(t.strong,{children:"not"})," support royalties. This is because FT transfers are less Gas efficient than regular $NEAR transfers. In addition, each user would have to be registered and it's much easier to say \"hey seller, make sure you're registered before your NFT is sold\" rather than enforcing that the seller and ",(0,a.jsx)(t.strong,{children:"all"})," accounts in the payout object are registered. When an NFT is sold, the entire price is sent directly to the seller."]}),"\n",(0,a.jsx)(t.h3,{id:"purchasing-flow",children:"Purchasing Flow"}),"\n",(0,a.jsxs)(t.p,{children:['In order to purchase an NFT, the contract utilizes the "transfer and call" workflow that the FT contract provides. The marketplace contract implements the ',(0,a.jsx)(t.code,{children:"ft_on_transfer"})," method that is called whenever someone transfers FTs to the marketplace contract."]}),"\n",(0,a.jsxs)(t.p,{children:["The marketplace keeps track of a balance for each user that outlines how many FTs they've sent to the contract. Each time ",(0,a.jsx)(t.code,{children:"ft_on_transfer"})," is called, the marketplace contract will update the balance for the user. When that user wishes to purchase an NFT, they call ",(0,a.jsx)(t.code,{children:"offer"})," and pass in the amount of tokens they're willing to spend. The marketplace will then decrement from their balance and transfer the NFT to the buyer / send the FTs to the seller."]}),"\n",(0,a.jsxs)(t.p,{children:["It's important to note that the seller ",(0,a.jsx)(t.strong,{children:"must"})," be registered in the FT contract before a sale is made otherwise the ",(0,a.jsx)(t.code,{children:"ft_transfer"})," method will panic and the seller won't receive any tokens."]}),"\n",(0,a.jsx)(t.h2,{id:"looking-at-the-code",children:"Looking at the Code"}),"\n",(0,a.jsxs)(t.p,{children:["Most of the code is the same as what's been outlined in the ",(0,a.jsx)(t.a,{href:"/tutorials/nfts/marketplace",children:"NFT zero to hero tutorial"})," but we'll go through a refresher in case you're new or have forgotten some of the details."]}),"\n",(0,a.jsx)(t.h3,{id:"main-library-file",children:"Main Library File"}),"\n",(0,a.jsxs)(t.p,{children:["Starting at the ",(0,a.jsx)(t.code,{children:"lib.rs"})," file, this outlines what information is stored on the contract as well as some other crucial functions that you'll learn about below."]}),"\n",(0,a.jsx)(t.h3,{id:"initialization-function",children:"Initialization function"}),"\n",(0,a.jsxs)(t.p,{children:["Function \u0111\u1ea7u ti\xean b\u1ea1n s\u1ebd xem l\xe0 initialization function. This takes an ",(0,a.jsx)(t.code,{children:"owner_id"})," as well as the ",(0,a.jsx)(t.code,{children:"ft_id"})," as the parameters and will default all the storage collections to their default values. The ",(0,a.jsx)(t.code,{children:"ft_id"})," outlines the account ID for the fungible token that the contract will allow."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-rust",metastring:"reference",children:"https://github.com/near-examples/ft-tutorial/blob/main/market-contract/src/lib.rs#L94-L118\n"})}),"\n",(0,a.jsx)(t.h3,{id:"storage-management-model",children:"Model qu\u1ea3n l\xfd storage"}),"\n",(0,a.jsx)(t.p,{children:"Ti\u1ebfp theo, h\xe3y n\xf3i v\u1ec1 model qu\u1ea3n l\xfd storage \u0111\u01b0\u1ee3c ch\u1ecdn cho contract n\xe0y. User s\u1ebd c\u1ea7n n\u1ea1p $NEAR v\xe0o trong marketplace \u0111\u1ec3 trang tr\u1ea3i chi ph\xed storage. B\u1ea5t c\u1ee9 khi n\xe0o ai \u0111\xf3 \u0111\u1eb7t NFT \u0111\u1ec3 b\xe1n, marketplace c\u1ea7n l\u01b0u tr\u1eef th\xf4ng tin \u0111\xf3 v\u1edbi gi\xe1 $NEAR. Users can either deposit a large amount of $NEAR so that they never have to worry about storage again or they can deposit the minimum amount to cover 1 sale on an as-needed basis."}),"\n",(0,a.jsx)(t.p,{children:"B\u1ea1n c\xf3 th\u1ec3 \u0111ang ngh\u0129 v\u1ec1 t\xecnh hu\u1ed1ng khi m\u1ed9t m\u1eb7t h\xe0ng \u0111\u01b0\u1ee3c mua. \u0110i\u1ec1u g\xec x\u1ea3y ra v\u1edbi storage hi\u1ec7n \u0111ang \u0111\u01b0\u1ee3c ph\xe1t h\xe0nh tr\xean contract? This is why we have a storage withdrawal function. N\xf3 cho ph\xe9p ng\u01b0\u1eddi d\xf9ng r\xfat b\u1ea5t k\u1ef3 storage d\u01b0 th\u1eeba kh\xf4ng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ebfn. H\xe3y xem qua v\xe0i t\xecnh hu\u1ed1ng \u0111\u1ec3 hi\u1ec3u v\u1ec1 logic n\xe0y. Storage y\xeau c\u1ea7u m\u1ed9t l\u1ea7n sale l\xe0 0.01 NEAR tr\xean marketplace contract."}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.strong,{children:"T\xecnh hu\u1ed1ng A"})}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"Benji mu\u1ed1n \u0111\u01b0a NFT l\xean marketplace nh\u01b0ng anh \u1ea5y ch\u01b0a bao gi\u1edd tr\u1ea3 ti\u1ec1n cho storage."}),"\n",(0,a.jsxs)(t.li,{children:["Anh \u1ea5y n\u1ea1p ch\xednh x\xe1c 0.01 NEAR s\u1eed d\u1ee5ng method ",(0,a.jsx)(t.code,{children:"storage_deposit"}),". N\xf3 s\u1ebd thanh to\xe1n cho 1 l\u1ea7n b\xe1n."]}),"\n",(0,a.jsxs)(t.li,{children:["Anh \u1ea5y \u0111\u01b0a NFT l\xean marketplace v\xe0 b\xe2y gi\u1edd \u0111ang s\u1eed d\u1ee5ng h\u1ebft 1 trong s\u1ed1 1 l\u1ea7n sale \u0111\xe3 \u0111\u01b0\u1ee3c thanh to\xe1n tr\u01b0\u1edbc v\xe0 kh\xf4ng c\xf2n storage. N\u1ebfu anh \u1ea5y call ",(0,a.jsx)(t.code,{children:"storage_withdraw"}),", s\u1ebd kh\xf4ng c\xf3 g\xec x\u1ea3y ra."]}),"\n",(0,a.jsx)(t.li,{children:"Dorian th\xedch NFT c\u1ee7a anh \u1ea5y v\xe0 nhanh ch\xf3ng mua n\xf3 tr\u01b0\u1edbc b\u1ea5t c\u1ee9 ai. \u0110i\u1ec1u n\xe0y c\xf3 ngh\u0129a r\u1eb1ng \u0111\u01a1n h\xe0ng c\u1ee7a Benji b\xe2y gi\u1edd \u0111\xe3 b\u1ecb g\u1ee1 xu\u1ed1ng (k\u1ec3 t\u1eeb khi n\xf3 \u0111\u01b0\u1ee3c mua) v\xe0 Benji \u0111\xe3 s\u1eed d\u1ee5ng 0 trong s\u1ed1 1 l\u1ea7n sale \u0111\xe3 thanh to\xe1n tr\u01b0\u1edbc. N\xf3i c\xe1ch kh\xe1c, anh \u1ea5y \u0111ang th\u1eeba 1 l\u1ea7n sale hay 0.01 NEAR."}),"\n",(0,a.jsxs)(t.li,{children:["Benji b\xe2y gi\u1edd c\xf3 th\u1ec3 call ",(0,a.jsx)(t.code,{children:"storage_withdraw"})," v\xe0 s\u1ebd \u0111\u01b0\u1ee3c chuy\u1ec3n l\u1ea1i 0.01 NEAR cho anh \u1ea5y. V\u1ec1 ph\xeda contract, sau khi r\xfat ti\u1ec1n, anh \u1ea5y s\u1ebd c\xf3 0 l\u1ea7n sale \u0111\u01b0\u1ee3c thanh to\xe1n s\u1ebd c\u1ea7n ph\u1ea3i n\u1ea1p ti\u1ec1n storage tr\u01b0\u1edbc khi ni\xeam y\u1ebft th\xeam NFT."]}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.strong,{children:"T\xecnh hu\u1ed1ng B"})}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"Dorian s\u1edf h\u1eefu m\u1ed9t tr\u0103m NFT r\u1ea5t \u0111\u1eb9p v\xe0 anh ta mu\u1ed1n ni\xeam y\u1ebft to\xe0n b\u1ed9."}),"\n",(0,a.jsxs)(t.li,{children:["\u0110\u1ec3 tr\xe1nh ph\u1ea3i g\u1ecdi ",(0,a.jsx)(t.code,{children:"storage_deposit"})," m\u1ed7i khi mu\u1ed1n ni\xeam y\u1ebft m\u1ed9t NFT, anh \u1ea5y s\u1ebd g\u1ecdi n\xf3 m\u1ed9t l\u1ea7n. V\xec Dorian l\xe0 m\u1ed9t ng\u01b0\u1eddi c\xf3 ti\u1ec1n, anh \u0111\xe3 \u0111\xe3 \u0111\xednh k\xe8m 10 NEAR \u0111\u1ee7 \u0111\u1ec3 thanh to\xe1n cho 1000 l\u1ea7n sale. B\xe2y gi\u1edd anh \u1ea5y th\u1eeba 9 NEAR hay 900 l\u1ea7n sale."]}),"\n",(0,a.jsxs)(t.li,{children:["Dorian c\u1ea7n 9 NEAR \u0111\u1ec3 \u0111\u1ec3 l\xe0m g\xec \u0111\xf3 nh\u01b0ng anh \u1ea5y kh\xf4ng mu\u1ed1n g\u1ee1 100 NFT \u0111ang ni\xeam y\u1ebft. B\u1edfi v\xec anh \u1ea5y c\xf3 th\u1eeba 9 NEAR, anh \u1ea5y c\xf3 th\u1ec3 d\u1ec5 d\xe0ng r\xfat v\xe0 v\u1eabn c\xf3 100 NFT \u0111ang ni\xeam y\u1ebft. Sau khi call ",(0,a.jsx)(t.code,{children:"storage_withdraw"})," v\xe0 \u0111\u01b0\u1ee3c chuy\u1ec3n 9 NEAR, anh \u1ea5y c\xf3 0 l\u1ea7n sale \u0111ang th\u1eeba."]}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"Suy ngh\u0129 v\u1ec1 h\xe0nh vi n\xe0y, hai function d\u01b0\u1edbi \u0111\xe2y ph\xe1c th\u1ea3o logic."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-rust",metastring:"reference",children:"https://github.com/near-examples/ft-tutorial/blob/main/market-contract/src/lib.rs#L120-L183\n"})}),"\n",(0,a.jsxs)(t.p,{children:["Trong contract n\xe0y, storage y\xeau c\u1ea7u 0.01 NEAR cho m\u1ed7i l\u1ea7n sale nh\u01b0ng b\u1ea1n c\xf3 th\u1ec3 truy v\u1ea5n th\xf4ng tin \u0111\xf3 s\u1eed d\u1ee5ng function ",(0,a.jsx)(t.code,{children:"storage_minimum_balance"}),". Ngo\xe0i ra, b\u1ea1n c\xf3 th\u1ec3 truy v\u1ea5n function ",(0,a.jsx)(t.code,{children:"storage_balance_of"})," \u0111\u1ec3 ki\u1ec3m tra m\u1ed9t t\xe0i kho\u1ea3n n\xe0o \u0111\xf3 \u0111\xe3 thanh to\xe1n bao nhi\xeau storage."]}),"\n",(0,a.jsx)(t.h2,{id:"ft-deposits",children:"FT Deposits"}),"\n",(0,a.jsxs)(t.p,{children:["If you want to learn more about how NFTs are put for sale, check out the ",(0,a.jsx)(t.a,{href:"/tutorials/nfts/marketplace",children:"NFT zero to hero tutorial"}),". Once NFTs are put for sale, the owner has three options:"]}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"Update the price of the NFT"}),"\n",(0,a.jsx)(t.li,{children:"Remove the sale from the marketplace"}),"\n",(0,a.jsx)(t.li,{children:"Wait for somebody to purchase it"}),"\n"]}),"\n",(0,a.jsxs)(t.p,{children:["In order to purchase NFTs, buyers need to deposit FTs in the contract and call the ",(0,a.jsx)(t.code,{children:"offer"})," function. All the logic for FT deposits is outlined in the ",(0,a.jsx)(t.code,{children:"src/ft_balances.rs"})," file. Starting with the ",(0,a.jsx)(t.code,{children:"ft_on_approve"})," function, this is called when a user transfers FTs to the marketplace contract. The logic can be seen below."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-rust",metastring:"reference",children:"https://github.com/near-examples/ft-tutorial/blob/main/market-contract/src/ft_balances.rs#L35-L77\n"})}),"\n",(0,a.jsxs)(t.p,{children:["Once FTs are deposited into the contract, users can either withdraw their FTs or they can use them to purchase NFTs. The withdrawing flow is outlined in the ",(0,a.jsx)(t.code,{children:"ft_withdraw"})," function. It's important to note that you should decrement the user's balance ",(0,a.jsx)(t.strong,{children:"before"})," calling the ",(0,a.jsx)(t.code,{children:"ft_transfer"})," function to avoid a common exploit scenario where a user spams the ",(0,a.jsx)(t.code,{children:"ft_withdraw"}),". If you were to decrement their balance in the callback function (if the transfer was successful), they could spam the ",(0,a.jsx)(t.code,{children:"ft_withdraw"})," during the time it takes the callback function to execute. A better pattern is to decrement their balance before the transfer and then if the promise was *",(0,a.jsx)(t.em,{children:"unsuccessful"}),", revert the balance back to what it was before."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-rust",metastring:"reference",children:"https://github.com/near-examples/ft-tutorial/blob/main/market-contract/src/ft_balances.rs#L79-L149\n"})}),"\n",(0,a.jsx)(t.h2,{id:"mua-c\xe1c-nft",children:"Mua c\xe1c NFT"}),"\n",(0,a.jsxs)(t.p,{children:["Now that you're familiar with the process of both adding storage and depositing FTs on the marketplace, let's go through what you can do once a sale has been listed. The ",(0,a.jsx)(t.code,{children:"src/sale.rs"})," file outlines the functions for updating the price, removing, and purchasing NFTs. In this tutorial, we'll focus ",(0,a.jsx)(t.strong,{children:"only"})," on the purchasing flow. If you'd like to learn about the sale objects, updating the price, and removing a sale, check out the ",(0,a.jsx)(t.a,{href:"/tutorials/nfts/marketplace",children:"NFT zero to hero tutorial"}),"."]}),"\n",(0,a.jsxs)(t.p,{children:["\u0110\u1ec3 mua c\xe1c NFT, b\u1ea1n ph\u1ea3i call function ",(0,a.jsx)(t.code,{children:"offer"}),". It takes an ",(0,a.jsx)(t.code,{children:"nft_contract_id"}),", ",(0,a.jsx)(t.code,{children:"token_id"}),", and the amount you wish to offer as parameters. Behind the scenes, this function will make sure your offer amount is greater than the list price and also that you have enough FTs deposited. It will then call a private method ",(0,a.jsx)(t.code,{children:"process_purchase"})," which will perform a cross-contract call to the NFT contract to invoke the ",(0,a.jsx)(t.code,{children:"nft_transfer"})," function where the NFT will be transferred to the seller."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-rust",metastring:"reference",children:"https://github.com/near-examples/ft-tutorial/blob/main/market-contract/src/sale.rs#L67-L144\n"})}),"\n",(0,a.jsxs)(t.p,{children:["Once the transfer is complete, the contract will call ",(0,a.jsx)(t.code,{children:"resolve_purchase"})," where it will check the status of the transfer.If the transfer succeeded, it will send the FTs to the seller. If the transfer didn't succeed, it will increment the buyer's FT balance (acting as a refund)."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-rust",metastring:"reference",children:"https://github.com/near-examples/ft-tutorial/blob/main/market-contract/src/sale.rs#L146-L192\n"})}),"\n",(0,a.jsx)(t.h2,{id:"view-methods",children:"View Methods"}),"\n",(0,a.jsxs)(t.p,{children:["There are several view functions that the marketplace contract exposes. All of these functions are the same as the ",(0,a.jsx)(t.a,{href:"/tutorials/nfts/marketplace",children:"NFT zero to hero tutorial"})," except for one extra function we've added. In the ",(0,a.jsx)(t.code,{children:"src/ft_balances.rs"})," file, we've added the ",(0,a.jsx)(t.code,{children:"ft_balance_of"})," function. This function returns the balance of a given account."]}),"\n",(0,a.jsx)(t.h2,{id:"testing",children:"Testing"}),"\n",(0,a.jsxs)(t.p,{children:["Now that you ",(0,a.jsx)(t.em,{children:"hopefully"})," have a good understanding of how the marketplace contract works and how you can use the powers of the FT standard to purchase NFTs, let's move onto testing everything."]}),"\n",(0,a.jsx)(t.h3,{id:"deploying-and-initializing-the-contracts",children:"Deploying and Initializing the Contracts"}),"\n",(0,a.jsxs)(t.p,{children:["The first thing you'll want to do is deploy a new FT, NFT, and marketplace contract. Start by building and then you can use ",(0,a.jsx)(t.code,{children:"dev-accounts"})," to quickly deploy."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"yarn build && cd market-contract && ./build.sh && cd ..\n"})}),"\n",(0,a.jsxs)(t.p,{children:["To deploy the FT contract and export an environment variable, run the following command. If you've already been using dev-accounts, attach the ",(0,a.jsx)(t.code,{children:"-f"})," flag at the end of the dev-deploy command to force create a new one."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"near dev-deploy out/contract.wasm && export FT_CONTRACT=$(cat neardev/dev-account)\n"})}),"\n",(0,a.jsx)(t.p,{children:"Next, you'll deploy the NFT and marketplace contracts."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"near dev-deploy out/market.wasm -f && export MARKETPLACE_CONTRACT=$(cat neardev/dev-account) && near dev-deploy out/nft-contract.wasm -f && export NFT_CONTRACT=$(cat neardev/dev-account)\n"})}),"\n",(0,a.jsx)(t.p,{children:"Check and see if your environment variables are all correct by running the following command. Each output should be different."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"echo $FT_CONTRACT && echo $MARKETPLACE_CONTRACT && echo $NFT_CONTRACT\n"})}),"\n",(0,a.jsx)(t.p,{children:"An example output is:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"dev-1660831615048-16894106456797\ndev-1660831638497-73655245450834\ndev-1660831648913-23890994169259\n"})}),"\n",(0,a.jsx)(t.p,{children:"Once that's finished, go ahead and initialize each contract by running the following commands."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:'near call $FT_CONTRACT new_default_meta \'{"owner_id": "\'$FT_CONTRACT\'", "total_supply": "1000000000000000000000000000"}\' --accountId $FT_CONTRACT\n'})}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:'near call $MARKETPLACE_CONTRACT new \'{"owner_id": "\'$MARKETPLACE_CONTRACT\'", "ft_id": "\'$FT_CONTRACT\'"}\' --accountId $MARKETPLACE_CONTRACT\n'})}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"near call $NFT_CONTRACT new_default_meta '{\"owner_id\": \"'$NFT_CONTRACT'\"}' --accountId $NFT_CONTRACT\n"})}),"\n",(0,a.jsx)(t.p,{children:"Let's check if each contract was initialized correctly. You can do this by checking the metadata of the FT and NFT contracts:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"near view $FT_CONTRACT ft_metadata && near view $NFT_CONTRACT nft_metadata\n"})}),"\n",(0,a.jsx)(t.p,{children:"In addition, you can check the sales of the marketplace contract and it should return 0."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"near view $MARKETPLACE_CONTRACT get_supply_sales\n"})}),"\n",(0,a.jsx)(t.h3,{id:"placing-a-token-for-sale",children:"Placing a Token For Sale"}),"\n",(0,a.jsx)(t.p,{children:"Now that the marketplace and NFT contracts are initialized, let's place a token for sale. Start by creating a new buyer and seller account by running the following command. In this case, we'll create a sub-account of the FT contract."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"near create-account buyer.$FT_CONTRACT --masterAccount $FT_CONTRACT --initialBalance 25 && export BUYER_ID=buyer.$FT_CONTRACT\n"})}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"near create-account seller.$FT_CONTRACT --masterAccount $FT_CONTRACT --initialBalance 25 && export SELLER_ID=seller.$FT_CONTRACT\n"})}),"\n",(0,a.jsx)(t.p,{children:"Check if everything went well by running the following command."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"echo $BUYER_ID && echo $SELLER_ID\n"})}),"\n",(0,a.jsx)(t.p,{children:"This should return something similar to:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"buyer.dev-1660831615048-16894106456797\nseller.dev-1660831615048-16894106456797\n"})}),"\n",(0,a.jsx)(t.p,{children:"The next thing you'll want to do is mint a token to the seller."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:'near call $NFT_CONTRACT nft_mint \'{"token_id": "market-token", "metadata": {"title": "Marketplace Token", "description": "testing out the marketplace", "media": "https://bafybeiftczwrtyr3k7a2k4vutd3amkwsmaqyhrdzlhvpt33dyjivufqusq.ipfs.dweb.link/goteam-gif.gif"}, "receiver_id": "\'$SELLER_ID\'"}\' --accountId $NFT_CONTRACT --amount 0.1\n'})}),"\n",(0,a.jsxs)(t.p,{children:["Now you'll need to place the token for sale. This requires paying for storage as well as calling the ",(0,a.jsx)(t.code,{children:"nft_approve"})," function."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"near call $MARKETPLACE_CONTRACT storage_deposit --accountId $SELLER_ID --amount 0.1\n"})}),"\n",(0,a.jsxs)(t.p,{children:["In this case, we'll place the token for sale for ",(0,a.jsx)(t.code,{children:"10 gtNEAR"}),"."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:'near call $NFT_CONTRACT nft_approve \'{"token_id": "market-token", "account_id": "\'$MARKETPLACE_CONTRACT\'", "msg": "{\\"sale_conditions\\":\\"10000000000000000000000000\\"}"}\' --accountId $SELLER_ID --amount 0.1\n'})}),"\n",(0,a.jsx)(t.p,{children:"If you now query for the supply of sales again on the marketplace, it should be 1."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"near view $MARKETPLACE_CONTRACT get_supply_sales\n"})}),"\n",(0,a.jsxs)(t.p,{children:["In addition, if you query for the sales by the owner ID, it should reflect the ",(0,a.jsx)(t.code,{children:"10 gtNEAR"})," price."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"near view $MARKETPLACE_CONTRACT get_sales_by_owner_id '{\"account_id\": \"'$SELLER_ID'\"}'\n"})}),"\n",(0,a.jsx)(t.p,{children:"Expected output:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"[\n  {\n    owner_id: 'seller.dev-1660831615048-16894106456797',\n    approval_id: 0,\n    nft_contract_id: 'dev-1660831648913-23890994169259',\n    token_id: 'market-token',\n    sale_conditions: '10000000000000000000000000'\n  }\n]\n"})}),"\n",(0,a.jsx)(t.h3,{id:"deposit-fts-into-the-marketplace",children:"Deposit FTs into the Marketplace"}),"\n",(0,a.jsxs)(t.p,{children:["Now that you have an NFT up for sale for ",(0,a.jsx)(t.code,{children:"10 gtNEAR"})," on the marketplace contract, the buyer needs to deposit some FTs. The first thing you need to do is register both the marketplace contract and the buyer on the FT contract otherwise you won't be able to transfer any FTs."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"near call $FT_CONTRACT storage_deposit '{\"account_id\": \"'$MARKETPLACE_CONTRACT'\"}' --accountId $FT_CONTRACT --amount 0.1\n"})}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"near call $FT_CONTRACT storage_deposit '{\"account_id\": \"'$BUYER_ID'\"}' --accountId $FT_CONTRACT --amount 0.1\n"})}),"\n",(0,a.jsxs)(t.p,{children:["After this, you should transfer the buyer some FTs so that they can deposit at least ",(0,a.jsx)(t.code,{children:"10 gtNEAR"}),". Lets start with 50 ",(0,a.jsx)(t.code,{children:"gtNEAR"}),". Run the following command to send the buyer FTs on behalf of the FT contract owner."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:'near call $FT_CONTRACT ft_transfer \'{"receiver_id": "\'$BUYER_ID\'", "amount": "50000000000000000000000000", "memo": "Go Team!"}\' --accountId $FT_CONTRACT --depositYocto 1\n'})}),"\n",(0,a.jsx)(t.p,{children:"You'll now need to deposit those tokens into the marketplace contract."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:'near call $FT_CONTRACT ft_transfer_call \'{"receiver_id": "\'$MARKETPLACE_CONTRACT\'", "amount": "50000000000000000000000000", "msg": "Wooooooo!"}\' --accountId $BUYER_ID --depositYocto 1 --gas 200000000000000\n'})}),"\n",(0,a.jsxs)(t.p,{children:["If you now query for your balance on the marketplace contract, it should be ",(0,a.jsx)(t.code,{children:"50 gtNEAR"}),"."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"near view $MARKETPLACE_CONTRACT ft_deposits_of '{\"account_id\": \"'$BUYER_ID'\"}'\n"})}),"\n",(0,a.jsx)(t.h3,{id:"purchasing-the-nft",children:"Purchasing the NFT"}),"\n",(0,a.jsxs)(t.p,{children:["Now that the buyer has deposited FTs into the marketplace and the token is up for sale, let's go ahead and make an offer! If you try to offer more FTs than what you have, the contract will panic. Similarly, if you try to offer lower than the sale price, the contract will also panic. Since the sale price is ",(0,a.jsx)(t.code,{children:"10 gtNEAR"}),", let's try to offer ",(0,a.jsx)(t.code,{children:"20 gtNEAR"})," and see what happens. The expected outcome is:"]}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"The NFT will be transferred to the buyer"}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"20 gtNEAR"})," will be sent to the seller"]}),"\n",(0,a.jsxs)(t.li,{children:["The buyer will have ",(0,a.jsx)(t.code,{children:"30 gtNEAR"})," left to withdraw."]}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"There is one thing we're forgetting, however. We need to make sure that the seller is registered on the FT contract so let's go ahead and do that now."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"near call $FT_CONTRACT storage_deposit '{\"account_id\": \"'$SELLER_ID'\"}' --accountId $FT_CONTRACT --amount 0.1\n"})}),"\n",(0,a.jsx)(t.p,{children:"Now let's make an offer!"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:'near call $MARKETPLACE_CONTRACT offer \'{"nft_contract_id": "\'$NFT_CONTRACT\'", "token_id": "market-token", "amount": "20000000000000000000000000"}\' --accountId $BUYER_ID --depositYocto 1 --gas 300000000000000\n'})}),"\n",(0,a.jsx)(t.p,{children:"If everything went well, you should see 2 events in your terminal. One event is the NFT transfer coming from the NFT contract when the token was transferred from the seller to the buyer. The other event is the FT transfer for when the seller receives their fungible tokens."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:'Log [dev-1660831638497-73655245450834]: Memo: payout from market\nLog [dev-1660831638497-73655245450834]: EVENT_JSON:{"standard":"nep171","version":"nft-1.0.0","event":"nft_transfer","data":[{"authorized_id":"dev-1660831638497-73655245450834","old_owner_id":"seller.dev-1660831615048-16894106456797","new_owner_id":"buyer.dev-1660831615048-16894106456797","token_ids":["market-token"],"memo":"payout from market"}]}\nReceipt: BBvHig5zg1n2vmxFPTpxED4FNCAU1ZzZ3H8EBqqaeRw5\nLog [dev-1660831638497-73655245450834]: EVENT_JSON:{"standard":"nep141","version":"1.0.0","event":"ft_transfer","data":[{"old_owner_id":"dev-1660831638497-73655245450834","new_owner_id":"seller.dev-1660831615048-16894106456797","amount":"20000000000000000000000000","memo":"Sale from marketplace"}]}\n'})}),"\n",(0,a.jsxs)(t.p,{children:["Let's call some view methods to double check if everything went well. First let's check if the seller now has ",(0,a.jsx)(t.code,{children:"20 gtNEAR"}),"."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"near view $FT_CONTRACT ft_balance_of '{\"account_id\": \"'$SELLER_ID'\"}'\n"})}),"\n",(0,a.jsxs)(t.p,{children:["Next, let's check if the buyer has ",(0,a.jsx)(t.code,{children:"30 gtNEAR"})," left to withdraw."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"near view $MARKETPLACE_CONTRACT ft_deposits_of '{\"account_id\": \"'$BUYER_ID'\"}'\n"})}),"\n",(0,a.jsx)(t.p,{children:"Finally, let's check if the NFT is now owned by the buyer."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:'near view $NFT_CONTRACT nft_token \'{"token_id": "market-token"}\'\n'})}),"\n",(0,a.jsx)(t.h3,{id:"withdrawing-the-excess-deposits",children:"Withdrawing the Excess Deposits"}),"\n",(0,a.jsxs)(t.p,{children:["Now that the buyer purchased the NFT with ",(0,a.jsx)(t.code,{children:"20 gtNEAR"}),", they should have ",(0,a.jsx)(t.code,{children:"30 gtNEAR"})," left to withdraw. If they withdraw the tokens, they should be left with a balance of ",(0,a.jsx)(t.code,{children:"30 gtNEAR"})," on the FT contract."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:'near call $MARKETPLACE_CONTRACT ft_withdraw \'{"amount": "30000000000000000000000000"}\' --accountId $BUYER_ID --depositYocto 1 --gas 300000000000000\n'})}),"\n",(0,a.jsxs)(t.p,{children:["If you now query for the buyer's balance, it should be ",(0,a.jsx)(t.code,{children:"30 gtNEAR"}),"."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"near view $FT_CONTRACT ft_balance_of '{\"account_id\": \"'$BUYER_ID'\"}'\n"})}),"\n",(0,a.jsxs)(t.p,{children:["And just like that you're finished! You went through and put an NFT up for sale and purchased it using fungible tokens! ",(0,a.jsx)(t.strong,{children:"Go team \ud83d\ude80"})]}),"\n",(0,a.jsx)(t.h2,{id:"t\u1ed5ng-k\u1ebft",children:"T\u1ed5ng k\u1ebft"}),"\n",(0,a.jsxs)(t.p,{children:["Trong h\u01b0\u1edbng d\u1eabn n\xe0y, b\u1ea1n \u0111\xe3 h\u1ecdc v\u1ec1 nh\u1eefng th\u1ee9 c\u01a1 b\u1ea3n c\u1ee7a m\u1ed9t marketplace contract v\xe0 n\xf3 l\xe0m vi\u1ec7c nh\u01b0 th\u1ebf n\xe0o. You went through the core logic both at a high level and looked at the code. You deployed an NFT, marketplace, and FT contract, initialized them all and then put an NFT for sale and sold it for fungible tokens! What an amazing experience! Go forth and expand these contracts to meet whatever needs you have. The world is your oyster and thank you so much for following along with this tutorial series. Don't hesitate to ask for help or clarification on anything in our discord or social media channels. ",(0,a.jsx)(t.strong,{children:"Go Team!"})]})]})}function d(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},11151:(e,t,n)=>{n.d(t,{Z:()=>i,a:()=>o});var a=n(67294);const r={},s=a.createContext(r);function o(e){const t=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),a.createElement(s.Provider,{value:t},e.children)}}}]);