"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9719],{53311:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>l,metadata:()=>c,toc:()=>u});var r=a(85893),t=a(11151),i=a(74866),s=a(85162);const l={id:"near-cli",title:"NEAR CLI",hide_table_of_contents:!1},o=void 0,c={id:"primitives/nft/interacting/near-cli",title:"NEAR CLI",description:"This section shows how to interact with an NFT contract from your shell using near-cli.",source:"@site/../docs/7.primitives/nft/interacting/near-cli.md",sourceDirName:"7.primitives/nft/interacting",slug:"/primitives/nft/interacting/near-cli",permalink:"/vi/primitives/nft/interacting/near-cli",draft:!1,unlisted:!1,editUrl:"https://github.com/near/docs/edit/master/website/../docs/7.primitives/nft/interacting/near-cli.md",tags:[],version:"current",lastUpdatedBy:"garikbesson",lastUpdatedAt:1704192266,formattedLastUpdatedAt:"2 thg 1, 2024",frontMatter:{id:"near-cli",title:"NEAR CLI",hide_table_of_contents:!1},sidebar:"primitives",previous:{title:"Smart Contract",permalink:"/vi/primitives/nft/interacting/smart-contract"},next:{title:"Additional Resources",permalink:"/vi/primitives/nft/additional-resources"}},d={},u=[{value:"Mint a NFT",id:"mint-a-nft",level:2},{value:"Buy a NFT",id:"buy-a-nft",level:2},{value:"Query NFT data",id:"query-nft-data",level:2},{value:"Transfer a NFT",id:"transfer-a-nft",level:2},{value:"List a NFT for sale",id:"list-a-nft-for-sale",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,t.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["This section shows how to interact with an NFT contract from your shell using ",(0,r.jsx)(n.a,{href:"/vi/tools/near-cli",children:(0,r.jsx)(n.code,{children:"near-cli"})}),"."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"mint-a-nft",children:"Mint a NFT"}),"\n",(0,r.jsxs)(i.Z,{children:[(0,r.jsx)(s.Z,{value:"NFT Primitive",label:"NFT Primitive",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'near call nft.primitives.near nft_mint \'{"token_id": "1", "receiver_id": "bob.near", "token_metadata": {"title": "NFT Primitive Token", "description": "Awesome NFT Primitive Token", "media": "string"}}\' --depositYocto 10000000000000000000000, --accountId bob.near\n'})})}),(0,r.jsxs)(s.Z,{value:"Paras",label:"Paras",children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'near call x.paras.near nft_mint \'{"token_series_id": "490641", "receiver_id": "bob.near"}\' --depositYocto 10000000000000000000000 --accountId bob.near\n'})}),(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["In order to use ",(0,r.jsx)(n.code,{children:"nft_mint"})," method of the ",(0,r.jsx)(n.code,{children:"x.paras.near"})," contract you have to be a creator of a particular token series."]})})]}),(0,r.jsxs)(s.Z,{value:"Mintbase",label:"Mintbase",children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'near call thomasettorreiv.mintbase1.near nft_batch_mint \'{"num_to_mint": 1, "owner_id": "bob.near", "metadata": {}}\' --accountId bob.near --depositYocto 10000000000000000000000\n'})}),(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["In order to use ",(0,r.jsx)(n.code,{children:"nft_batch_mint"})," method of Mintbase store contract your account have to be a in the contract minters list."]})})]})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"buy-a-nft",children:"Buy a NFT"}),"\n",(0,r.jsxs)(i.Z,{children:[(0,r.jsxs)(s.Z,{value:"Paras",label:"Paras",default:!0,children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'near call x.paras.near buy \'{"token_series_id": "299102", "receiver_id": "bob.near"}\' --accountId bob.near --deposit 0.20574\n'})}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example response:"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'"299102:1"\n'})})]}),(0,r.jsxs)(s.Z,{value:"Mintbase",label:"Mintbase",children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'near call simple.market.mintbase1.near buy \'{"nft_contract_id": "rubennnnnnnn.mintbase1.near", "token_id": "38"}\' --accountId bob.near --deposit 0.001\n'})}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example response:"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "payout": {\n    "rub3n.near": "889200000000000000000",\n    "rubenm4rcus.near": "85800000000000000000"\n  }\n}\n'})})]})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"query-nft-data",children:"Query NFT data"}),"\n",(0,r.jsxs)(i.Z,{children:[(0,r.jsxs)(s.Z,{value:"NFT Primitive",label:"NFT Primitive",default:!0,children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'near view nft.primitives.near nft_token \'{"token_id": "1"}\'\n'})}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example response:"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "token_id": "1",\n  "owner_id": "bob.near",\n  "metadata": {\n    "title": "string", // ex. "Arch Nemesis: Mail Carrier" or "Parcel #5055"\n    "description": "string", // free-form description\n    "media": "string", // URL to associated media, preferably to decentralized, content-addressed storage\n    "media_hash": "string", // Base64-encoded sha256 hash of content referenced by the `media` field. Required if `media` is included.\n    "copies": 1, // number of copies of this set of metadata in existence when token was minted.\n    "issued_at": 1642053411068358156, // When token was issued or minted, Unix epoch in milliseconds\n    "expires_at": 1642053411168358156, // When token expires, Unix epoch in milliseconds\n    "starts_at": 1642053411068358156, // When token starts being valid, Unix epoch in milliseconds\n    "updated_at": 1642053411068358156, // When token was last updated, Unix epoch in milliseconds\n    "extra": "string", // anything extra the NFT wants to store on-chain. Can be stringified JSON.\n    "reference": "string", // URL to an off-chain JSON file with more info.\n    "reference_hash": "string" // Base64-encoded sha256 hash of JSON from reference field. Required if `reference` is included.\n  }\n}\n'})})]}),(0,r.jsxs)(s.Z,{value:"Paras",label:"Paras",children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'near view x.paras.near nft_token \'{"token_id": "84686:1154"}\'\n'})}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example response:"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "token_id": "84686:1154",\n  "owner_id": "bob.near",\n  "metadata": {\n    "title": "Tokenfox Silver Coin #1154",\n    "description": null,\n    "media": "bafkreihpapfu7rzsmejjgl2twllge6pbrfmqaahj2wkz6nq55c6trhhtrq",\n    "media_hash": null,\n    "copies": 4063,\n    "issued_at": "1642053411068358156",\n    "expires_at": null,\n    "starts_at": null,\n    "updated_at": null,\n    "extra": null,\n    "reference": "bafkreib6uj5kxbadfvf6qes5flema7jx6u5dj5zyqcneaoyqqzlm6kpu5a",\n    "reference_hash": null\n  },\n  "approved_account_ids": {}\n}\n'})})]}),(0,r.jsxs)(s.Z,{value:"Mintbase",label:"Mintbase",children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'near view anthropocene.mintbase1.near nft_token \'{"token_id": "17960"}\'\n'})}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example response:"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "token_id": "17960",\n  "owner_id": "876f40299dd919f39252863e2136c4e1922cd5f78759215474cbc8f1fc361e14",\n  "approved_account_ids": {},\n  "metadata": {\n    "title": null,\n    "description": null,\n    "media": null,\n    "media_hash": null,\n    "copies": 1,\n    "issued_at": null,\n    "expires_at": null,\n    "starts_at": null,\n    "updated_at": null,\n    "extra": null,\n    "reference": "F-30s_uQ3ZdAHZClY4DYatDPapaIRNLju41RxfMXC24",\n    "reference_hash": null\n  },\n  "royalty": {\n    "split_between": {\n      "seventhage.near": {\n        "numerator": 10000\n      }\n    },\n    "percentage": {\n      "numerator": 100\n    }\n  },\n  "split_owners": null,\n  "minter": "anthropocene.seventhage.near",\n  "loan": null,\n  "composeable_stats": { "local_depth": 0, "cross_contract_children": 0 },\n  "origin_key": null\n}\n'})}),(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["When someone creates a NFT on Mintbase they need to deploy their own NFT contract using Mintbase factory. Those smart contract are subaccounts of mintbase1.near, e.g. ",(0,r.jsx)(n.code,{children:"anthropocene.mintbase1.near"}),"."]})})]})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"transfer-a-nft",children:"Transfer a NFT"}),"\n",(0,r.jsxs)(i.Z,{children:[(0,r.jsx)(s.Z,{value:"NFT Primitive",label:"NFT Primitive",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'near call nft.primitives.near nft_transfer \'{"token_id": "1", "receiver_id": "bob.near"}\' --accountId bob.near --deposit 0.000000000000000000000001\n'})})}),(0,r.jsx)(s.Z,{value:"Paras",label:"Paras",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'near call x.paras.near nft_transfer \'{"token_id": "490641", "receiver_id": "bob.near"}\' --accountId bob.near --deposit 0.000000000000000000000001\n'})})}),(0,r.jsx)(s.Z,{value:"Mintbase",label:"Mintbase",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'near call thomasettorreiv.mintbase1.near nft_transfer \'{"token_id": "490641" "receiver_id": "bob.near"}\' --accountId bob.near --deposit 0.000000000000000000000001\n'})})})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"list-a-nft-for-sale",children:"List a NFT for sale"}),"\n",(0,r.jsxs)(n.p,{children:["Basic NFT contracts following ",(0,r.jsx)(n.a,{href:"https://nomicon.io/Standards/Tokens/NonFungibleToken",children:"the NEP-171 and NEP-177 standards"})," do not implement marketplace functionality."]}),"\n",(0,r.jsxs)(n.p,{children:["For this purpose, there are ecosystem apps such as ",(0,r.jsx)(n.a,{href:"https://paras.id/",children:"Paras"})," or ",(0,r.jsx)(n.a,{href:"https://www.mintbase.xyz/",children:"Mintbase"}),", that use dedicated marketplace contracts."]}),"\n",(0,r.jsx)(n.p,{children:"In order to put a NFT for a sale on a marketplace you need to do two actions:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Cover data storage costs in the marketplace contract."}),"\n",(0,r.jsx)(n.li,{children:"Approve the marketplace to sell the NFT in your NFT contract."}),"\n"]}),"\n",(0,r.jsxs)(i.Z,{children:[(0,r.jsxs)(s.Z,{value:"Paras",label:"Paras",children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'near call marketplace.paras.near storage_deposit \'{"receiver_id": "bob.near"}\' --accountId bob.near --deposit 0.00939\n\nnear call nft.primitives.near nft_approve \'{"token_id": "1e95238d266e5497d735eb30", "account_id": "marketplace.paras.near", "msg": {"price": "200000000000000000000000", "market_type": "sale", "ft_token_id": "near"}}\' --accountId bob.near\n'})}),(0,r.jsxs)(n.p,{children:["Method ",(0,r.jsx)(n.code,{children:"nft_approve"})," of a NFT contract also calls the ",(0,r.jsx)(n.code,{children:"nft_on_approve"})," method in ",(0,r.jsx)(n.code,{children:"marketplace.paras.near"})," as a callback."]})]}),(0,r.jsxs)(s.Z,{value:"Mintbase",label:"Mintbase",children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'near call simple.market.mintbase1.near deposit_storage \'{"autotransfer": "true"}\' --accountId bob.near --deposit 0.00939\n\nnear call nft.primitives.near nft_approve \'{"token_id": "3c46b76cbd48e65f2fc88473", "account_id": "simple.market.mintbase1.near", "msg": {"price": "200000000000000000000000"}}\' --accountId bob.near\n'})}),(0,r.jsxs)(n.p,{children:["Method ",(0,r.jsx)(n.code,{children:"nft_approve"})," of a NFT contract also calls the ",(0,r.jsx)(n.code,{children:"nft_on_approve"})," method in ",(0,r.jsx)(n.code,{children:"simple.market.mintbase1.near"})," as a callback."]})]})]}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.p,{children:["More examples of how to mint NFT, query metadata, attach NFTs to a contract call using ",(0,r.jsx)(n.code,{children:"near-cli"})," you can ",(0,r.jsx)(n.a,{href:"/develop/relevant-contracts/nft",children:"read here"}),"."]})})]})}function p(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},85162:(e,n,a)=>{a.d(n,{Z:()=>s});a(67294);var r=a(36905);const t={tabItem:"tabItem_Ymn6"};var i=a(85893);function s(e){var n=e.children,a=e.hidden,s=e.className;return(0,i.jsx)("div",{role:"tabpanel",className:(0,r.Z)(t.tabItem,s),hidden:a,children:n})}},74866:(e,n,a)=>{a.d(n,{Z:()=>k});var r=a(67294),t=a(36905),i=a(12466),s=a(16550),l=a(20469),o=a(91980),c=a(67392),d=a(50012);function u(e){var n,a;return null!=(n=null==(a=r.Children.toArray(e).filter((function(e){return"\n"!==e})).map((function(e){if(!e||(0,r.isValidElement)(e)&&((n=e.props)&&"object"==typeof n&&"value"in n))return e;var n;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:a.filter(Boolean))?n:[]}function h(e){var n=e.values,a=e.children;return(0,r.useMemo)((function(){var e=null!=n?n:function(e){return u(e).map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes,default:n.default}}))}(a);return function(e){var n=(0,c.l)(e,(function(e,n){return e.value===n.value}));if(n.length>0)throw new Error('Docusaurus error: Duplicate values "'+n.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[n,a])}function p(e){var n=e.value;return e.tabValues.some((function(e){return e.value===n}))}function f(e){var n=e.queryString,a=void 0!==n&&n,t=e.groupId,i=(0,s.k6)(),l=function(e){var n=e.queryString,a=void 0!==n&&n,r=e.groupId;if("string"==typeof a)return a;if(!1===a)return null;if(!0===a&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=r?r:null}({queryString:a,groupId:t});return[(0,o._X)(l),(0,r.useCallback)((function(e){if(l){var n=new URLSearchParams(i.location.search);n.set(l,e),i.replace(Object.assign({},i.location,{search:n.toString()}))}}),[l,i])]}function m(e){var n,a,t,i,s=e.defaultValue,o=e.queryString,c=void 0!==o&&o,u=e.groupId,m=h(e),b=(0,r.useState)((function(){return function(e){var n,a=e.defaultValue,r=e.tabValues;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(a){if(!p({value:a,tabValues:r}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+a+'" but none of its children has the corresponding value. Available values are: '+r.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return a}var t=null!=(n=r.find((function(e){return e.default})))?n:r[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:s,tabValues:m})})),x=b[0],v=b[1],j=f({queryString:c,groupId:u}),g=j[0],_=j[1],k=(n=function(e){return e?"docusaurus.tab."+e:null}({groupId:u}.groupId),a=(0,d.Nk)(n),t=a[0],i=a[1],[t,(0,r.useCallback)((function(e){n&&i.set(e)}),[n,i])]),N=k[0],y=k[1],T=function(){var e=null!=g?g:N;return p({value:e,tabValues:m})?e:null}();return(0,l.Z)((function(){T&&v(T)}),[T]),{selectedValue:x,selectValue:(0,r.useCallback)((function(e){if(!p({value:e,tabValues:m}))throw new Error("Can't select invalid tab value="+e);v(e),_(e),y(e)}),[_,y,m]),tabValues:m}}var b=a(72389);const x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=a(85893);function j(e){var n=e.className,a=e.block,r=e.selectedValue,s=e.selectValue,l=e.tabValues,o=[],c=(0,i.o5)().blockElementScrollPositionUntilNextRender,d=function(e){var n=e.currentTarget,a=o.indexOf(n),t=l[a].value;t!==r&&(c(n),s(t))},u=function(e){var n,a=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":var r,t=o.indexOf(e.currentTarget)+1;a=null!=(r=o[t])?r:o[0];break;case"ArrowLeft":var i,s=o.indexOf(e.currentTarget)-1;a=null!=(i=o[s])?i:o[o.length-1]}null==(n=a)||n.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,t.Z)("tabs",{"tabs--block":a},n),children:l.map((function(e){var n=e.value,a=e.label,i=e.attributes;return(0,v.jsx)("li",Object.assign({role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:function(e){return o.push(e)},onKeyDown:u,onClick:d},i,{className:(0,t.Z)("tabs__item",x.tabItem,null==i?void 0:i.className,{"tabs__item--active":r===n}),children:null!=a?a:n}),n)}))})}function g(e){var n=e.lazy,a=e.children,t=e.selectedValue,i=(Array.isArray(a)?a:[a]).filter(Boolean);if(n){var s=i.find((function(e){return e.props.value===t}));return s?(0,r.cloneElement)(s,{className:"margin-top--md"}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:i.map((function(e,n){return(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==t})}))})}function _(e){var n=m(e);return(0,v.jsxs)("div",{className:(0,t.Z)("tabs-container",x.tabList),children:[(0,v.jsx)(j,Object.assign({},e,n)),(0,v.jsx)(g,Object.assign({},e,n))]})}function k(e){var n=(0,b.Z)();return(0,v.jsx)(_,Object.assign({},e,{children:u(e.children)}),String(n))}},11151:(e,n,a)=>{a.d(n,{Z:()=>l,a:()=>s});var r=a(67294);const t={},i=r.createContext(t);function s(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);