"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5237],{45642:(e,c,n)=>{n.r(c),n.d(c,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>r});var t=n(85893),a=n(11151);const s={id:"creating-accounts",title:"Creating Accounts"},o=void 0,i={id:"concepts/basics/accounts/creating-accounts",title:"Creating Accounts",description:"The simplest way to create NEAR accounts is through the NEAR Wallet, however, you can also create accounts using local tools.",source:"@site/i18n/vi/docusaurus-plugin-content-docs/current/1.concepts/basics/accounts/creating-accounts.md",sourceDirName:"1.concepts/basics/accounts",slug:"/concepts/basics/accounts/creating-accounts",permalink:"/vi/concepts/basics/accounts/creating-accounts",draft:!1,unlisted:!1,editUrl:"https://github.com/near/docs/edit/master/website/../docs/1.concepts/basics/accounts/creating-accounts.md",tags:[],version:"current",lastUpdatedBy:"Github Actions",lastUpdatedAt:1704996595,formattedLastUpdatedAt:"11 thg 1, 2024",frontMatter:{id:"creating-accounts",title:"Creating Accounts"},sidebar:"concepts",previous:{title:"State",permalink:"/vi/concepts/basics/accounts/state"},next:{title:"Overview",permalink:"/vi/concepts/basics/transactions/overview"}},l={},r=[{value:"The NEAR Wallet",id:"the-near-wallet",level:2},{value:"Testnet",id:"testnet",level:4},{value:"Mainnet",id:"mainnet",level:4},{value:"Local Implicit Account",id:"local-implicit-account",level:2},{value:"1. Create a ED25519 key-pair locally using near cli",id:"1-create-a-ed25519-key-pair-locally-using-near-cli",level:4},{value:"2. Convert the public_key to an account ID.",id:"converting-a-public-key-to-an-account-id",level:4},{value:"Local Named Account",id:"local-named-account",level:2}];function d(e){const c={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h2:"h2",h4:"h4",hr:"hr",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",pre:"pre",strong:"strong",...(0,a.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(c.p,{children:["The simplest way to create NEAR accounts is through the ",(0,t.jsx)(c.a,{href:"https://mynearwallet.com/",children:"NEAR Wallet"}),", however, you can also create accounts using local tools."]}),"\n",(0,t.jsx)(c.hr,{}),"\n",(0,t.jsx)(c.h2,{id:"the-near-wallet",children:"The NEAR Wallet"}),"\n",(0,t.jsx)(c.p,{children:"The NEAR wallet is our web-based user-friendly wallet. You can readily use it without installing any software or add-ons (e.g browser extensions) on your devices."}),"\n",(0,t.jsx)(c.h4,{id:"testnet",children:"Testnet"}),"\n",(0,t.jsxs)(c.p,{children:["In ",(0,t.jsx)(c.strong,{children:"testnet"})," you can directly create ",(0,t.jsx)(c.a,{href:"/vi/concepts/basics/accounts/account-id#named-accounts",children:"named accounts"})," such as ",(0,t.jsx)(c.code,{children:"your-name.near"}),". Simply go to the ",(0,t.jsx)(c.a,{href:"https://testnet.mynearwallet.com/create",children:"wallet"}),", pick a name of your choice, and you are ready to go. Remember to save your mnemonic phrase somewhere safe."]}),"\n",(0,t.jsx)(c.h4,{id:"mainnet",children:"Mainnet"}),"\n",(0,t.jsxs)(c.p,{children:["In the ",(0,t.jsx)(c.strong,{children:"mainnet"})," ",(0,t.jsx)(c.a,{href:"https://mynearwallet.com/",children:"wallet"})," you will be first given an ",(0,t.jsx)(c.a,{href:"/vi/concepts/basics/accounts/account-id#implicit-accounts-implicit-accounts",children:"implicit account"}),", which you need to fund. After that, you can use your ",(0,t.jsx)(c.a,{href:"/vi/concepts/basics/accounts/account-id#implicit-accounts-implicit-accounts",children:"implicit account"})," to create a ",(0,t.jsx)(c.a,{href:"/vi/concepts/basics/accounts/account-id#named-accounts",children:"named one"}),"."]}),"\n",(0,t.jsx)(c.hr,{}),"\n",(0,t.jsx)(c.h2,{id:"local-implicit-account",children:"Local Implicit Account"}),"\n",(0,t.jsx)(c.p,{children:"To create an implicit account locally, it takes two steps: create a key-pair locally, and then you derive its address."}),"\n",(0,t.jsxs)(c.blockquote,{children:["\n",(0,t.jsx)(c.p,{children:"Open your teminal/cmd to run the command that will allow you perform the steps stated above"}),"\n"]}),"\n",(0,t.jsxs)(c.h4,{id:"1-create-a-ed25519-key-pair-locally-using-near-cli",children:["1. Create a ED25519 key-pair locally using ",(0,t.jsx)(c.a,{href:"/vi/tools/near-cli",children:"near cli"})]}),"\n",(0,t.jsx)(c.pre,{children:(0,t.jsx)(c.code,{className:"language-bash",children:"near generate-key my-new-account\n"})}),"\n",(0,t.jsxs)(c.blockquote,{children:["\n",(0,t.jsxs)(c.p,{children:["A new key-pair will be stored at ",(0,t.jsx)(c.code,{children:"~/.near-credentials/testnet/my-new-account.json"}),"."]}),"\n"]}),"\n",(0,t.jsx)(c.h4,{id:"converting-a-public-key-to-an-account-id",children:"2. Convert the public_key to an account ID."}),"\n",(0,t.jsxs)(c.p,{children:["Use ",(0,t.jsx)(c.a,{href:"/vi/tools/near-cli",children:(0,t.jsx)(c.code,{children:"near-cli"})})," to convert the ",(0,t.jsx)(c.code,{children:"public_key"})," from the ",(0,t.jsx)(c.code,{children:".json"})," file to its related NEAR account address."]}),"\n",(0,t.jsxs)(c.blockquote,{children:["\n",(0,t.jsx)(c.p,{children:"Open the javascript console of near-cli using the command below"}),"\n"]}),"\n",(0,t.jsx)(c.pre,{children:(0,t.jsx)(c.code,{className:"language-bash",children:"near repl\n"})}),"\n",(0,t.jsx)(c.pre,{children:(0,t.jsx)(c.code,{className:"language-javascript",children:"// Paste this code in the javascript console\nconst pk58 = 'ed25519:<data>'\nnearAPI.utils.PublicKey.fromString(pk58).data.hexSlice()\n"})}),"\n",(0,t.jsxs)(c.p,{children:["The output string will be the account ID in hex (without ",(0,t.jsx)(c.code,{children:"'"}),"), for example ",(0,t.jsx)(c.code,{children:"98793cd91a3f870fb126f66285808c7e094afcfc4eda8a970f6648cdf0dbd6de"}),"."]}),"\n",(0,t.jsxs)(c.p,{children:["You can share this ",(0,t.jsx)(c.code,{children:"id"})," with anyone to recieve Near tokens. At least ",(0,t.jsx)(c.strong,{children:"0.001\u24c3"})," is needed to start using the account."]}),"\n",(0,t.jsxs)(c.admonition,{type:"tip",children:[(0,t.jsxs)(c.mdxAdmonitionTitle,{children:["You can also use ",(0,t.jsx)(c.strong,{children:"other languages"})," to infer the implicit address, for example, in python you can use the ",(0,t.jsx)(c.code,{children:"base58"})," package: ",(0,t.jsx)(c.code,{children:"base58.b58decode(<data>).hex()"})," :::"]}),(0,t.jsx)(c.hr,{}),(0,t.jsx)(c.h2,{id:"local-named-account",children:"Local Named Account"}),(0,t.jsxs)(c.p,{children:["In order to create a named account you have to ask the relevant smart contract to create a sub-account for you: ",(0,t.jsx)(c.code,{children:"near"})," in mainnet, and ",(0,t.jsx)(c.code,{children:"testnet"})," in testnet."]}),(0,t.jsxs)(c.p,{children:["You can use ",(0,t.jsx)(c.code,{children:"near-cli"})," for this:"]}),(0,t.jsx)(c.pre,{children:(0,t.jsx)(c.code,{className:"language-bash",children:'near call testnet create_account \'{"new_account_id": "<account-name>.testnet", "new_public_key": "ed25519:<data>"}\' --deposit 0.00182 --accountId <account-with-funds>\n'})}),(0,t.jsxs)(c.blockquote,{children:["\n",(0,t.jsxs)(c.p,{children:["Notice that you need an ",(0,t.jsx)(c.strong,{children:"already funded"})," account, because you are making a contract call."]}),"\n"]}),(0,t.jsxs)(c.admonition,{type:"tip",children:[(0,t.jsxs)(c.mdxAdmonitionTitle,{children:["The public key that you pass will become the ",(0,t.jsx)(c.a,{href:"/vi/concepts/basics/accounts/access-keys#full-access-keys-full-access-keys",children:"Full Access key"})," of the account. :::"]}),(0,t.jsx)(c.admonition,{type:"info",children:(0,t.jsxs)(c.mdxAdmonitionTitle,{children:["For ",(0,t.jsx)(c.strong,{children:"sub-accounts"})," check the ",(0,t.jsx)(c.a,{href:"/vi/tools/near-cli#near-create-account",children:"near-cli create-account"})," docs. :::"]})})]})]})]})}function u(e={}){const{wrapper:c}={...(0,a.a)(),...e.components};return c?(0,t.jsx)(c,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},11151:(e,c,n)=>{n.d(c,{Z:()=>i,a:()=>o});var t=n(67294);const a={},s=t.createContext(a);function o(e){const c=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(c):{...c,...e}}),[c,e])}function i(e){let c;return c=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),t.createElement(s.Provider,{value:c},e.children)}}}]);